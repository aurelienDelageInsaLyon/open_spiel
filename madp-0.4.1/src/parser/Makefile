# Makefile.in generated by automake 1.16.1 from Makefile.am.
# src/parser/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Contains several project-wide Makefile options



am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/madp
pkgincludedir = $(includedir)/madp
pkglibdir = $(libdir)/madp
pkglibexecdir = $(libexecdir)/madp
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
#am__append_1 = -DDARWIN
subdir = src/parser
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ac_cplex.m4 \
	$(top_srcdir)/m4/cuda.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(libMADPParser_la_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" \
	"$(DESTDIR)$(libMADPParser_ladir)"
LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)
am__objects_1 = libMADPParser_la-ParserDPOMDPFormat_Spirit.lo \
	libMADPParser_la-ParserPOMDPFormat_Spirit.lo \
	libMADPParser_la-ParserTOIDecPOMDPDiscrete.lo \
	libMADPParser_la-ParserTOIDecMDPDiscrete.lo \
	libMADPParser_la-ParserTOIFactoredRewardDecPOMDPDiscrete.lo \
	libMADPParser_la-ParserTOICompactRewardDecPOMDPDiscrete.lo \
	libMADPParser_la-ParserProbModelXML.lo \
	libMADPParser_la-ParserPOMDPDiscrete.lo \
	libMADPParser_la-MADPParser.lo
am__objects_2 =
am__objects_3 = $(am__objects_2)
am__objects_4 = $(am__objects_1) $(am__objects_3)
am_libMADPParser_la_OBJECTS = $(am__objects_4)
libMADPParser_la_OBJECTS = $(am_libMADPParser_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/libMADPParser_la-MADPParser.Plo \
	./$(DEPDIR)/libMADPParser_la-ParserDPOMDPFormat_Spirit.Plo \
	./$(DEPDIR)/libMADPParser_la-ParserPOMDPDiscrete.Plo \
	./$(DEPDIR)/libMADPParser_la-ParserPOMDPFormat_Spirit.Plo \
	./$(DEPDIR)/libMADPParser_la-ParserProbModelXML.Plo \
	./$(DEPDIR)/libMADPParser_la-ParserTOICompactRewardDecPOMDPDiscrete.Plo \
	./$(DEPDIR)/libMADPParser_la-ParserTOIDecMDPDiscrete.Plo \
	./$(DEPDIR)/libMADPParser_la-ParserTOIDecPOMDPDiscrete.Plo \
	./$(DEPDIR)/libMADPParser_la-ParserTOIFactoredRewardDecPOMDPDiscrete.Plo
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libMADPParser_la_SOURCES)
DIST_SOURCES = $(libMADPParser_la_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(libMADPParser_la_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/config/Make-rules $(top_srcdir)/depcomp \
	$(top_srcdir)/src/Makefile.custom
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/aurelien/open_spiel/open_spiel/madp-0.4.1/missing aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} /home/aurelien/open_spiel/open_spiel/madp-0.4.1/missing autoconf
AUTOHEADER = ${SHELL} /home/aurelien/open_spiel/open_spiel/madp-0.4.1/missing autoheader
AUTOMAKE = ${SHELL} /home/aurelien/open_spiel/open_spiel/madp-0.4.1/missing automake-1.16
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPLEX_INCLUDES = 
CPLEX_LDFLAGS = 
CPLEX_LIBS = 
CPP = gcc -E
CPPFLAGS = 
CSTANDARD = -std=c++98
CSTD = -std=c++98
CSTD11 = -std=c++11
CSTDGNU = -std=gnu++03
CSTDGNU11 = -std=gnu++11
CUDA_CPPFLAGS = -I/usr/local/cuda/include
CUDA_LDFLAGS = -L/usr/local/cuda/lib64
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = -lm -ldl -lm -lstdc++ 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} /home/aurelien/open_spiel/open_spiel/madp-0.4.1/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /usr/bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = madp
PACKAGE_BUGREPORT = madp-users@omni.isr.ist.utl.pt
PACKAGE_NAME = MADP
PACKAGE_STRING = MADP 0.4.1
PACKAGE_TARNAME = madp
PACKAGE_URL = 
PACKAGE_VERSION = 0.4.1
PATH_SEPARATOR = :
POW_LIB = 
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 0.4.1
abs_builddir = /home/aurelien/open_spiel/open_spiel/madp-0.4.1/src/parser
abs_srcdir = /home/aurelien/open_spiel/open_spiel/madp-0.4.1/src/parser
abs_top_builddir = /home/aurelien/open_spiel/open_spiel/madp-0.4.1
abs_top_srcdir = /home/aurelien/open_spiel/open_spiel/madp-0.4.1
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=posix -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/aurelien/open_spiel/open_spiel/madp-0.4.1/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..

#####################################################################
# Optional software packages to be used, check configuration.h to
# enable them

# For using arbitrary length integers
# Should be set if USE_ARBITRARY_PRECISION_INDEX is set to 1
#GMP_LD=-lgmpxx -lgmp
LIBDAI_NORMAL = $(top_builddir)/src/libDAI/libDAI.la
LIBDAI_INCLUDES = -I$(top_srcdir)/src/libDAI

# The following is necessary for calling Matlab from the C++ code
# Just set the correct MATLAB_DIR and uncomment all three lines
#MATLAB_DIR = /scratch/matlabR2008a
#MATLAB_INCLUDES = -I$(MATLAB_DIR)/extern/include/
#MATLAB_LD = -L$(MATLAB_DIR)/bin/glnxa64/ \
# -lmat -leng -lmx -lut

# the open PNL library
#PNL_LD = #define PNL library path 
#PNL_INCLUDES = #define the PNL includes.
#typically something like
#PNL_LD = -L/home/faolieho/Documents/software/PNL/high/source -L/home/faolieho/Documents/software/PNL/cxcore/cxcore/src -L/home/faolieho/Documents/software/PNL/c_pgmtk/src -lhigh -lpnl -lcxcore -lpthread
#and
#PNL_INCLUDES = -I$(HOME)/include/pnl -I$(HOME)/include/pnl/high -I$(HOME)/include/pnl/opencx  -I$(HOME)/include/pnl/cart
#
#NOTE: in order to build DEBUG libraries (i.e., include the debug version of 
# the PNL lib), the PNL_LD path should point to where the PNL library is built,
# rather than installed. For some reason things are not working smoothly when 
# pointing to the installation libdir (something to do with libtool I think).

#####################################################################
# Compiler flags

# the debug flags used - according to 
# http://sourceware.org/gdb/current/onlinedocs/gdb_13.html#SEC111
# dwarf-2 is best for c++ and gdb
# -fno-inline should make things easier to debug
DEBUG_FLAGS = -O0 -gdwarf-2 -fno-inline

# Optimization flags used for building normal and profiling libraries.
# -DNDEBUG speeds up the boost::numeric::ublas operations
CPP_OPTIMIZATION_FLAGS = -O3 -DNDEBUG

#machine architectecture specific flags
#XXX: the following does not work on MacOS! (leave empty to resolve)
# Matthijs: is it not just a problem with using a GCC version that is
# too old to support this?
MARCH_FLAGS = -march=native  # automatically picks the correct settings for your system
#XML2_CXXFLAGS = `xml2-config --cflags`

#default flags throughout all MADP:
MADP_CXXFLAGS = -pipe $(MARCH_FLAGS) $(CSTANDARD) $(XML2_CXXFLAGS)
MADP_CPPFLAGS = 
MADP_CFLAGS = 

#####################################################################
# The final include path
# fao 2014-02-01: added $(INCLUDE) such that we can all add include paths, for e.g., cplex.
MADP_INCLUDES = \
 $(INCLUDE) \
 $(LIBDAI_INCLUDES)\
 -I$(top_srcdir)/src/boost

MADP_LD = 

#####################################################################
# Lists of libs to be linked with binaries.
# Note that the linking order matters, in order to correctly resolve symbols
MADPLIBS_NORMAL_BASE = \
 $(top_builddir)/src/base/libMADPBase.la

MADPLIBS_NORMAL_BASE_SUPPORT = \
 $(top_builddir)/src/support/libMADPSupport.la \
 $(MADPLIBS_NORMAL_BASE) 

MADPLIBS_NORMAL_BASE_PARSER = \
 $(top_builddir)/src/parser/libMADPParser.la \
 $(MADPLIBS_NORMAL_BASE) \
 $(LIBPOMDPSOLVE_NORMAL) $(LIBLPSOLVEOLD_NORMAL) $(LIBMDP_NORMAL) $(LIBLASPACK_NORMAL)

MADPLIBS_NORMAL_BASE_PARSER_SUPPORT = \
 $(top_builddir)/src/support/libMADPSupport.la \
 $(MADPLIBS_NORMAL_BASE_PARSER) 

MADPLIBS_NORMAL = $(top_builddir)/src/madp/libMADP.la
# $(top_builddir)/src/planning/libMADPPlanning.la \
# $(MADPLIBS_NORMAL_BASE_PARSER_SUPPORT) \
# $(LIBDAI_NORMAL)
MADPLIBS_NORMAL_NOPARSER_NOPLANNING = $(MADPLIBS_NORMAL_BASE)
MADPLIBS_NORMAL_NOPLANNING = $(MADPLIBS_NORMAL_BASE_PARSER_SUPPORT)
MADPLIBS_NORMAL_NOPARSER = $(MADPLIBS_NORMAL)

##############
# Includedirs, libdirs, libs and cflags for all programs 
INCLUDEPATH = -I$(top_srcdir)/src/base\
 -I$(top_srcdir)/src/include\
 $(MADP_INCLUDES) 

AM_LDFLAGS = 
LDADD = 
AM_CPPFLAGS = $(MADP_CPPFLAGS) $(INCLUDEPATH) $(am__append_1)
AM_CXXFLAGS = $(MADP_CXXFLAGS)
AM_CFLAGS = $(MADP_CFLAGS)
PARSER_CPPFILES = \
 ParserDPOMDPFormat_Spirit.cpp\
 ParserPOMDPFormat_Spirit.cpp\
 ParserTOIDecPOMDPDiscrete.cpp\
 ParserTOIDecMDPDiscrete.cpp\
 ParserTOIFactoredRewardDecPOMDPDiscrete.cpp\
 ParserTOICompactRewardDecPOMDPDiscrete.cpp\
 ParserProbModelXML.cpp\
 ParserPOMDPDiscrete.cpp\
 MADPParser.cpp 

PARSER_HFILES = $(PARSER_CPPFILES:.cpp=.h) ParserInterface.h\
 CommentOrBlankParser.h\
 CommentBlankOrNewlineParser.h

PARSER_FILES = $(PARSER_CPPFILES) $(PARSER_HFILES)

###############
# All DYNAMIC libraries
# the LTLIBRARIES (LibTool-libraries)

# the library to be build...
lib_LTLIBRARIES = 
noinst_LTLIBRARIES = libMADPParser.la

# sources for the library:
libMADPParser_la_SOURCES = $(PARSER_FILES) 
libMADPParser_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPP_OPTIMIZATION_FLAGS)
libMADPParser_la_LIBADD = 
libMADPParser_la_DEPENDENCIES = 
# for installing the headers
libMADPParser_ladir = $(pkgincludedir)#/parser
libMADPParser_la_HEADERS = $(PARSER_HFILES)
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/src/Makefile.custom $(top_srcdir)/config/Make-rules $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/parser/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/parser/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;
$(top_srcdir)/src/Makefile.custom $(top_srcdir)/config/Make-rules $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libMADPParser.la: $(libMADPParser_la_OBJECTS) $(libMADPParser_la_DEPENDENCIES) $(EXTRA_libMADPParser_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK)  $(libMADPParser_la_OBJECTS) $(libMADPParser_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libMADPParser_la-MADPParser.Plo # am--include-marker
include ./$(DEPDIR)/libMADPParser_la-ParserDPOMDPFormat_Spirit.Plo # am--include-marker
include ./$(DEPDIR)/libMADPParser_la-ParserPOMDPDiscrete.Plo # am--include-marker
include ./$(DEPDIR)/libMADPParser_la-ParserPOMDPFormat_Spirit.Plo # am--include-marker
include ./$(DEPDIR)/libMADPParser_la-ParserProbModelXML.Plo # am--include-marker
include ./$(DEPDIR)/libMADPParser_la-ParserTOICompactRewardDecPOMDPDiscrete.Plo # am--include-marker
include ./$(DEPDIR)/libMADPParser_la-ParserTOIDecMDPDiscrete.Plo # am--include-marker
include ./$(DEPDIR)/libMADPParser_la-ParserTOIDecPOMDPDiscrete.Plo # am--include-marker
include ./$(DEPDIR)/libMADPParser_la-ParserTOIFactoredRewardDecPOMDPDiscrete.Plo # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

libMADPParser_la-ParserDPOMDPFormat_Spirit.lo: ParserDPOMDPFormat_Spirit.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPParser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPParser_la-ParserDPOMDPFormat_Spirit.lo -MD -MP -MF $(DEPDIR)/libMADPParser_la-ParserDPOMDPFormat_Spirit.Tpo -c -o libMADPParser_la-ParserDPOMDPFormat_Spirit.lo `test -f 'ParserDPOMDPFormat_Spirit.cpp' || echo '$(srcdir)/'`ParserDPOMDPFormat_Spirit.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPParser_la-ParserDPOMDPFormat_Spirit.Tpo $(DEPDIR)/libMADPParser_la-ParserDPOMDPFormat_Spirit.Plo
#	$(AM_V_CXX)source='ParserDPOMDPFormat_Spirit.cpp' object='libMADPParser_la-ParserDPOMDPFormat_Spirit.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPParser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPParser_la-ParserDPOMDPFormat_Spirit.lo `test -f 'ParserDPOMDPFormat_Spirit.cpp' || echo '$(srcdir)/'`ParserDPOMDPFormat_Spirit.cpp

libMADPParser_la-ParserPOMDPFormat_Spirit.lo: ParserPOMDPFormat_Spirit.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPParser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPParser_la-ParserPOMDPFormat_Spirit.lo -MD -MP -MF $(DEPDIR)/libMADPParser_la-ParserPOMDPFormat_Spirit.Tpo -c -o libMADPParser_la-ParserPOMDPFormat_Spirit.lo `test -f 'ParserPOMDPFormat_Spirit.cpp' || echo '$(srcdir)/'`ParserPOMDPFormat_Spirit.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPParser_la-ParserPOMDPFormat_Spirit.Tpo $(DEPDIR)/libMADPParser_la-ParserPOMDPFormat_Spirit.Plo
#	$(AM_V_CXX)source='ParserPOMDPFormat_Spirit.cpp' object='libMADPParser_la-ParserPOMDPFormat_Spirit.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPParser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPParser_la-ParserPOMDPFormat_Spirit.lo `test -f 'ParserPOMDPFormat_Spirit.cpp' || echo '$(srcdir)/'`ParserPOMDPFormat_Spirit.cpp

libMADPParser_la-ParserTOIDecPOMDPDiscrete.lo: ParserTOIDecPOMDPDiscrete.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPParser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPParser_la-ParserTOIDecPOMDPDiscrete.lo -MD -MP -MF $(DEPDIR)/libMADPParser_la-ParserTOIDecPOMDPDiscrete.Tpo -c -o libMADPParser_la-ParserTOIDecPOMDPDiscrete.lo `test -f 'ParserTOIDecPOMDPDiscrete.cpp' || echo '$(srcdir)/'`ParserTOIDecPOMDPDiscrete.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPParser_la-ParserTOIDecPOMDPDiscrete.Tpo $(DEPDIR)/libMADPParser_la-ParserTOIDecPOMDPDiscrete.Plo
#	$(AM_V_CXX)source='ParserTOIDecPOMDPDiscrete.cpp' object='libMADPParser_la-ParserTOIDecPOMDPDiscrete.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPParser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPParser_la-ParserTOIDecPOMDPDiscrete.lo `test -f 'ParserTOIDecPOMDPDiscrete.cpp' || echo '$(srcdir)/'`ParserTOIDecPOMDPDiscrete.cpp

libMADPParser_la-ParserTOIDecMDPDiscrete.lo: ParserTOIDecMDPDiscrete.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPParser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPParser_la-ParserTOIDecMDPDiscrete.lo -MD -MP -MF $(DEPDIR)/libMADPParser_la-ParserTOIDecMDPDiscrete.Tpo -c -o libMADPParser_la-ParserTOIDecMDPDiscrete.lo `test -f 'ParserTOIDecMDPDiscrete.cpp' || echo '$(srcdir)/'`ParserTOIDecMDPDiscrete.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPParser_la-ParserTOIDecMDPDiscrete.Tpo $(DEPDIR)/libMADPParser_la-ParserTOIDecMDPDiscrete.Plo
#	$(AM_V_CXX)source='ParserTOIDecMDPDiscrete.cpp' object='libMADPParser_la-ParserTOIDecMDPDiscrete.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPParser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPParser_la-ParserTOIDecMDPDiscrete.lo `test -f 'ParserTOIDecMDPDiscrete.cpp' || echo '$(srcdir)/'`ParserTOIDecMDPDiscrete.cpp

libMADPParser_la-ParserTOIFactoredRewardDecPOMDPDiscrete.lo: ParserTOIFactoredRewardDecPOMDPDiscrete.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPParser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPParser_la-ParserTOIFactoredRewardDecPOMDPDiscrete.lo -MD -MP -MF $(DEPDIR)/libMADPParser_la-ParserTOIFactoredRewardDecPOMDPDiscrete.Tpo -c -o libMADPParser_la-ParserTOIFactoredRewardDecPOMDPDiscrete.lo `test -f 'ParserTOIFactoredRewardDecPOMDPDiscrete.cpp' || echo '$(srcdir)/'`ParserTOIFactoredRewardDecPOMDPDiscrete.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPParser_la-ParserTOIFactoredRewardDecPOMDPDiscrete.Tpo $(DEPDIR)/libMADPParser_la-ParserTOIFactoredRewardDecPOMDPDiscrete.Plo
#	$(AM_V_CXX)source='ParserTOIFactoredRewardDecPOMDPDiscrete.cpp' object='libMADPParser_la-ParserTOIFactoredRewardDecPOMDPDiscrete.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPParser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPParser_la-ParserTOIFactoredRewardDecPOMDPDiscrete.lo `test -f 'ParserTOIFactoredRewardDecPOMDPDiscrete.cpp' || echo '$(srcdir)/'`ParserTOIFactoredRewardDecPOMDPDiscrete.cpp

libMADPParser_la-ParserTOICompactRewardDecPOMDPDiscrete.lo: ParserTOICompactRewardDecPOMDPDiscrete.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPParser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPParser_la-ParserTOICompactRewardDecPOMDPDiscrete.lo -MD -MP -MF $(DEPDIR)/libMADPParser_la-ParserTOICompactRewardDecPOMDPDiscrete.Tpo -c -o libMADPParser_la-ParserTOICompactRewardDecPOMDPDiscrete.lo `test -f 'ParserTOICompactRewardDecPOMDPDiscrete.cpp' || echo '$(srcdir)/'`ParserTOICompactRewardDecPOMDPDiscrete.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPParser_la-ParserTOICompactRewardDecPOMDPDiscrete.Tpo $(DEPDIR)/libMADPParser_la-ParserTOICompactRewardDecPOMDPDiscrete.Plo
#	$(AM_V_CXX)source='ParserTOICompactRewardDecPOMDPDiscrete.cpp' object='libMADPParser_la-ParserTOICompactRewardDecPOMDPDiscrete.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPParser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPParser_la-ParserTOICompactRewardDecPOMDPDiscrete.lo `test -f 'ParserTOICompactRewardDecPOMDPDiscrete.cpp' || echo '$(srcdir)/'`ParserTOICompactRewardDecPOMDPDiscrete.cpp

libMADPParser_la-ParserProbModelXML.lo: ParserProbModelXML.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPParser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPParser_la-ParserProbModelXML.lo -MD -MP -MF $(DEPDIR)/libMADPParser_la-ParserProbModelXML.Tpo -c -o libMADPParser_la-ParserProbModelXML.lo `test -f 'ParserProbModelXML.cpp' || echo '$(srcdir)/'`ParserProbModelXML.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPParser_la-ParserProbModelXML.Tpo $(DEPDIR)/libMADPParser_la-ParserProbModelXML.Plo
#	$(AM_V_CXX)source='ParserProbModelXML.cpp' object='libMADPParser_la-ParserProbModelXML.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPParser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPParser_la-ParserProbModelXML.lo `test -f 'ParserProbModelXML.cpp' || echo '$(srcdir)/'`ParserProbModelXML.cpp

libMADPParser_la-ParserPOMDPDiscrete.lo: ParserPOMDPDiscrete.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPParser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPParser_la-ParserPOMDPDiscrete.lo -MD -MP -MF $(DEPDIR)/libMADPParser_la-ParserPOMDPDiscrete.Tpo -c -o libMADPParser_la-ParserPOMDPDiscrete.lo `test -f 'ParserPOMDPDiscrete.cpp' || echo '$(srcdir)/'`ParserPOMDPDiscrete.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPParser_la-ParserPOMDPDiscrete.Tpo $(DEPDIR)/libMADPParser_la-ParserPOMDPDiscrete.Plo
#	$(AM_V_CXX)source='ParserPOMDPDiscrete.cpp' object='libMADPParser_la-ParserPOMDPDiscrete.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPParser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPParser_la-ParserPOMDPDiscrete.lo `test -f 'ParserPOMDPDiscrete.cpp' || echo '$(srcdir)/'`ParserPOMDPDiscrete.cpp

libMADPParser_la-MADPParser.lo: MADPParser.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPParser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPParser_la-MADPParser.lo -MD -MP -MF $(DEPDIR)/libMADPParser_la-MADPParser.Tpo -c -o libMADPParser_la-MADPParser.lo `test -f 'MADPParser.cpp' || echo '$(srcdir)/'`MADPParser.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPParser_la-MADPParser.Tpo $(DEPDIR)/libMADPParser_la-MADPParser.Plo
#	$(AM_V_CXX)source='MADPParser.cpp' object='libMADPParser_la-MADPParser.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPParser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPParser_la-MADPParser.lo `test -f 'MADPParser.cpp' || echo '$(srcdir)/'`MADPParser.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-libMADPParser_laHEADERS: $(libMADPParser_la_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(libMADPParser_la_HEADERS)'; test -n "$(libMADPParser_ladir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libMADPParser_ladir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libMADPParser_ladir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(libMADPParser_ladir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(libMADPParser_ladir)" || exit $$?; \
	done

uninstall-libMADPParser_laHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libMADPParser_la_HEADERS)'; test -n "$(libMADPParser_ladir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libMADPParser_ladir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(libMADPParser_ladir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/libMADPParser_la-MADPParser.Plo
	-rm -f ./$(DEPDIR)/libMADPParser_la-ParserDPOMDPFormat_Spirit.Plo
	-rm -f ./$(DEPDIR)/libMADPParser_la-ParserPOMDPDiscrete.Plo
	-rm -f ./$(DEPDIR)/libMADPParser_la-ParserPOMDPFormat_Spirit.Plo
	-rm -f ./$(DEPDIR)/libMADPParser_la-ParserProbModelXML.Plo
	-rm -f ./$(DEPDIR)/libMADPParser_la-ParserTOICompactRewardDecPOMDPDiscrete.Plo
	-rm -f ./$(DEPDIR)/libMADPParser_la-ParserTOIDecMDPDiscrete.Plo
	-rm -f ./$(DEPDIR)/libMADPParser_la-ParserTOIDecPOMDPDiscrete.Plo
	-rm -f ./$(DEPDIR)/libMADPParser_la-ParserTOIFactoredRewardDecPOMDPDiscrete.Plo
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-libMADPParser_laHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/libMADPParser_la-MADPParser.Plo
	-rm -f ./$(DEPDIR)/libMADPParser_la-ParserDPOMDPFormat_Spirit.Plo
	-rm -f ./$(DEPDIR)/libMADPParser_la-ParserPOMDPDiscrete.Plo
	-rm -f ./$(DEPDIR)/libMADPParser_la-ParserPOMDPFormat_Spirit.Plo
	-rm -f ./$(DEPDIR)/libMADPParser_la-ParserProbModelXML.Plo
	-rm -f ./$(DEPDIR)/libMADPParser_la-ParserTOICompactRewardDecPOMDPDiscrete.Plo
	-rm -f ./$(DEPDIR)/libMADPParser_la-ParserTOIDecMDPDiscrete.Plo
	-rm -f ./$(DEPDIR)/libMADPParser_la-ParserTOIDecPOMDPDiscrete.Plo
	-rm -f ./$(DEPDIR)/libMADPParser_la-ParserTOIFactoredRewardDecPOMDPDiscrete.Plo
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES \
	uninstall-libMADPParser_laHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstLTLIBRARIES cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-libMADPParser_laHEADERS \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-libLTLIBRARIES \
	uninstall-libMADPParser_laHEADERS

.PRECIOUS: Makefile


cleantags: cleantags-recursive

cleantags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) cleantags) || exit 1; \
	done; \
	rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags; \
	rm -f cscope.out cscope.in.out cscope.po.out cscope.files

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
