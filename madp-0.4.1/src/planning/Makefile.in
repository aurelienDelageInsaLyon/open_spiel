# Makefile.in generated by automake 1.14.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Contains several project-wide Makefile options


VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
DIST_COMMON = $(top_srcdir)/src/Makefile.custom \
	$(top_srcdir)/config/Make-rules $(srcdir)/Makefile.in \
	$(srcdir)/Makefile.am $(top_srcdir)/depcomp \
	$(am__libMADPPlanning_la_HEADERS_DIST)
@HAVE_CUDA_CUSOLVERDN_H_TRUE@am__append_1 = $(CUDA_CPPFLAGS)
@HAVE_CUDA_CUSOLVERDN_H_TRUE@am__append_2 = $(CUDA_LDFLAGS) -lcuda -lcudart -lcusolver -lcublas -lgomp
@DARWIN_TRUE@am__append_3 = -DDARWIN
@HAVE_CUDA_CUSOLVERDN_H_TRUE@am__append_4 = MDPPolicyIterationGPU.cpp SystemOfLinearEquationsSolver.cpp
subdir = src/planning
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ac_cplex.m4 \
	$(top_srcdir)/m4/cuda.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" \
	"$(DESTDIR)$(libMADPPlanning_ladir)"
LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)
libMADPPlanning_la_DEPENDENCIES =
am__libMADPPlanning_la_SOURCES_DIST = BruteForceSearchPlanner.cpp \
	JESPExhaustivePlanner.cpp JESPDynamicProgrammingPlanner.cpp \
	DICEPSPlanner.cpp QBG.cpp QPOMDP.cpp QMDP.cpp MDPSolver.cpp \
	MDPValueIteration.cpp MDPPolicyIteration.cpp MaxPlusSolver.cpp \
	MaxPlusSolverForBGs.cpp BGIP_SolverBruteForceSearch.cpp \
	BGIP_SolverBFSNonIncremental.cpp BGIP_SolverBranchAndBound.cpp \
	BGIP_BnB_Node.cpp BnB_JointTypeOrdering.cpp \
	BayesianGameIdenticalPayoffSolver.cpp \
	BayesianGameIdenticalPayoffSolver_T.cpp \
	BGIP_SolverAlternatingMaximization.cpp BGIP_SolverCE.cpp \
	BGIP_SolverMaxPlus.cpp BGIP_SolverRandom.cpp \
	BGIP_SolverCreator_MP.cpp BGCG_Solver.cpp \
	BGCG_SolverNonserialDynamicProgramming.cpp \
	BGCG_SolverMaxPlus.cpp BGCG_SolverRandom.cpp \
	BGCG_SolverCreator.cpp BGCG_SolverFG.cpp \
	BG_FactorGraphCreator.cpp FG_Solver.cpp FG_SolverMaxPlus.cpp \
	FG_SolverNDP.cpp QFunction.cpp QFunctionForDecPOMDP.cpp \
	QFunctionForFactoredDecPOMDP.cpp QFunctionJAOHInterface.cpp \
	QFunctionJAOH.cpp QFunctionJAOHTree.cpp \
	QFunctionJointBelief.cpp QHybrid.cpp qheur.cpp gmaatype.cpp \
	JESPtype.cpp BGIP_SolverType.cpp BayesianGameBase.cpp \
	BayesianGame.cpp BayesianGameIdenticalPayoff.cpp \
	BayesianGameCollaborativeGraphical.cpp \
	BayesianGameForDecPOMDPStage.cpp BGforStageCreation.cpp \
	BayesianGameForDecPOMDPStageInterface.cpp \
	BayesianGameWithClusterInfo.cpp \
	JointPolicyPureVectorForClusteredBG.cpp TypeCluster.cpp \
	Type.cpp Type_PointerTuple.cpp Type_AOHIndex.cpp \
	LocalBGValueFunctionVector.cpp \
	LocalBGValueFunctionInterface.cpp \
	LocalBGValueFunctionBGCGWrapper.cpp BGIPSolution.cpp \
	ValueFunctionDecPOMDPDiscrete.cpp \
	FactoredQLastTimeStepOrElse.cpp \
	FactoredQLastTimeStepOrQMDP.cpp \
	FactoredQLastTimeStepOrQPOMDP.cpp \
	FactoredQLastTimeStepOrQBG.cpp OptimalValueDatabase.cpp \
	argumentHandlers.cpp argumentUtils.cpp directories.cpp \
	Problem_CGBG_FF.cpp MDPPolicyIterationGPU.cpp \
	SystemOfLinearEquationsSolver.cpp BruteForceSearchPlanner.h \
	JESPExhaustivePlanner.h JESPDynamicProgrammingPlanner.h \
	DICEPSPlanner.h QBG.h QPOMDP.h QMDP.h MDPSolver.h \
	MDPValueIteration.h MDPPolicyIteration.h MaxPlusSolver.h \
	MaxPlusSolverForBGs.h BGIP_SolverBruteForceSearch.h \
	BGIP_SolverBFSNonIncremental.h BGIP_SolverBranchAndBound.h \
	BGIP_BnB_Node.h BnB_JointTypeOrdering.h \
	BayesianGameIdenticalPayoffSolver.h \
	BayesianGameIdenticalPayoffSolver_T.h \
	BGIP_SolverAlternatingMaximization.h BGIP_SolverCE.h \
	BGIP_SolverMaxPlus.h BGIP_SolverRandom.h \
	BGIP_SolverCreator_MP.h BGCG_Solver.h \
	BGCG_SolverNonserialDynamicProgramming.h BGCG_SolverMaxPlus.h \
	BGCG_SolverRandom.h BGCG_SolverCreator.h BGCG_SolverFG.h \
	BG_FactorGraphCreator.h FG_Solver.h FG_SolverMaxPlus.h \
	FG_SolverNDP.h QFunction.h QFunctionForDecPOMDP.h \
	QFunctionForFactoredDecPOMDP.h QFunctionJAOHInterface.h \
	QFunctionJAOH.h QFunctionJAOHTree.h QFunctionJointBelief.h \
	QHybrid.h qheur.h gmaatype.h JESPtype.h BGIP_SolverType.h \
	BayesianGameBase.h BayesianGame.h \
	BayesianGameIdenticalPayoff.h \
	BayesianGameCollaborativeGraphical.h \
	BayesianGameForDecPOMDPStage.h BGforStageCreation.h \
	BayesianGameForDecPOMDPStageInterface.h \
	BayesianGameWithClusterInfo.h \
	JointPolicyPureVectorForClusteredBG.h TypeCluster.h Type.h \
	Type_PointerTuple.h Type_AOHIndex.h \
	LocalBGValueFunctionVector.h LocalBGValueFunctionInterface.h \
	LocalBGValueFunctionBGCGWrapper.h BGIPSolution.h \
	ValueFunctionDecPOMDPDiscrete.h FactoredQLastTimeStepOrElse.h \
	FactoredQLastTimeStepOrQMDP.h FactoredQLastTimeStepOrQPOMDP.h \
	FactoredQLastTimeStepOrQBG.h OptimalValueDatabase.h \
	argumentHandlers.h argumentUtils.h directories.h \
	Problem_CGBG_FF.h MDPPolicyIterationGPU.h \
	SystemOfLinearEquationsSolver.h argumentHandlersPostChild.h \
	JointPolicyValuePair.h PartialJointPolicyValuePair.h \
	ValueFunction.h QFunctionInterface.h \
	QFunctionForDecPOMDPInterface.h \
	QFunctionForFactoredDecPOMDPInterface.h \
	QFunctionJointBeliefInterface.h \
	FactoredQFunctionStateJAOHInterface.h \
	BGIP_SolverCreatorInterface_T.h \
	BGIP_IncrementalSolverCreatorInterface_T.h \
	BGIP_SolverCreatorInterface.h BGIP_SolverCreator_AM.h \
	BGIP_SolverCreator_CE.h BGIP_SolverCreator_BFS.h \
	BGIP_SolverCreator_BFSNonInc.h BGIP_SolverCreator_BnB.h \
	BGIP_SolverCreator_Random.h BGCG_SolverCreator_NDP.h \
	BGCG_SolverCreator_MP.h BGCG_SolverCreator_FG.h \
	BGCG_SolverCreator_Random.h \
	BayesianGameIdenticalPayoffInterface.h \
	BGIP_IncrementalSolverInterface_T.h \
	BGIP_IncrementalSolverInterface.h OnlineMDPPlanner.h \
	SimulationResult.cpp SimulationDecPOMDPDiscrete.cpp \
	SimulationTOIDecPOMDPDiscrete.cpp \
	SimulationFactoredDecPOMDPDiscrete.cpp AgentPOMDP.cpp \
	AgentBG.cpp AgentQMDP.cpp AgentRandom.cpp AgentMDP.cpp \
	AgentOnlinePlanningMDP.cpp AgentQLearner.cpp \
	SimulationResult.h SimulationDecPOMDPDiscrete.h \
	SimulationTOIDecPOMDPDiscrete.h \
	SimulationFactoredDecPOMDPDiscrete.h AgentPOMDP.h AgentBG.h \
	AgentQMDP.h AgentRandom.h AgentMDP.h AgentOnlinePlanningMDP.h \
	AgentQLearner.h Simulation.h SimulationAgent.h \
	AgentDecPOMDPDiscrete.h AgentDelayedSharedObservations.h \
	AgentFullyObservable.h AgentSharedObservations.h \
	AgentLocalObservations.h \
	AgentTOIFullyObservableSyncedSpecialReward.h \
	AgentTOIFullyObservableSynced.h BeliefValue.cpp \
	BeliefSetNonStationary.cpp AlphaVector.cpp \
	AlphaVectorPlanning.cpp AlphaVectorPruning.cpp Perseus.cpp \
	AlphaVectorPOMDP.cpp AlphaVectorConstrainedPOMDP.cpp \
	PerseusPOMDPPlanner.cpp PerseusConstrainedPOMDPPlanner.cpp \
	MonahanPOMDPPlanner.cpp AlphaVectorBG.cpp MonahanBGPlanner.cpp \
	MonahanPlanner.cpp QMonahanPOMDP.cpp PerseusBGPlanner.cpp \
	QMonahanBG.cpp QAlphaVector.cpp TreeIncPruneBGPlanner.cpp \
	QBGPlanner_TreeIncPruneBnB.cpp QTreeIncPruneBG.cpp \
	PerseusBGPOMDPPlanner.cpp AlphaVectorWeighted.cpp \
	PerseusWeightedPlanner.cpp PerseusQFunctionPlanner.cpp \
	PerseusStationary.cpp PerseusNonStationary.cpp \
	PerseusNonStationaryQPlanner.cpp PerseusBGNSPlanner.cpp \
	BeliefValue.h BeliefSetNonStationary.h AlphaVector.h \
	AlphaVectorPlanning.h AlphaVectorPruning.h Perseus.h \
	AlphaVectorPOMDP.h AlphaVectorConstrainedPOMDP.h \
	PerseusPOMDPPlanner.h PerseusConstrainedPOMDPPlanner.h \
	MonahanPOMDPPlanner.h AlphaVectorBG.h MonahanBGPlanner.h \
	MonahanPlanner.h QMonahanPOMDP.h PerseusBGPlanner.h \
	QMonahanBG.h QAlphaVector.h TreeIncPruneBGPlanner.h \
	QBGPlanner_TreeIncPruneBnB.h QTreeIncPruneBG.h \
	PerseusBGPOMDPPlanner.h AlphaVectorWeighted.h \
	PerseusWeightedPlanner.h PerseusQFunctionPlanner.h \
	PerseusStationary.h PerseusNonStationary.h \
	PerseusNonStationaryQPlanner.h PerseusBGNSPlanner.h \
	ValueFunctionPOMDPDiscrete.h BGBackupType.h \
	PerseusBackupType.h BeliefSet.h QAV.h QAVParameters.h \
	GeneralizedMAAStarPlanner.cpp \
	GeneralizedMAAStarPlannerForDecPOMDPDiscrete.cpp \
	GeneralizedMAAStarPlannerForFactoredDecPOMDPDiscrete.cpp \
	GMAA_MAAstar.cpp GMAA_MAAstarClassic.cpp \
	GMAA_MAAstarCluster.cpp GMAA_kGMAACluster.cpp \
	PolicyPoolJPolValPair.cpp PolicyPoolPartialJPolValPair.cpp \
	JPPVValuePair.cpp JPPVIndexValuePair.cpp \
	PartialJPDPValuePair.cpp PartialJPPVIndexValuePair.cpp \
	GMAA_kGMAA.cpp GMAA_MAA_ELSI.cpp GeneralizedMAAStarPlanner.h \
	GeneralizedMAAStarPlannerForDecPOMDPDiscrete.h \
	GeneralizedMAAStarPlannerForFactoredDecPOMDPDiscrete.h \
	GMAA_MAAstar.h GMAA_MAAstarClassic.h GMAA_MAAstarCluster.h \
	GMAA_kGMAACluster.h PolicyPoolJPolValPair.h \
	PolicyPoolPartialJPolValPair.h JPPVValuePair.h \
	JPPVIndexValuePair.h PartialJPDPValuePair.h \
	PartialJPPVIndexValuePair.h GMAA_kGMAA.h GMAA_MAA_ELSI.h \
	PolicyPoolInterface.h PartialPolicyPoolInterface.h \
	PartialPolicyPoolItemInterface.h PolicyPoolItemInterface.h
@HAVE_CUDA_CUSOLVERDN_H_TRUE@am__objects_1 = libMADPPlanning_la-MDPPolicyIterationGPU.lo \
@HAVE_CUDA_CUSOLVERDN_H_TRUE@	libMADPPlanning_la-SystemOfLinearEquationsSolver.lo
am__objects_2 = libMADPPlanning_la-BruteForceSearchPlanner.lo \
	libMADPPlanning_la-JESPExhaustivePlanner.lo \
	libMADPPlanning_la-JESPDynamicProgrammingPlanner.lo \
	libMADPPlanning_la-DICEPSPlanner.lo libMADPPlanning_la-QBG.lo \
	libMADPPlanning_la-QPOMDP.lo libMADPPlanning_la-QMDP.lo \
	libMADPPlanning_la-MDPSolver.lo \
	libMADPPlanning_la-MDPValueIteration.lo \
	libMADPPlanning_la-MDPPolicyIteration.lo \
	libMADPPlanning_la-MaxPlusSolver.lo \
	libMADPPlanning_la-MaxPlusSolverForBGs.lo \
	libMADPPlanning_la-BGIP_SolverBruteForceSearch.lo \
	libMADPPlanning_la-BGIP_SolverBFSNonIncremental.lo \
	libMADPPlanning_la-BGIP_SolverBranchAndBound.lo \
	libMADPPlanning_la-BGIP_BnB_Node.lo \
	libMADPPlanning_la-BnB_JointTypeOrdering.lo \
	libMADPPlanning_la-BayesianGameIdenticalPayoffSolver.lo \
	libMADPPlanning_la-BayesianGameIdenticalPayoffSolver_T.lo \
	libMADPPlanning_la-BGIP_SolverAlternatingMaximization.lo \
	libMADPPlanning_la-BGIP_SolverCE.lo \
	libMADPPlanning_la-BGIP_SolverMaxPlus.lo \
	libMADPPlanning_la-BGIP_SolverRandom.lo \
	libMADPPlanning_la-BGIP_SolverCreator_MP.lo \
	libMADPPlanning_la-BGCG_Solver.lo \
	libMADPPlanning_la-BGCG_SolverNonserialDynamicProgramming.lo \
	libMADPPlanning_la-BGCG_SolverMaxPlus.lo \
	libMADPPlanning_la-BGCG_SolverRandom.lo \
	libMADPPlanning_la-BGCG_SolverCreator.lo \
	libMADPPlanning_la-BGCG_SolverFG.lo \
	libMADPPlanning_la-BG_FactorGraphCreator.lo \
	libMADPPlanning_la-FG_Solver.lo \
	libMADPPlanning_la-FG_SolverMaxPlus.lo \
	libMADPPlanning_la-FG_SolverNDP.lo \
	libMADPPlanning_la-QFunction.lo \
	libMADPPlanning_la-QFunctionForDecPOMDP.lo \
	libMADPPlanning_la-QFunctionForFactoredDecPOMDP.lo \
	libMADPPlanning_la-QFunctionJAOHInterface.lo \
	libMADPPlanning_la-QFunctionJAOH.lo \
	libMADPPlanning_la-QFunctionJAOHTree.lo \
	libMADPPlanning_la-QFunctionJointBelief.lo \
	libMADPPlanning_la-QHybrid.lo libMADPPlanning_la-qheur.lo \
	libMADPPlanning_la-gmaatype.lo libMADPPlanning_la-JESPtype.lo \
	libMADPPlanning_la-BGIP_SolverType.lo \
	libMADPPlanning_la-BayesianGameBase.lo \
	libMADPPlanning_la-BayesianGame.lo \
	libMADPPlanning_la-BayesianGameIdenticalPayoff.lo \
	libMADPPlanning_la-BayesianGameCollaborativeGraphical.lo \
	libMADPPlanning_la-BayesianGameForDecPOMDPStage.lo \
	libMADPPlanning_la-BGforStageCreation.lo \
	libMADPPlanning_la-BayesianGameForDecPOMDPStageInterface.lo \
	libMADPPlanning_la-BayesianGameWithClusterInfo.lo \
	libMADPPlanning_la-JointPolicyPureVectorForClusteredBG.lo \
	libMADPPlanning_la-TypeCluster.lo libMADPPlanning_la-Type.lo \
	libMADPPlanning_la-Type_PointerTuple.lo \
	libMADPPlanning_la-Type_AOHIndex.lo \
	libMADPPlanning_la-LocalBGValueFunctionVector.lo \
	libMADPPlanning_la-LocalBGValueFunctionInterface.lo \
	libMADPPlanning_la-LocalBGValueFunctionBGCGWrapper.lo \
	libMADPPlanning_la-BGIPSolution.lo \
	libMADPPlanning_la-ValueFunctionDecPOMDPDiscrete.lo \
	libMADPPlanning_la-FactoredQLastTimeStepOrElse.lo \
	libMADPPlanning_la-FactoredQLastTimeStepOrQMDP.lo \
	libMADPPlanning_la-FactoredQLastTimeStepOrQPOMDP.lo \
	libMADPPlanning_la-FactoredQLastTimeStepOrQBG.lo \
	libMADPPlanning_la-OptimalValueDatabase.lo \
	libMADPPlanning_la-argumentHandlers.lo \
	libMADPPlanning_la-argumentUtils.lo \
	libMADPPlanning_la-directories.lo \
	libMADPPlanning_la-Problem_CGBG_FF.lo $(am__objects_1)
am__objects_3 =
am__objects_4 = $(am__objects_3)
am__objects_5 = $(am__objects_4)
am__objects_6 = libMADPPlanning_la-SimulationResult.lo \
	libMADPPlanning_la-SimulationDecPOMDPDiscrete.lo \
	libMADPPlanning_la-SimulationTOIDecPOMDPDiscrete.lo \
	libMADPPlanning_la-SimulationFactoredDecPOMDPDiscrete.lo \
	libMADPPlanning_la-AgentPOMDP.lo libMADPPlanning_la-AgentBG.lo \
	libMADPPlanning_la-AgentQMDP.lo \
	libMADPPlanning_la-AgentRandom.lo \
	libMADPPlanning_la-AgentMDP.lo \
	libMADPPlanning_la-AgentOnlinePlanningMDP.lo \
	libMADPPlanning_la-AgentQLearner.lo
am__objects_7 = libMADPPlanning_la-BeliefValue.lo \
	libMADPPlanning_la-BeliefSetNonStationary.lo \
	libMADPPlanning_la-AlphaVector.lo \
	libMADPPlanning_la-AlphaVectorPlanning.lo \
	libMADPPlanning_la-AlphaVectorPruning.lo \
	libMADPPlanning_la-Perseus.lo \
	libMADPPlanning_la-AlphaVectorPOMDP.lo \
	libMADPPlanning_la-AlphaVectorConstrainedPOMDP.lo \
	libMADPPlanning_la-PerseusPOMDPPlanner.lo \
	libMADPPlanning_la-PerseusConstrainedPOMDPPlanner.lo \
	libMADPPlanning_la-MonahanPOMDPPlanner.lo \
	libMADPPlanning_la-AlphaVectorBG.lo \
	libMADPPlanning_la-MonahanBGPlanner.lo \
	libMADPPlanning_la-MonahanPlanner.lo \
	libMADPPlanning_la-QMonahanPOMDP.lo \
	libMADPPlanning_la-PerseusBGPlanner.lo \
	libMADPPlanning_la-QMonahanBG.lo \
	libMADPPlanning_la-QAlphaVector.lo \
	libMADPPlanning_la-TreeIncPruneBGPlanner.lo \
	libMADPPlanning_la-QBGPlanner_TreeIncPruneBnB.lo \
	libMADPPlanning_la-QTreeIncPruneBG.lo \
	libMADPPlanning_la-PerseusBGPOMDPPlanner.lo \
	libMADPPlanning_la-AlphaVectorWeighted.lo \
	libMADPPlanning_la-PerseusWeightedPlanner.lo \
	libMADPPlanning_la-PerseusQFunctionPlanner.lo \
	libMADPPlanning_la-PerseusStationary.lo \
	libMADPPlanning_la-PerseusNonStationary.lo \
	libMADPPlanning_la-PerseusNonStationaryQPlanner.lo \
	libMADPPlanning_la-PerseusBGNSPlanner.lo
am__objects_8 = libMADPPlanning_la-GeneralizedMAAStarPlanner.lo \
	libMADPPlanning_la-GeneralizedMAAStarPlannerForDecPOMDPDiscrete.lo \
	libMADPPlanning_la-GeneralizedMAAStarPlannerForFactoredDecPOMDPDiscrete.lo \
	libMADPPlanning_la-GMAA_MAAstar.lo \
	libMADPPlanning_la-GMAA_MAAstarClassic.lo \
	libMADPPlanning_la-GMAA_MAAstarCluster.lo \
	libMADPPlanning_la-GMAA_kGMAACluster.lo \
	libMADPPlanning_la-PolicyPoolJPolValPair.lo \
	libMADPPlanning_la-PolicyPoolPartialJPolValPair.lo \
	libMADPPlanning_la-JPPVValuePair.lo \
	libMADPPlanning_la-JPPVIndexValuePair.lo \
	libMADPPlanning_la-PartialJPDPValuePair.lo \
	libMADPPlanning_la-PartialJPPVIndexValuePair.lo \
	libMADPPlanning_la-GMAA_kGMAA.lo \
	libMADPPlanning_la-GMAA_MAA_ELSI.lo
am__objects_9 = $(am__objects_2) $(am__objects_5) $(am__objects_6) \
	$(am__objects_4) $(am__objects_7) $(am__objects_4) \
	$(am__objects_8) $(am__objects_4)
am_libMADPPlanning_la_OBJECTS = $(am__objects_9)
libMADPPlanning_la_OBJECTS = $(am_libMADPPlanning_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
libMADPPlanning_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(libMADPPlanning_la_LDFLAGS) \
	$(LDFLAGS) -o $@
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libMADPPlanning_la_SOURCES)
DIST_SOURCES = $(am__libMADPPlanning_la_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__libMADPPlanning_la_HEADERS_DIST = BruteForceSearchPlanner.h \
	JESPExhaustivePlanner.h JESPDynamicProgrammingPlanner.h \
	DICEPSPlanner.h QBG.h QPOMDP.h QMDP.h MDPSolver.h \
	MDPValueIteration.h MDPPolicyIteration.h MaxPlusSolver.h \
	MaxPlusSolverForBGs.h BGIP_SolverBruteForceSearch.h \
	BGIP_SolverBFSNonIncremental.h BGIP_SolverBranchAndBound.h \
	BGIP_BnB_Node.h BnB_JointTypeOrdering.h \
	BayesianGameIdenticalPayoffSolver.h \
	BayesianGameIdenticalPayoffSolver_T.h \
	BGIP_SolverAlternatingMaximization.h BGIP_SolverCE.h \
	BGIP_SolverMaxPlus.h BGIP_SolverRandom.h \
	BGIP_SolverCreator_MP.h BGCG_Solver.h \
	BGCG_SolverNonserialDynamicProgramming.h BGCG_SolverMaxPlus.h \
	BGCG_SolverRandom.h BGCG_SolverCreator.h BGCG_SolverFG.h \
	BG_FactorGraphCreator.h FG_Solver.h FG_SolverMaxPlus.h \
	FG_SolverNDP.h QFunction.h QFunctionForDecPOMDP.h \
	QFunctionForFactoredDecPOMDP.h QFunctionJAOHInterface.h \
	QFunctionJAOH.h QFunctionJAOHTree.h QFunctionJointBelief.h \
	QHybrid.h qheur.h gmaatype.h JESPtype.h BGIP_SolverType.h \
	BayesianGameBase.h BayesianGame.h \
	BayesianGameIdenticalPayoff.h \
	BayesianGameCollaborativeGraphical.h \
	BayesianGameForDecPOMDPStage.h BGforStageCreation.h \
	BayesianGameForDecPOMDPStageInterface.h \
	BayesianGameWithClusterInfo.h \
	JointPolicyPureVectorForClusteredBG.h TypeCluster.h Type.h \
	Type_PointerTuple.h Type_AOHIndex.h \
	LocalBGValueFunctionVector.h LocalBGValueFunctionInterface.h \
	LocalBGValueFunctionBGCGWrapper.h BGIPSolution.h \
	ValueFunctionDecPOMDPDiscrete.h FactoredQLastTimeStepOrElse.h \
	FactoredQLastTimeStepOrQMDP.h FactoredQLastTimeStepOrQPOMDP.h \
	FactoredQLastTimeStepOrQBG.h OptimalValueDatabase.h \
	argumentHandlers.h argumentUtils.h directories.h \
	Problem_CGBG_FF.h MDPPolicyIterationGPU.h \
	SystemOfLinearEquationsSolver.h argumentHandlersPostChild.h \
	JointPolicyValuePair.h PartialJointPolicyValuePair.h \
	ValueFunction.h QFunctionInterface.h \
	QFunctionForDecPOMDPInterface.h \
	QFunctionForFactoredDecPOMDPInterface.h \
	QFunctionJointBeliefInterface.h \
	FactoredQFunctionStateJAOHInterface.h \
	BGIP_SolverCreatorInterface_T.h \
	BGIP_IncrementalSolverCreatorInterface_T.h \
	BGIP_SolverCreatorInterface.h BGIP_SolverCreator_AM.h \
	BGIP_SolverCreator_CE.h BGIP_SolverCreator_BFS.h \
	BGIP_SolverCreator_BFSNonInc.h BGIP_SolverCreator_BnB.h \
	BGIP_SolverCreator_Random.h BGCG_SolverCreator_NDP.h \
	BGCG_SolverCreator_MP.h BGCG_SolverCreator_FG.h \
	BGCG_SolverCreator_Random.h \
	BayesianGameIdenticalPayoffInterface.h \
	BGIP_IncrementalSolverInterface_T.h \
	BGIP_IncrementalSolverInterface.h OnlineMDPPlanner.h \
	SimulationResult.h SimulationDecPOMDPDiscrete.h \
	SimulationTOIDecPOMDPDiscrete.h \
	SimulationFactoredDecPOMDPDiscrete.h AgentPOMDP.h AgentBG.h \
	AgentQMDP.h AgentRandom.h AgentMDP.h AgentOnlinePlanningMDP.h \
	AgentQLearner.h Simulation.h SimulationAgent.h \
	AgentDecPOMDPDiscrete.h AgentDelayedSharedObservations.h \
	AgentFullyObservable.h AgentSharedObservations.h \
	AgentLocalObservations.h \
	AgentTOIFullyObservableSyncedSpecialReward.h \
	AgentTOIFullyObservableSynced.h BeliefValue.h \
	BeliefSetNonStationary.h AlphaVector.h AlphaVectorPlanning.h \
	AlphaVectorPruning.h Perseus.h AlphaVectorPOMDP.h \
	AlphaVectorConstrainedPOMDP.h PerseusPOMDPPlanner.h \
	PerseusConstrainedPOMDPPlanner.h MonahanPOMDPPlanner.h \
	AlphaVectorBG.h MonahanBGPlanner.h MonahanPlanner.h \
	QMonahanPOMDP.h PerseusBGPlanner.h QMonahanBG.h QAlphaVector.h \
	TreeIncPruneBGPlanner.h QBGPlanner_TreeIncPruneBnB.h \
	QTreeIncPruneBG.h PerseusBGPOMDPPlanner.h \
	AlphaVectorWeighted.h PerseusWeightedPlanner.h \
	PerseusQFunctionPlanner.h PerseusStationary.h \
	PerseusNonStationary.h PerseusNonStationaryQPlanner.h \
	PerseusBGNSPlanner.h ValueFunctionPOMDPDiscrete.h \
	BGBackupType.h PerseusBackupType.h BeliefSet.h QAV.h \
	QAVParameters.h GeneralizedMAAStarPlanner.h \
	GeneralizedMAAStarPlannerForDecPOMDPDiscrete.h \
	GeneralizedMAAStarPlannerForFactoredDecPOMDPDiscrete.h \
	GMAA_MAAstar.h GMAA_MAAstarClassic.h GMAA_MAAstarCluster.h \
	GMAA_kGMAACluster.h PolicyPoolJPolValPair.h \
	PolicyPoolPartialJPolValPair.h JPPVValuePair.h \
	JPPVIndexValuePair.h PartialJPDPValuePair.h \
	PartialJPPVIndexValuePair.h GMAA_kGMAA.h GMAA_MAA_ELSI.h \
	PolicyPoolInterface.h PartialPolicyPoolInterface.h \
	PartialPolicyPoolItemInterface.h PolicyPoolItemInterface.h
HEADERS = $(libMADPPlanning_la_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPLEX_INCLUDES = @CPLEX_INCLUDES@
CPLEX_LDFLAGS = @CPLEX_LDFLAGS@
CPLEX_LIBS = @CPLEX_LIBS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CSTANDARD = @CSTANDARD@
CSTD = @CSTD@
CSTD11 = @CSTD11@
CSTDGNU = @CSTDGNU@
CSTDGNU11 = @CSTDGNU11@
CUDA_CPPFLAGS = @CUDA_CPPFLAGS@
CUDA_LDFLAGS = @CUDA_LDFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
POW_LIB = @POW_LIB@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

#####################################################################
# Optional software packages to be used, check configuration.h to
# enable them

# For using arbitrary length integers
# Should be set if USE_ARBITRARY_PRECISION_INDEX is set to 1
#GMP_LD=-lgmpxx -lgmp
LIBDAI_NORMAL = $(top_builddir)/src/libDAI/libDAI.la
LIBDAI_INCLUDES = -I$(top_srcdir)/src/libDAI

# The following is necessary for calling Matlab from the C++ code
# Just set the correct MATLAB_DIR and uncomment all three lines
#MATLAB_DIR = /scratch/matlabR2008a
#MATLAB_INCLUDES = -I$(MATLAB_DIR)/extern/include/
#MATLAB_LD = -L$(MATLAB_DIR)/bin/glnxa64/ \
# -lmat -leng -lmx -lut

# the open PNL library
#PNL_LD = #define PNL library path 
#PNL_INCLUDES = #define the PNL includes.
#typically something like
#PNL_LD = -L/home/faolieho/Documents/software/PNL/high/source -L/home/faolieho/Documents/software/PNL/cxcore/cxcore/src -L/home/faolieho/Documents/software/PNL/c_pgmtk/src -lhigh -lpnl -lcxcore -lpthread
#and
#PNL_INCLUDES = -I$(HOME)/include/pnl -I$(HOME)/include/pnl/high -I$(HOME)/include/pnl/opencx  -I$(HOME)/include/pnl/cart
#
#NOTE: in order to build DEBUG libraries (i.e., include the debug version of 
# the PNL lib), the PNL_LD path should point to where the PNL library is built,
# rather than installed. For some reason things are not working smoothly when 
# pointing to the installation libdir (something to do with libtool I think).

#####################################################################
# Compiler flags

# the debug flags used - according to 
# http://sourceware.org/gdb/current/onlinedocs/gdb_13.html#SEC111
# dwarf-2 is best for c++ and gdb
# -fno-inline should make things easier to debug
DEBUG_FLAGS = -O0 -gdwarf-2 -fno-inline

# Optimization flags used for building normal and profiling libraries.
# -DNDEBUG speeds up the boost::numeric::ublas operations
CPP_OPTIMIZATION_FLAGS = -O3 -DNDEBUG

#machine architectecture specific flags
#XXX: the following does not work on MacOS! (leave empty to resolve)
# Matthijs: is it not just a problem with using a GCC version that is
# too old to support this?
MARCH_FLAGS = -march=native  # automatically picks the correct settings for your system
@FOUND_LIBXML2_TRUE@XML2_CXXFLAGS = `xml2-config --cflags`

#default flags throughout all MADP:
MADP_CXXFLAGS = -pipe $(MARCH_FLAGS) $(CSTANDARD) $(XML2_CXXFLAGS)
MADP_CPPFLAGS = 
MADP_CFLAGS = 

#####################################################################
# The final include path
# fao 2014-02-01: added $(INCLUDE) such that we can all add include paths, for e.g., cplex.
MADP_INCLUDES = \
 $(INCLUDE) \
 $(LIBDAI_INCLUDES)\
 -I$(top_srcdir)/src/boost

MADP_LD = 

#####################################################################
# Lists of libs to be linked with binaries.
# Note that the linking order matters, in order to correctly resolve symbols
MADPLIBS_NORMAL_BASE = \
 $(top_builddir)/src/base/libMADPBase.la

MADPLIBS_NORMAL_BASE_SUPPORT = \
 $(top_builddir)/src/support/libMADPSupport.la \
 $(MADPLIBS_NORMAL_BASE) 

MADPLIBS_NORMAL_BASE_PARSER = \
 $(top_builddir)/src/parser/libMADPParser.la \
 $(MADPLIBS_NORMAL_BASE) \
 $(LIBPOMDPSOLVE_NORMAL) $(LIBLPSOLVEOLD_NORMAL) $(LIBMDP_NORMAL) $(LIBLASPACK_NORMAL)

MADPLIBS_NORMAL_BASE_PARSER_SUPPORT = \
 $(top_builddir)/src/support/libMADPSupport.la \
 $(MADPLIBS_NORMAL_BASE_PARSER) 

MADPLIBS_NORMAL = $(top_builddir)/src/madp/libMADP.la
# $(top_builddir)/src/planning/libMADPPlanning.la \
# $(MADPLIBS_NORMAL_BASE_PARSER_SUPPORT) \
# $(LIBDAI_NORMAL)
MADPLIBS_NORMAL_NOPARSER_NOPLANNING = $(MADPLIBS_NORMAL_BASE)
MADPLIBS_NORMAL_NOPLANNING = $(MADPLIBS_NORMAL_BASE_PARSER_SUPPORT)
MADPLIBS_NORMAL_NOPARSER = $(MADPLIBS_NORMAL)

##############
# Includedirs, libdirs, libs and cflags for all programs 
INCLUDEPATH = -I$(top_srcdir)/src/base\
 -I$(top_srcdir)/src/include -I$(top_srcdir)/src/support\
 -I$(top_srcdir)/src/planning\
 -I$(top_srcdir)/src/parser \
 $(MADP_INCLUDES) 

AM_CPPFLAGS = -pipe $(MARCH_FLAGS) $(INCLUDEPATH) $(am__append_1) \
	$(am__append_3)
AM_LDFLAGS = $(am__append_2)
AM_CXXFLAGS = $(CSTANDARD)
SIMULATION_CPPFILES = SimulationResult.cpp\
 SimulationDecPOMDPDiscrete.cpp \
 SimulationTOIDecPOMDPDiscrete.cpp \
 SimulationFactoredDecPOMDPDiscrete.cpp \
 AgentPOMDP.cpp\
 AgentBG.cpp\
 AgentQMDP.cpp\
 AgentRandom.cpp\
 AgentMDP.cpp\
 AgentOnlinePlanningMDP.cpp\
 AgentQLearner.cpp

SIMULATION_HFILES = $(SIMULATION_CPPFILES:.cpp=.h) \
 Simulation.h\
 SimulationAgent.h \
 AgentDecPOMDPDiscrete.h\
 AgentDelayedSharedObservations.h\
 AgentFullyObservable.h\
 AgentSharedObservations.h\
 AgentLocalObservations.h\
 AgentTOIFullyObservableSyncedSpecialReward.h\
 AgentTOIFullyObservableSynced.h

GMAA_CPPFILES = \
 GeneralizedMAAStarPlanner.cpp \
 GeneralizedMAAStarPlannerForDecPOMDPDiscrete.cpp \
 GeneralizedMAAStarPlannerForFactoredDecPOMDPDiscrete.cpp \
 GMAA_MAAstar.cpp\
 GMAA_MAAstarClassic.cpp\
 GMAA_MAAstarCluster.cpp\
 GMAA_kGMAACluster.cpp\
 PolicyPoolJPolValPair.cpp\
 PolicyPoolPartialJPolValPair.cpp\
 JPPVValuePair.cpp \
 JPPVIndexValuePair.cpp\
 PartialJPDPValuePair.cpp\
 PartialJPPVIndexValuePair.cpp\
 GMAA_kGMAA.cpp \
 GMAA_MAA_ELSI.cpp 

GMAA_HFILES = $(GMAA_CPPFILES:.cpp=.h)\
 PolicyPoolInterface.h\
 PartialPolicyPoolInterface.h\
 PartialPolicyPoolItemInterface.h\
 PolicyPoolItemInterface.h

POMDP_CPPFILES = \
 BeliefValue.cpp\
 BeliefSetNonStationary.cpp\
 AlphaVector.cpp \
 AlphaVectorPlanning.cpp\
 AlphaVectorPruning.cpp\
 Perseus.cpp \
 AlphaVectorPOMDP.cpp\
 AlphaVectorConstrainedPOMDP.cpp\
 PerseusPOMDPPlanner.cpp\
 PerseusConstrainedPOMDPPlanner.cpp\
 MonahanPOMDPPlanner.cpp \
 AlphaVectorBG.cpp\
 MonahanBGPlanner.cpp\
 MonahanPlanner.cpp \
 QMonahanPOMDP.cpp \
 PerseusBGPlanner.cpp \
 QMonahanBG.cpp \
 QAlphaVector.cpp \
 TreeIncPruneBGPlanner.cpp\
 QBGPlanner_TreeIncPruneBnB.cpp\
 QTreeIncPruneBG.cpp\
 PerseusBGPOMDPPlanner.cpp \
 AlphaVectorWeighted.cpp\
 PerseusWeightedPlanner.cpp \
 PerseusQFunctionPlanner.cpp\
 PerseusStationary.cpp\
 PerseusNonStationary.cpp\
 PerseusNonStationaryQPlanner.cpp\
 PerseusBGNSPlanner.cpp

POMDP_HFILES = $(POMDP_CPPFILES:.cpp=.h)\
 ValueFunctionPOMDPDiscrete.h\
 BGBackupType.h\
 PerseusBackupType.h\
 BeliefSet.h \
 QAV.h QAVParameters.h

PLANNING_CPPFILES = BruteForceSearchPlanner.cpp \
	JESPExhaustivePlanner.cpp JESPDynamicProgrammingPlanner.cpp \
	DICEPSPlanner.cpp QBG.cpp QPOMDP.cpp QMDP.cpp MDPSolver.cpp \
	MDPValueIteration.cpp MDPPolicyIteration.cpp MaxPlusSolver.cpp \
	MaxPlusSolverForBGs.cpp BGIP_SolverBruteForceSearch.cpp \
	BGIP_SolverBFSNonIncremental.cpp BGIP_SolverBranchAndBound.cpp \
	BGIP_BnB_Node.cpp BnB_JointTypeOrdering.cpp \
	BayesianGameIdenticalPayoffSolver.cpp \
	BayesianGameIdenticalPayoffSolver_T.cpp \
	BGIP_SolverAlternatingMaximization.cpp BGIP_SolverCE.cpp \
	BGIP_SolverMaxPlus.cpp BGIP_SolverRandom.cpp \
	BGIP_SolverCreator_MP.cpp BGCG_Solver.cpp \
	BGCG_SolverNonserialDynamicProgramming.cpp \
	BGCG_SolverMaxPlus.cpp BGCG_SolverRandom.cpp \
	BGCG_SolverCreator.cpp BGCG_SolverFG.cpp \
	BG_FactorGraphCreator.cpp FG_Solver.cpp FG_SolverMaxPlus.cpp \
	FG_SolverNDP.cpp QFunction.cpp QFunctionForDecPOMDP.cpp \
	QFunctionForFactoredDecPOMDP.cpp QFunctionJAOHInterface.cpp \
	QFunctionJAOH.cpp QFunctionJAOHTree.cpp \
	QFunctionJointBelief.cpp QHybrid.cpp qheur.cpp gmaatype.cpp \
	JESPtype.cpp BGIP_SolverType.cpp BayesianGameBase.cpp \
	BayesianGame.cpp BayesianGameIdenticalPayoff.cpp \
	BayesianGameCollaborativeGraphical.cpp \
	BayesianGameForDecPOMDPStage.cpp BGforStageCreation.cpp \
	BayesianGameForDecPOMDPStageInterface.cpp \
	BayesianGameWithClusterInfo.cpp \
	JointPolicyPureVectorForClusteredBG.cpp TypeCluster.cpp \
	Type.cpp Type_PointerTuple.cpp Type_AOHIndex.cpp \
	LocalBGValueFunctionVector.cpp \
	LocalBGValueFunctionInterface.cpp \
	LocalBGValueFunctionBGCGWrapper.cpp BGIPSolution.cpp \
	ValueFunctionDecPOMDPDiscrete.cpp \
	FactoredQLastTimeStepOrElse.cpp \
	FactoredQLastTimeStepOrQMDP.cpp \
	FactoredQLastTimeStepOrQPOMDP.cpp \
	FactoredQLastTimeStepOrQBG.cpp OptimalValueDatabase.cpp \
	argumentHandlers.cpp argumentUtils.cpp directories.cpp \
	Problem_CGBG_FF.cpp $(am__append_4)
PLANNING_HFILES = $(PLANNING_CPPFILES:.cpp=.h) \
 argumentHandlersPostChild.h\
 JointPolicyValuePair.h\
 PartialJointPolicyValuePair.h\
 ValueFunction.h\
 QFunctionInterface.h\
 QFunctionForDecPOMDPInterface.h\
 QFunctionForFactoredDecPOMDPInterface.h\
 QFunctionJAOHInterface.h\
 QFunctionJointBeliefInterface.h\
 FactoredQFunctionStateJAOHInterface.h\
 BGIP_SolverCreatorInterface_T.h\
 BGIP_IncrementalSolverCreatorInterface_T.h\
 BGIP_SolverCreatorInterface.h\
 BGIP_SolverCreator_AM.h\
 BGIP_SolverCreator_CE.h\
 BGIP_SolverCreator_BFS.h\
 BGIP_SolverCreator_BFSNonInc.h\
 BGIP_SolverCreator_BnB.h\
 BGIP_SolverCreator_Random.h\
 BGCG_SolverCreator_NDP.h \
 BGCG_SolverCreator_MP.h \
 BGCG_SolverCreator_FG.h \
 BGCG_SolverCreator_Random.h \
 BayesianGameIdenticalPayoffInterface.h \
 BGIP_IncrementalSolverInterface_T.h \
 BGIP_IncrementalSolverInterface.h\
 OnlineMDPPlanner.h

PLANNING_FILES = $(PLANNING_CPPFILES) $(PLANNING_HFILES)\
 $(SIMULATION_CPPFILES) $(SIMULATION_HFILES)\
 $(POMDP_CPPFILES) $(POMDP_HFILES)\
 $(GMAA_CPPFILES) $(GMAA_HFILES)


###############
# All DYNAMIC libraries
# the LTLIBRARIES (LibTool-libraries)

# the library to be build...
lib_LTLIBRARIES = 
noinst_LTLIBRARIES = libMADPPlanning.la

# sources for the library:
libMADPPlanning_la_SOURCES = $(PLANNING_FILES)
libMADPPlanning_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPP_OPTIMIZATION_FLAGS)
libMADPPlanning_la_LDFLAGS = $(AM_LDFLAGS)
libMADPPlanning_la_LIBADD = 
# for installing the headers
libMADPPlanning_ladir = $(pkgincludedir)#/planning
libMADPPlanning_la_HEADERS = $(PLANNING_HFILES) $(SIMULATION_HFILES) $(POMDP_HFILES) $(GMAA_HFILES)
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/src/Makefile.custom $(top_srcdir)/config/Make-rules $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/planning/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/planning/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/src/Makefile.custom $(top_srcdir)/config/Make-rules:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libMADPPlanning.la: $(libMADPPlanning_la_OBJECTS) $(libMADPPlanning_la_DEPENDENCIES) $(EXTRA_libMADPPlanning_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libMADPPlanning_la_LINK)  $(libMADPPlanning_la_OBJECTS) $(libMADPPlanning_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-AgentBG.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-AgentMDP.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-AgentOnlinePlanningMDP.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-AgentPOMDP.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-AgentQLearner.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-AgentQMDP.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-AgentRandom.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-AlphaVector.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-AlphaVectorBG.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-AlphaVectorConstrainedPOMDP.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-AlphaVectorPOMDP.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-AlphaVectorPlanning.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-AlphaVectorPruning.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-AlphaVectorWeighted.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BGCG_Solver.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BGCG_SolverCreator.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BGCG_SolverFG.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BGCG_SolverMaxPlus.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BGCG_SolverNonserialDynamicProgramming.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BGCG_SolverRandom.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BGIPSolution.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BGIP_BnB_Node.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BGIP_SolverAlternatingMaximization.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BGIP_SolverBFSNonIncremental.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BGIP_SolverBranchAndBound.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BGIP_SolverBruteForceSearch.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BGIP_SolverCE.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BGIP_SolverCreator_MP.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BGIP_SolverMaxPlus.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BGIP_SolverRandom.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BGIP_SolverType.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BG_FactorGraphCreator.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BGforStageCreation.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BayesianGame.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BayesianGameBase.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BayesianGameCollaborativeGraphical.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BayesianGameForDecPOMDPStage.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BayesianGameForDecPOMDPStageInterface.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BayesianGameIdenticalPayoff.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BayesianGameIdenticalPayoffSolver.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BayesianGameIdenticalPayoffSolver_T.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BayesianGameWithClusterInfo.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BeliefSetNonStationary.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BeliefValue.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BnB_JointTypeOrdering.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BruteForceSearchPlanner.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-DICEPSPlanner.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-FG_Solver.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-FG_SolverMaxPlus.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-FG_SolverNDP.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-FactoredQLastTimeStepOrElse.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-FactoredQLastTimeStepOrQBG.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-FactoredQLastTimeStepOrQMDP.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-FactoredQLastTimeStepOrQPOMDP.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-GMAA_MAA_ELSI.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-GMAA_MAAstar.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-GMAA_MAAstarClassic.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-GMAA_MAAstarCluster.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-GMAA_kGMAA.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-GMAA_kGMAACluster.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-GeneralizedMAAStarPlanner.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-GeneralizedMAAStarPlannerForDecPOMDPDiscrete.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-GeneralizedMAAStarPlannerForFactoredDecPOMDPDiscrete.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-JESPDynamicProgrammingPlanner.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-JESPExhaustivePlanner.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-JESPtype.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-JPPVIndexValuePair.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-JPPVValuePair.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-JointPolicyPureVectorForClusteredBG.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-LocalBGValueFunctionBGCGWrapper.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-LocalBGValueFunctionInterface.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-LocalBGValueFunctionVector.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-MDPPolicyIteration.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-MDPPolicyIterationGPU.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-MDPSolver.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-MDPValueIteration.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-MaxPlusSolver.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-MaxPlusSolverForBGs.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-MonahanBGPlanner.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-MonahanPOMDPPlanner.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-MonahanPlanner.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-OptimalValueDatabase.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-PartialJPDPValuePair.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-PartialJPPVIndexValuePair.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-Perseus.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-PerseusBGNSPlanner.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-PerseusBGPOMDPPlanner.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-PerseusBGPlanner.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-PerseusConstrainedPOMDPPlanner.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-PerseusNonStationary.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-PerseusNonStationaryQPlanner.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-PerseusPOMDPPlanner.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-PerseusQFunctionPlanner.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-PerseusStationary.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-PerseusWeightedPlanner.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-PolicyPoolJPolValPair.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-PolicyPoolPartialJPolValPair.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-Problem_CGBG_FF.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-QAlphaVector.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-QBG.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-QBGPlanner_TreeIncPruneBnB.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-QFunction.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-QFunctionForDecPOMDP.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-QFunctionForFactoredDecPOMDP.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-QFunctionJAOH.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-QFunctionJAOHInterface.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-QFunctionJAOHTree.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-QFunctionJointBelief.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-QHybrid.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-QMDP.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-QMonahanBG.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-QMonahanPOMDP.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-QPOMDP.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-QTreeIncPruneBG.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-SimulationDecPOMDPDiscrete.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-SimulationFactoredDecPOMDPDiscrete.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-SimulationResult.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-SimulationTOIDecPOMDPDiscrete.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-SystemOfLinearEquationsSolver.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-TreeIncPruneBGPlanner.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-Type.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-TypeCluster.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-Type_AOHIndex.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-Type_PointerTuple.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-ValueFunctionDecPOMDPDiscrete.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-argumentHandlers.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-argumentUtils.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-directories.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-gmaatype.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-qheur.Plo@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

libMADPPlanning_la-BruteForceSearchPlanner.lo: BruteForceSearchPlanner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BruteForceSearchPlanner.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BruteForceSearchPlanner.Tpo -c -o libMADPPlanning_la-BruteForceSearchPlanner.lo `test -f 'BruteForceSearchPlanner.cpp' || echo '$(srcdir)/'`BruteForceSearchPlanner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-BruteForceSearchPlanner.Tpo $(DEPDIR)/libMADPPlanning_la-BruteForceSearchPlanner.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BruteForceSearchPlanner.cpp' object='libMADPPlanning_la-BruteForceSearchPlanner.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BruteForceSearchPlanner.lo `test -f 'BruteForceSearchPlanner.cpp' || echo '$(srcdir)/'`BruteForceSearchPlanner.cpp

libMADPPlanning_la-JESPExhaustivePlanner.lo: JESPExhaustivePlanner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-JESPExhaustivePlanner.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-JESPExhaustivePlanner.Tpo -c -o libMADPPlanning_la-JESPExhaustivePlanner.lo `test -f 'JESPExhaustivePlanner.cpp' || echo '$(srcdir)/'`JESPExhaustivePlanner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-JESPExhaustivePlanner.Tpo $(DEPDIR)/libMADPPlanning_la-JESPExhaustivePlanner.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='JESPExhaustivePlanner.cpp' object='libMADPPlanning_la-JESPExhaustivePlanner.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-JESPExhaustivePlanner.lo `test -f 'JESPExhaustivePlanner.cpp' || echo '$(srcdir)/'`JESPExhaustivePlanner.cpp

libMADPPlanning_la-JESPDynamicProgrammingPlanner.lo: JESPDynamicProgrammingPlanner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-JESPDynamicProgrammingPlanner.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-JESPDynamicProgrammingPlanner.Tpo -c -o libMADPPlanning_la-JESPDynamicProgrammingPlanner.lo `test -f 'JESPDynamicProgrammingPlanner.cpp' || echo '$(srcdir)/'`JESPDynamicProgrammingPlanner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-JESPDynamicProgrammingPlanner.Tpo $(DEPDIR)/libMADPPlanning_la-JESPDynamicProgrammingPlanner.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='JESPDynamicProgrammingPlanner.cpp' object='libMADPPlanning_la-JESPDynamicProgrammingPlanner.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-JESPDynamicProgrammingPlanner.lo `test -f 'JESPDynamicProgrammingPlanner.cpp' || echo '$(srcdir)/'`JESPDynamicProgrammingPlanner.cpp

libMADPPlanning_la-DICEPSPlanner.lo: DICEPSPlanner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-DICEPSPlanner.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-DICEPSPlanner.Tpo -c -o libMADPPlanning_la-DICEPSPlanner.lo `test -f 'DICEPSPlanner.cpp' || echo '$(srcdir)/'`DICEPSPlanner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-DICEPSPlanner.Tpo $(DEPDIR)/libMADPPlanning_la-DICEPSPlanner.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='DICEPSPlanner.cpp' object='libMADPPlanning_la-DICEPSPlanner.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-DICEPSPlanner.lo `test -f 'DICEPSPlanner.cpp' || echo '$(srcdir)/'`DICEPSPlanner.cpp

libMADPPlanning_la-QBG.lo: QBG.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-QBG.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-QBG.Tpo -c -o libMADPPlanning_la-QBG.lo `test -f 'QBG.cpp' || echo '$(srcdir)/'`QBG.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-QBG.Tpo $(DEPDIR)/libMADPPlanning_la-QBG.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='QBG.cpp' object='libMADPPlanning_la-QBG.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-QBG.lo `test -f 'QBG.cpp' || echo '$(srcdir)/'`QBG.cpp

libMADPPlanning_la-QPOMDP.lo: QPOMDP.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-QPOMDP.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-QPOMDP.Tpo -c -o libMADPPlanning_la-QPOMDP.lo `test -f 'QPOMDP.cpp' || echo '$(srcdir)/'`QPOMDP.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-QPOMDP.Tpo $(DEPDIR)/libMADPPlanning_la-QPOMDP.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='QPOMDP.cpp' object='libMADPPlanning_la-QPOMDP.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-QPOMDP.lo `test -f 'QPOMDP.cpp' || echo '$(srcdir)/'`QPOMDP.cpp

libMADPPlanning_la-QMDP.lo: QMDP.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-QMDP.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-QMDP.Tpo -c -o libMADPPlanning_la-QMDP.lo `test -f 'QMDP.cpp' || echo '$(srcdir)/'`QMDP.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-QMDP.Tpo $(DEPDIR)/libMADPPlanning_la-QMDP.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='QMDP.cpp' object='libMADPPlanning_la-QMDP.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-QMDP.lo `test -f 'QMDP.cpp' || echo '$(srcdir)/'`QMDP.cpp

libMADPPlanning_la-MDPSolver.lo: MDPSolver.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-MDPSolver.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-MDPSolver.Tpo -c -o libMADPPlanning_la-MDPSolver.lo `test -f 'MDPSolver.cpp' || echo '$(srcdir)/'`MDPSolver.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-MDPSolver.Tpo $(DEPDIR)/libMADPPlanning_la-MDPSolver.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='MDPSolver.cpp' object='libMADPPlanning_la-MDPSolver.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-MDPSolver.lo `test -f 'MDPSolver.cpp' || echo '$(srcdir)/'`MDPSolver.cpp

libMADPPlanning_la-MDPValueIteration.lo: MDPValueIteration.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-MDPValueIteration.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-MDPValueIteration.Tpo -c -o libMADPPlanning_la-MDPValueIteration.lo `test -f 'MDPValueIteration.cpp' || echo '$(srcdir)/'`MDPValueIteration.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-MDPValueIteration.Tpo $(DEPDIR)/libMADPPlanning_la-MDPValueIteration.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='MDPValueIteration.cpp' object='libMADPPlanning_la-MDPValueIteration.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-MDPValueIteration.lo `test -f 'MDPValueIteration.cpp' || echo '$(srcdir)/'`MDPValueIteration.cpp

libMADPPlanning_la-MDPPolicyIteration.lo: MDPPolicyIteration.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-MDPPolicyIteration.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-MDPPolicyIteration.Tpo -c -o libMADPPlanning_la-MDPPolicyIteration.lo `test -f 'MDPPolicyIteration.cpp' || echo '$(srcdir)/'`MDPPolicyIteration.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-MDPPolicyIteration.Tpo $(DEPDIR)/libMADPPlanning_la-MDPPolicyIteration.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='MDPPolicyIteration.cpp' object='libMADPPlanning_la-MDPPolicyIteration.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-MDPPolicyIteration.lo `test -f 'MDPPolicyIteration.cpp' || echo '$(srcdir)/'`MDPPolicyIteration.cpp

libMADPPlanning_la-MaxPlusSolver.lo: MaxPlusSolver.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-MaxPlusSolver.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-MaxPlusSolver.Tpo -c -o libMADPPlanning_la-MaxPlusSolver.lo `test -f 'MaxPlusSolver.cpp' || echo '$(srcdir)/'`MaxPlusSolver.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-MaxPlusSolver.Tpo $(DEPDIR)/libMADPPlanning_la-MaxPlusSolver.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='MaxPlusSolver.cpp' object='libMADPPlanning_la-MaxPlusSolver.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-MaxPlusSolver.lo `test -f 'MaxPlusSolver.cpp' || echo '$(srcdir)/'`MaxPlusSolver.cpp

libMADPPlanning_la-MaxPlusSolverForBGs.lo: MaxPlusSolverForBGs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-MaxPlusSolverForBGs.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-MaxPlusSolverForBGs.Tpo -c -o libMADPPlanning_la-MaxPlusSolverForBGs.lo `test -f 'MaxPlusSolverForBGs.cpp' || echo '$(srcdir)/'`MaxPlusSolverForBGs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-MaxPlusSolverForBGs.Tpo $(DEPDIR)/libMADPPlanning_la-MaxPlusSolverForBGs.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='MaxPlusSolverForBGs.cpp' object='libMADPPlanning_la-MaxPlusSolverForBGs.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-MaxPlusSolverForBGs.lo `test -f 'MaxPlusSolverForBGs.cpp' || echo '$(srcdir)/'`MaxPlusSolverForBGs.cpp

libMADPPlanning_la-BGIP_SolverBruteForceSearch.lo: BGIP_SolverBruteForceSearch.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BGIP_SolverBruteForceSearch.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BGIP_SolverBruteForceSearch.Tpo -c -o libMADPPlanning_la-BGIP_SolverBruteForceSearch.lo `test -f 'BGIP_SolverBruteForceSearch.cpp' || echo '$(srcdir)/'`BGIP_SolverBruteForceSearch.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-BGIP_SolverBruteForceSearch.Tpo $(DEPDIR)/libMADPPlanning_la-BGIP_SolverBruteForceSearch.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BGIP_SolverBruteForceSearch.cpp' object='libMADPPlanning_la-BGIP_SolverBruteForceSearch.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BGIP_SolverBruteForceSearch.lo `test -f 'BGIP_SolverBruteForceSearch.cpp' || echo '$(srcdir)/'`BGIP_SolverBruteForceSearch.cpp

libMADPPlanning_la-BGIP_SolverBFSNonIncremental.lo: BGIP_SolverBFSNonIncremental.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BGIP_SolverBFSNonIncremental.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BGIP_SolverBFSNonIncremental.Tpo -c -o libMADPPlanning_la-BGIP_SolverBFSNonIncremental.lo `test -f 'BGIP_SolverBFSNonIncremental.cpp' || echo '$(srcdir)/'`BGIP_SolverBFSNonIncremental.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-BGIP_SolverBFSNonIncremental.Tpo $(DEPDIR)/libMADPPlanning_la-BGIP_SolverBFSNonIncremental.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BGIP_SolverBFSNonIncremental.cpp' object='libMADPPlanning_la-BGIP_SolverBFSNonIncremental.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BGIP_SolverBFSNonIncremental.lo `test -f 'BGIP_SolverBFSNonIncremental.cpp' || echo '$(srcdir)/'`BGIP_SolverBFSNonIncremental.cpp

libMADPPlanning_la-BGIP_SolverBranchAndBound.lo: BGIP_SolverBranchAndBound.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BGIP_SolverBranchAndBound.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BGIP_SolverBranchAndBound.Tpo -c -o libMADPPlanning_la-BGIP_SolverBranchAndBound.lo `test -f 'BGIP_SolverBranchAndBound.cpp' || echo '$(srcdir)/'`BGIP_SolverBranchAndBound.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-BGIP_SolverBranchAndBound.Tpo $(DEPDIR)/libMADPPlanning_la-BGIP_SolverBranchAndBound.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BGIP_SolverBranchAndBound.cpp' object='libMADPPlanning_la-BGIP_SolverBranchAndBound.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BGIP_SolverBranchAndBound.lo `test -f 'BGIP_SolverBranchAndBound.cpp' || echo '$(srcdir)/'`BGIP_SolverBranchAndBound.cpp

libMADPPlanning_la-BGIP_BnB_Node.lo: BGIP_BnB_Node.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BGIP_BnB_Node.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BGIP_BnB_Node.Tpo -c -o libMADPPlanning_la-BGIP_BnB_Node.lo `test -f 'BGIP_BnB_Node.cpp' || echo '$(srcdir)/'`BGIP_BnB_Node.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-BGIP_BnB_Node.Tpo $(DEPDIR)/libMADPPlanning_la-BGIP_BnB_Node.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BGIP_BnB_Node.cpp' object='libMADPPlanning_la-BGIP_BnB_Node.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BGIP_BnB_Node.lo `test -f 'BGIP_BnB_Node.cpp' || echo '$(srcdir)/'`BGIP_BnB_Node.cpp

libMADPPlanning_la-BnB_JointTypeOrdering.lo: BnB_JointTypeOrdering.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BnB_JointTypeOrdering.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BnB_JointTypeOrdering.Tpo -c -o libMADPPlanning_la-BnB_JointTypeOrdering.lo `test -f 'BnB_JointTypeOrdering.cpp' || echo '$(srcdir)/'`BnB_JointTypeOrdering.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-BnB_JointTypeOrdering.Tpo $(DEPDIR)/libMADPPlanning_la-BnB_JointTypeOrdering.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BnB_JointTypeOrdering.cpp' object='libMADPPlanning_la-BnB_JointTypeOrdering.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BnB_JointTypeOrdering.lo `test -f 'BnB_JointTypeOrdering.cpp' || echo '$(srcdir)/'`BnB_JointTypeOrdering.cpp

libMADPPlanning_la-BayesianGameIdenticalPayoffSolver.lo: BayesianGameIdenticalPayoffSolver.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BayesianGameIdenticalPayoffSolver.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BayesianGameIdenticalPayoffSolver.Tpo -c -o libMADPPlanning_la-BayesianGameIdenticalPayoffSolver.lo `test -f 'BayesianGameIdenticalPayoffSolver.cpp' || echo '$(srcdir)/'`BayesianGameIdenticalPayoffSolver.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-BayesianGameIdenticalPayoffSolver.Tpo $(DEPDIR)/libMADPPlanning_la-BayesianGameIdenticalPayoffSolver.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BayesianGameIdenticalPayoffSolver.cpp' object='libMADPPlanning_la-BayesianGameIdenticalPayoffSolver.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BayesianGameIdenticalPayoffSolver.lo `test -f 'BayesianGameIdenticalPayoffSolver.cpp' || echo '$(srcdir)/'`BayesianGameIdenticalPayoffSolver.cpp

libMADPPlanning_la-BayesianGameIdenticalPayoffSolver_T.lo: BayesianGameIdenticalPayoffSolver_T.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BayesianGameIdenticalPayoffSolver_T.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BayesianGameIdenticalPayoffSolver_T.Tpo -c -o libMADPPlanning_la-BayesianGameIdenticalPayoffSolver_T.lo `test -f 'BayesianGameIdenticalPayoffSolver_T.cpp' || echo '$(srcdir)/'`BayesianGameIdenticalPayoffSolver_T.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-BayesianGameIdenticalPayoffSolver_T.Tpo $(DEPDIR)/libMADPPlanning_la-BayesianGameIdenticalPayoffSolver_T.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BayesianGameIdenticalPayoffSolver_T.cpp' object='libMADPPlanning_la-BayesianGameIdenticalPayoffSolver_T.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BayesianGameIdenticalPayoffSolver_T.lo `test -f 'BayesianGameIdenticalPayoffSolver_T.cpp' || echo '$(srcdir)/'`BayesianGameIdenticalPayoffSolver_T.cpp

libMADPPlanning_la-BGIP_SolverAlternatingMaximization.lo: BGIP_SolverAlternatingMaximization.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BGIP_SolverAlternatingMaximization.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BGIP_SolverAlternatingMaximization.Tpo -c -o libMADPPlanning_la-BGIP_SolverAlternatingMaximization.lo `test -f 'BGIP_SolverAlternatingMaximization.cpp' || echo '$(srcdir)/'`BGIP_SolverAlternatingMaximization.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-BGIP_SolverAlternatingMaximization.Tpo $(DEPDIR)/libMADPPlanning_la-BGIP_SolverAlternatingMaximization.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BGIP_SolverAlternatingMaximization.cpp' object='libMADPPlanning_la-BGIP_SolverAlternatingMaximization.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BGIP_SolverAlternatingMaximization.lo `test -f 'BGIP_SolverAlternatingMaximization.cpp' || echo '$(srcdir)/'`BGIP_SolverAlternatingMaximization.cpp

libMADPPlanning_la-BGIP_SolverCE.lo: BGIP_SolverCE.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BGIP_SolverCE.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BGIP_SolverCE.Tpo -c -o libMADPPlanning_la-BGIP_SolverCE.lo `test -f 'BGIP_SolverCE.cpp' || echo '$(srcdir)/'`BGIP_SolverCE.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-BGIP_SolverCE.Tpo $(DEPDIR)/libMADPPlanning_la-BGIP_SolverCE.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BGIP_SolverCE.cpp' object='libMADPPlanning_la-BGIP_SolverCE.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BGIP_SolverCE.lo `test -f 'BGIP_SolverCE.cpp' || echo '$(srcdir)/'`BGIP_SolverCE.cpp

libMADPPlanning_la-BGIP_SolverMaxPlus.lo: BGIP_SolverMaxPlus.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BGIP_SolverMaxPlus.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BGIP_SolverMaxPlus.Tpo -c -o libMADPPlanning_la-BGIP_SolverMaxPlus.lo `test -f 'BGIP_SolverMaxPlus.cpp' || echo '$(srcdir)/'`BGIP_SolverMaxPlus.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-BGIP_SolverMaxPlus.Tpo $(DEPDIR)/libMADPPlanning_la-BGIP_SolverMaxPlus.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BGIP_SolverMaxPlus.cpp' object='libMADPPlanning_la-BGIP_SolverMaxPlus.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BGIP_SolverMaxPlus.lo `test -f 'BGIP_SolverMaxPlus.cpp' || echo '$(srcdir)/'`BGIP_SolverMaxPlus.cpp

libMADPPlanning_la-BGIP_SolverRandom.lo: BGIP_SolverRandom.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BGIP_SolverRandom.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BGIP_SolverRandom.Tpo -c -o libMADPPlanning_la-BGIP_SolverRandom.lo `test -f 'BGIP_SolverRandom.cpp' || echo '$(srcdir)/'`BGIP_SolverRandom.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-BGIP_SolverRandom.Tpo $(DEPDIR)/libMADPPlanning_la-BGIP_SolverRandom.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BGIP_SolverRandom.cpp' object='libMADPPlanning_la-BGIP_SolverRandom.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BGIP_SolverRandom.lo `test -f 'BGIP_SolverRandom.cpp' || echo '$(srcdir)/'`BGIP_SolverRandom.cpp

libMADPPlanning_la-BGIP_SolverCreator_MP.lo: BGIP_SolverCreator_MP.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BGIP_SolverCreator_MP.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BGIP_SolverCreator_MP.Tpo -c -o libMADPPlanning_la-BGIP_SolverCreator_MP.lo `test -f 'BGIP_SolverCreator_MP.cpp' || echo '$(srcdir)/'`BGIP_SolverCreator_MP.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-BGIP_SolverCreator_MP.Tpo $(DEPDIR)/libMADPPlanning_la-BGIP_SolverCreator_MP.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BGIP_SolverCreator_MP.cpp' object='libMADPPlanning_la-BGIP_SolverCreator_MP.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BGIP_SolverCreator_MP.lo `test -f 'BGIP_SolverCreator_MP.cpp' || echo '$(srcdir)/'`BGIP_SolverCreator_MP.cpp

libMADPPlanning_la-BGCG_Solver.lo: BGCG_Solver.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BGCG_Solver.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BGCG_Solver.Tpo -c -o libMADPPlanning_la-BGCG_Solver.lo `test -f 'BGCG_Solver.cpp' || echo '$(srcdir)/'`BGCG_Solver.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-BGCG_Solver.Tpo $(DEPDIR)/libMADPPlanning_la-BGCG_Solver.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BGCG_Solver.cpp' object='libMADPPlanning_la-BGCG_Solver.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BGCG_Solver.lo `test -f 'BGCG_Solver.cpp' || echo '$(srcdir)/'`BGCG_Solver.cpp

libMADPPlanning_la-BGCG_SolverNonserialDynamicProgramming.lo: BGCG_SolverNonserialDynamicProgramming.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BGCG_SolverNonserialDynamicProgramming.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BGCG_SolverNonserialDynamicProgramming.Tpo -c -o libMADPPlanning_la-BGCG_SolverNonserialDynamicProgramming.lo `test -f 'BGCG_SolverNonserialDynamicProgramming.cpp' || echo '$(srcdir)/'`BGCG_SolverNonserialDynamicProgramming.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-BGCG_SolverNonserialDynamicProgramming.Tpo $(DEPDIR)/libMADPPlanning_la-BGCG_SolverNonserialDynamicProgramming.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BGCG_SolverNonserialDynamicProgramming.cpp' object='libMADPPlanning_la-BGCG_SolverNonserialDynamicProgramming.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BGCG_SolverNonserialDynamicProgramming.lo `test -f 'BGCG_SolverNonserialDynamicProgramming.cpp' || echo '$(srcdir)/'`BGCG_SolverNonserialDynamicProgramming.cpp

libMADPPlanning_la-BGCG_SolverMaxPlus.lo: BGCG_SolverMaxPlus.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BGCG_SolverMaxPlus.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BGCG_SolverMaxPlus.Tpo -c -o libMADPPlanning_la-BGCG_SolverMaxPlus.lo `test -f 'BGCG_SolverMaxPlus.cpp' || echo '$(srcdir)/'`BGCG_SolverMaxPlus.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-BGCG_SolverMaxPlus.Tpo $(DEPDIR)/libMADPPlanning_la-BGCG_SolverMaxPlus.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BGCG_SolverMaxPlus.cpp' object='libMADPPlanning_la-BGCG_SolverMaxPlus.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BGCG_SolverMaxPlus.lo `test -f 'BGCG_SolverMaxPlus.cpp' || echo '$(srcdir)/'`BGCG_SolverMaxPlus.cpp

libMADPPlanning_la-BGCG_SolverRandom.lo: BGCG_SolverRandom.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BGCG_SolverRandom.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BGCG_SolverRandom.Tpo -c -o libMADPPlanning_la-BGCG_SolverRandom.lo `test -f 'BGCG_SolverRandom.cpp' || echo '$(srcdir)/'`BGCG_SolverRandom.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-BGCG_SolverRandom.Tpo $(DEPDIR)/libMADPPlanning_la-BGCG_SolverRandom.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BGCG_SolverRandom.cpp' object='libMADPPlanning_la-BGCG_SolverRandom.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BGCG_SolverRandom.lo `test -f 'BGCG_SolverRandom.cpp' || echo '$(srcdir)/'`BGCG_SolverRandom.cpp

libMADPPlanning_la-BGCG_SolverCreator.lo: BGCG_SolverCreator.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BGCG_SolverCreator.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BGCG_SolverCreator.Tpo -c -o libMADPPlanning_la-BGCG_SolverCreator.lo `test -f 'BGCG_SolverCreator.cpp' || echo '$(srcdir)/'`BGCG_SolverCreator.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-BGCG_SolverCreator.Tpo $(DEPDIR)/libMADPPlanning_la-BGCG_SolverCreator.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BGCG_SolverCreator.cpp' object='libMADPPlanning_la-BGCG_SolverCreator.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BGCG_SolverCreator.lo `test -f 'BGCG_SolverCreator.cpp' || echo '$(srcdir)/'`BGCG_SolverCreator.cpp

libMADPPlanning_la-BGCG_SolverFG.lo: BGCG_SolverFG.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BGCG_SolverFG.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BGCG_SolverFG.Tpo -c -o libMADPPlanning_la-BGCG_SolverFG.lo `test -f 'BGCG_SolverFG.cpp' || echo '$(srcdir)/'`BGCG_SolverFG.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-BGCG_SolverFG.Tpo $(DEPDIR)/libMADPPlanning_la-BGCG_SolverFG.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BGCG_SolverFG.cpp' object='libMADPPlanning_la-BGCG_SolverFG.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BGCG_SolverFG.lo `test -f 'BGCG_SolverFG.cpp' || echo '$(srcdir)/'`BGCG_SolverFG.cpp

libMADPPlanning_la-BG_FactorGraphCreator.lo: BG_FactorGraphCreator.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BG_FactorGraphCreator.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BG_FactorGraphCreator.Tpo -c -o libMADPPlanning_la-BG_FactorGraphCreator.lo `test -f 'BG_FactorGraphCreator.cpp' || echo '$(srcdir)/'`BG_FactorGraphCreator.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-BG_FactorGraphCreator.Tpo $(DEPDIR)/libMADPPlanning_la-BG_FactorGraphCreator.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BG_FactorGraphCreator.cpp' object='libMADPPlanning_la-BG_FactorGraphCreator.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BG_FactorGraphCreator.lo `test -f 'BG_FactorGraphCreator.cpp' || echo '$(srcdir)/'`BG_FactorGraphCreator.cpp

libMADPPlanning_la-FG_Solver.lo: FG_Solver.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-FG_Solver.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-FG_Solver.Tpo -c -o libMADPPlanning_la-FG_Solver.lo `test -f 'FG_Solver.cpp' || echo '$(srcdir)/'`FG_Solver.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-FG_Solver.Tpo $(DEPDIR)/libMADPPlanning_la-FG_Solver.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FG_Solver.cpp' object='libMADPPlanning_la-FG_Solver.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-FG_Solver.lo `test -f 'FG_Solver.cpp' || echo '$(srcdir)/'`FG_Solver.cpp

libMADPPlanning_la-FG_SolverMaxPlus.lo: FG_SolverMaxPlus.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-FG_SolverMaxPlus.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-FG_SolverMaxPlus.Tpo -c -o libMADPPlanning_la-FG_SolverMaxPlus.lo `test -f 'FG_SolverMaxPlus.cpp' || echo '$(srcdir)/'`FG_SolverMaxPlus.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-FG_SolverMaxPlus.Tpo $(DEPDIR)/libMADPPlanning_la-FG_SolverMaxPlus.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FG_SolverMaxPlus.cpp' object='libMADPPlanning_la-FG_SolverMaxPlus.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-FG_SolverMaxPlus.lo `test -f 'FG_SolverMaxPlus.cpp' || echo '$(srcdir)/'`FG_SolverMaxPlus.cpp

libMADPPlanning_la-FG_SolverNDP.lo: FG_SolverNDP.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-FG_SolverNDP.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-FG_SolverNDP.Tpo -c -o libMADPPlanning_la-FG_SolverNDP.lo `test -f 'FG_SolverNDP.cpp' || echo '$(srcdir)/'`FG_SolverNDP.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-FG_SolverNDP.Tpo $(DEPDIR)/libMADPPlanning_la-FG_SolverNDP.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FG_SolverNDP.cpp' object='libMADPPlanning_la-FG_SolverNDP.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-FG_SolverNDP.lo `test -f 'FG_SolverNDP.cpp' || echo '$(srcdir)/'`FG_SolverNDP.cpp

libMADPPlanning_la-QFunction.lo: QFunction.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-QFunction.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-QFunction.Tpo -c -o libMADPPlanning_la-QFunction.lo `test -f 'QFunction.cpp' || echo '$(srcdir)/'`QFunction.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-QFunction.Tpo $(DEPDIR)/libMADPPlanning_la-QFunction.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='QFunction.cpp' object='libMADPPlanning_la-QFunction.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-QFunction.lo `test -f 'QFunction.cpp' || echo '$(srcdir)/'`QFunction.cpp

libMADPPlanning_la-QFunctionForDecPOMDP.lo: QFunctionForDecPOMDP.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-QFunctionForDecPOMDP.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-QFunctionForDecPOMDP.Tpo -c -o libMADPPlanning_la-QFunctionForDecPOMDP.lo `test -f 'QFunctionForDecPOMDP.cpp' || echo '$(srcdir)/'`QFunctionForDecPOMDP.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-QFunctionForDecPOMDP.Tpo $(DEPDIR)/libMADPPlanning_la-QFunctionForDecPOMDP.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='QFunctionForDecPOMDP.cpp' object='libMADPPlanning_la-QFunctionForDecPOMDP.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-QFunctionForDecPOMDP.lo `test -f 'QFunctionForDecPOMDP.cpp' || echo '$(srcdir)/'`QFunctionForDecPOMDP.cpp

libMADPPlanning_la-QFunctionForFactoredDecPOMDP.lo: QFunctionForFactoredDecPOMDP.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-QFunctionForFactoredDecPOMDP.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-QFunctionForFactoredDecPOMDP.Tpo -c -o libMADPPlanning_la-QFunctionForFactoredDecPOMDP.lo `test -f 'QFunctionForFactoredDecPOMDP.cpp' || echo '$(srcdir)/'`QFunctionForFactoredDecPOMDP.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-QFunctionForFactoredDecPOMDP.Tpo $(DEPDIR)/libMADPPlanning_la-QFunctionForFactoredDecPOMDP.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='QFunctionForFactoredDecPOMDP.cpp' object='libMADPPlanning_la-QFunctionForFactoredDecPOMDP.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-QFunctionForFactoredDecPOMDP.lo `test -f 'QFunctionForFactoredDecPOMDP.cpp' || echo '$(srcdir)/'`QFunctionForFactoredDecPOMDP.cpp

libMADPPlanning_la-QFunctionJAOHInterface.lo: QFunctionJAOHInterface.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-QFunctionJAOHInterface.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-QFunctionJAOHInterface.Tpo -c -o libMADPPlanning_la-QFunctionJAOHInterface.lo `test -f 'QFunctionJAOHInterface.cpp' || echo '$(srcdir)/'`QFunctionJAOHInterface.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-QFunctionJAOHInterface.Tpo $(DEPDIR)/libMADPPlanning_la-QFunctionJAOHInterface.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='QFunctionJAOHInterface.cpp' object='libMADPPlanning_la-QFunctionJAOHInterface.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-QFunctionJAOHInterface.lo `test -f 'QFunctionJAOHInterface.cpp' || echo '$(srcdir)/'`QFunctionJAOHInterface.cpp

libMADPPlanning_la-QFunctionJAOH.lo: QFunctionJAOH.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-QFunctionJAOH.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-QFunctionJAOH.Tpo -c -o libMADPPlanning_la-QFunctionJAOH.lo `test -f 'QFunctionJAOH.cpp' || echo '$(srcdir)/'`QFunctionJAOH.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-QFunctionJAOH.Tpo $(DEPDIR)/libMADPPlanning_la-QFunctionJAOH.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='QFunctionJAOH.cpp' object='libMADPPlanning_la-QFunctionJAOH.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-QFunctionJAOH.lo `test -f 'QFunctionJAOH.cpp' || echo '$(srcdir)/'`QFunctionJAOH.cpp

libMADPPlanning_la-QFunctionJAOHTree.lo: QFunctionJAOHTree.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-QFunctionJAOHTree.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-QFunctionJAOHTree.Tpo -c -o libMADPPlanning_la-QFunctionJAOHTree.lo `test -f 'QFunctionJAOHTree.cpp' || echo '$(srcdir)/'`QFunctionJAOHTree.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-QFunctionJAOHTree.Tpo $(DEPDIR)/libMADPPlanning_la-QFunctionJAOHTree.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='QFunctionJAOHTree.cpp' object='libMADPPlanning_la-QFunctionJAOHTree.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-QFunctionJAOHTree.lo `test -f 'QFunctionJAOHTree.cpp' || echo '$(srcdir)/'`QFunctionJAOHTree.cpp

libMADPPlanning_la-QFunctionJointBelief.lo: QFunctionJointBelief.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-QFunctionJointBelief.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-QFunctionJointBelief.Tpo -c -o libMADPPlanning_la-QFunctionJointBelief.lo `test -f 'QFunctionJointBelief.cpp' || echo '$(srcdir)/'`QFunctionJointBelief.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-QFunctionJointBelief.Tpo $(DEPDIR)/libMADPPlanning_la-QFunctionJointBelief.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='QFunctionJointBelief.cpp' object='libMADPPlanning_la-QFunctionJointBelief.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-QFunctionJointBelief.lo `test -f 'QFunctionJointBelief.cpp' || echo '$(srcdir)/'`QFunctionJointBelief.cpp

libMADPPlanning_la-QHybrid.lo: QHybrid.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-QHybrid.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-QHybrid.Tpo -c -o libMADPPlanning_la-QHybrid.lo `test -f 'QHybrid.cpp' || echo '$(srcdir)/'`QHybrid.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-QHybrid.Tpo $(DEPDIR)/libMADPPlanning_la-QHybrid.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='QHybrid.cpp' object='libMADPPlanning_la-QHybrid.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-QHybrid.lo `test -f 'QHybrid.cpp' || echo '$(srcdir)/'`QHybrid.cpp

libMADPPlanning_la-qheur.lo: qheur.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-qheur.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-qheur.Tpo -c -o libMADPPlanning_la-qheur.lo `test -f 'qheur.cpp' || echo '$(srcdir)/'`qheur.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-qheur.Tpo $(DEPDIR)/libMADPPlanning_la-qheur.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='qheur.cpp' object='libMADPPlanning_la-qheur.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-qheur.lo `test -f 'qheur.cpp' || echo '$(srcdir)/'`qheur.cpp

libMADPPlanning_la-gmaatype.lo: gmaatype.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-gmaatype.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-gmaatype.Tpo -c -o libMADPPlanning_la-gmaatype.lo `test -f 'gmaatype.cpp' || echo '$(srcdir)/'`gmaatype.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-gmaatype.Tpo $(DEPDIR)/libMADPPlanning_la-gmaatype.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='gmaatype.cpp' object='libMADPPlanning_la-gmaatype.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-gmaatype.lo `test -f 'gmaatype.cpp' || echo '$(srcdir)/'`gmaatype.cpp

libMADPPlanning_la-JESPtype.lo: JESPtype.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-JESPtype.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-JESPtype.Tpo -c -o libMADPPlanning_la-JESPtype.lo `test -f 'JESPtype.cpp' || echo '$(srcdir)/'`JESPtype.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-JESPtype.Tpo $(DEPDIR)/libMADPPlanning_la-JESPtype.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='JESPtype.cpp' object='libMADPPlanning_la-JESPtype.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-JESPtype.lo `test -f 'JESPtype.cpp' || echo '$(srcdir)/'`JESPtype.cpp

libMADPPlanning_la-BGIP_SolverType.lo: BGIP_SolverType.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BGIP_SolverType.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BGIP_SolverType.Tpo -c -o libMADPPlanning_la-BGIP_SolverType.lo `test -f 'BGIP_SolverType.cpp' || echo '$(srcdir)/'`BGIP_SolverType.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-BGIP_SolverType.Tpo $(DEPDIR)/libMADPPlanning_la-BGIP_SolverType.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BGIP_SolverType.cpp' object='libMADPPlanning_la-BGIP_SolverType.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BGIP_SolverType.lo `test -f 'BGIP_SolverType.cpp' || echo '$(srcdir)/'`BGIP_SolverType.cpp

libMADPPlanning_la-BayesianGameBase.lo: BayesianGameBase.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BayesianGameBase.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BayesianGameBase.Tpo -c -o libMADPPlanning_la-BayesianGameBase.lo `test -f 'BayesianGameBase.cpp' || echo '$(srcdir)/'`BayesianGameBase.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-BayesianGameBase.Tpo $(DEPDIR)/libMADPPlanning_la-BayesianGameBase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BayesianGameBase.cpp' object='libMADPPlanning_la-BayesianGameBase.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BayesianGameBase.lo `test -f 'BayesianGameBase.cpp' || echo '$(srcdir)/'`BayesianGameBase.cpp

libMADPPlanning_la-BayesianGame.lo: BayesianGame.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BayesianGame.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BayesianGame.Tpo -c -o libMADPPlanning_la-BayesianGame.lo `test -f 'BayesianGame.cpp' || echo '$(srcdir)/'`BayesianGame.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-BayesianGame.Tpo $(DEPDIR)/libMADPPlanning_la-BayesianGame.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BayesianGame.cpp' object='libMADPPlanning_la-BayesianGame.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BayesianGame.lo `test -f 'BayesianGame.cpp' || echo '$(srcdir)/'`BayesianGame.cpp

libMADPPlanning_la-BayesianGameIdenticalPayoff.lo: BayesianGameIdenticalPayoff.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BayesianGameIdenticalPayoff.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BayesianGameIdenticalPayoff.Tpo -c -o libMADPPlanning_la-BayesianGameIdenticalPayoff.lo `test -f 'BayesianGameIdenticalPayoff.cpp' || echo '$(srcdir)/'`BayesianGameIdenticalPayoff.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-BayesianGameIdenticalPayoff.Tpo $(DEPDIR)/libMADPPlanning_la-BayesianGameIdenticalPayoff.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BayesianGameIdenticalPayoff.cpp' object='libMADPPlanning_la-BayesianGameIdenticalPayoff.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BayesianGameIdenticalPayoff.lo `test -f 'BayesianGameIdenticalPayoff.cpp' || echo '$(srcdir)/'`BayesianGameIdenticalPayoff.cpp

libMADPPlanning_la-BayesianGameCollaborativeGraphical.lo: BayesianGameCollaborativeGraphical.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BayesianGameCollaborativeGraphical.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BayesianGameCollaborativeGraphical.Tpo -c -o libMADPPlanning_la-BayesianGameCollaborativeGraphical.lo `test -f 'BayesianGameCollaborativeGraphical.cpp' || echo '$(srcdir)/'`BayesianGameCollaborativeGraphical.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-BayesianGameCollaborativeGraphical.Tpo $(DEPDIR)/libMADPPlanning_la-BayesianGameCollaborativeGraphical.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BayesianGameCollaborativeGraphical.cpp' object='libMADPPlanning_la-BayesianGameCollaborativeGraphical.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BayesianGameCollaborativeGraphical.lo `test -f 'BayesianGameCollaborativeGraphical.cpp' || echo '$(srcdir)/'`BayesianGameCollaborativeGraphical.cpp

libMADPPlanning_la-BayesianGameForDecPOMDPStage.lo: BayesianGameForDecPOMDPStage.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BayesianGameForDecPOMDPStage.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BayesianGameForDecPOMDPStage.Tpo -c -o libMADPPlanning_la-BayesianGameForDecPOMDPStage.lo `test -f 'BayesianGameForDecPOMDPStage.cpp' || echo '$(srcdir)/'`BayesianGameForDecPOMDPStage.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-BayesianGameForDecPOMDPStage.Tpo $(DEPDIR)/libMADPPlanning_la-BayesianGameForDecPOMDPStage.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BayesianGameForDecPOMDPStage.cpp' object='libMADPPlanning_la-BayesianGameForDecPOMDPStage.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BayesianGameForDecPOMDPStage.lo `test -f 'BayesianGameForDecPOMDPStage.cpp' || echo '$(srcdir)/'`BayesianGameForDecPOMDPStage.cpp

libMADPPlanning_la-BGforStageCreation.lo: BGforStageCreation.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BGforStageCreation.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BGforStageCreation.Tpo -c -o libMADPPlanning_la-BGforStageCreation.lo `test -f 'BGforStageCreation.cpp' || echo '$(srcdir)/'`BGforStageCreation.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-BGforStageCreation.Tpo $(DEPDIR)/libMADPPlanning_la-BGforStageCreation.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BGforStageCreation.cpp' object='libMADPPlanning_la-BGforStageCreation.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BGforStageCreation.lo `test -f 'BGforStageCreation.cpp' || echo '$(srcdir)/'`BGforStageCreation.cpp

libMADPPlanning_la-BayesianGameForDecPOMDPStageInterface.lo: BayesianGameForDecPOMDPStageInterface.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BayesianGameForDecPOMDPStageInterface.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BayesianGameForDecPOMDPStageInterface.Tpo -c -o libMADPPlanning_la-BayesianGameForDecPOMDPStageInterface.lo `test -f 'BayesianGameForDecPOMDPStageInterface.cpp' || echo '$(srcdir)/'`BayesianGameForDecPOMDPStageInterface.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-BayesianGameForDecPOMDPStageInterface.Tpo $(DEPDIR)/libMADPPlanning_la-BayesianGameForDecPOMDPStageInterface.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BayesianGameForDecPOMDPStageInterface.cpp' object='libMADPPlanning_la-BayesianGameForDecPOMDPStageInterface.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BayesianGameForDecPOMDPStageInterface.lo `test -f 'BayesianGameForDecPOMDPStageInterface.cpp' || echo '$(srcdir)/'`BayesianGameForDecPOMDPStageInterface.cpp

libMADPPlanning_la-BayesianGameWithClusterInfo.lo: BayesianGameWithClusterInfo.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BayesianGameWithClusterInfo.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BayesianGameWithClusterInfo.Tpo -c -o libMADPPlanning_la-BayesianGameWithClusterInfo.lo `test -f 'BayesianGameWithClusterInfo.cpp' || echo '$(srcdir)/'`BayesianGameWithClusterInfo.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-BayesianGameWithClusterInfo.Tpo $(DEPDIR)/libMADPPlanning_la-BayesianGameWithClusterInfo.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BayesianGameWithClusterInfo.cpp' object='libMADPPlanning_la-BayesianGameWithClusterInfo.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BayesianGameWithClusterInfo.lo `test -f 'BayesianGameWithClusterInfo.cpp' || echo '$(srcdir)/'`BayesianGameWithClusterInfo.cpp

libMADPPlanning_la-JointPolicyPureVectorForClusteredBG.lo: JointPolicyPureVectorForClusteredBG.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-JointPolicyPureVectorForClusteredBG.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-JointPolicyPureVectorForClusteredBG.Tpo -c -o libMADPPlanning_la-JointPolicyPureVectorForClusteredBG.lo `test -f 'JointPolicyPureVectorForClusteredBG.cpp' || echo '$(srcdir)/'`JointPolicyPureVectorForClusteredBG.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-JointPolicyPureVectorForClusteredBG.Tpo $(DEPDIR)/libMADPPlanning_la-JointPolicyPureVectorForClusteredBG.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='JointPolicyPureVectorForClusteredBG.cpp' object='libMADPPlanning_la-JointPolicyPureVectorForClusteredBG.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-JointPolicyPureVectorForClusteredBG.lo `test -f 'JointPolicyPureVectorForClusteredBG.cpp' || echo '$(srcdir)/'`JointPolicyPureVectorForClusteredBG.cpp

libMADPPlanning_la-TypeCluster.lo: TypeCluster.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-TypeCluster.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-TypeCluster.Tpo -c -o libMADPPlanning_la-TypeCluster.lo `test -f 'TypeCluster.cpp' || echo '$(srcdir)/'`TypeCluster.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-TypeCluster.Tpo $(DEPDIR)/libMADPPlanning_la-TypeCluster.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='TypeCluster.cpp' object='libMADPPlanning_la-TypeCluster.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-TypeCluster.lo `test -f 'TypeCluster.cpp' || echo '$(srcdir)/'`TypeCluster.cpp

libMADPPlanning_la-Type.lo: Type.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-Type.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-Type.Tpo -c -o libMADPPlanning_la-Type.lo `test -f 'Type.cpp' || echo '$(srcdir)/'`Type.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-Type.Tpo $(DEPDIR)/libMADPPlanning_la-Type.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Type.cpp' object='libMADPPlanning_la-Type.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-Type.lo `test -f 'Type.cpp' || echo '$(srcdir)/'`Type.cpp

libMADPPlanning_la-Type_PointerTuple.lo: Type_PointerTuple.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-Type_PointerTuple.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-Type_PointerTuple.Tpo -c -o libMADPPlanning_la-Type_PointerTuple.lo `test -f 'Type_PointerTuple.cpp' || echo '$(srcdir)/'`Type_PointerTuple.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-Type_PointerTuple.Tpo $(DEPDIR)/libMADPPlanning_la-Type_PointerTuple.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Type_PointerTuple.cpp' object='libMADPPlanning_la-Type_PointerTuple.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-Type_PointerTuple.lo `test -f 'Type_PointerTuple.cpp' || echo '$(srcdir)/'`Type_PointerTuple.cpp

libMADPPlanning_la-Type_AOHIndex.lo: Type_AOHIndex.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-Type_AOHIndex.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-Type_AOHIndex.Tpo -c -o libMADPPlanning_la-Type_AOHIndex.lo `test -f 'Type_AOHIndex.cpp' || echo '$(srcdir)/'`Type_AOHIndex.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-Type_AOHIndex.Tpo $(DEPDIR)/libMADPPlanning_la-Type_AOHIndex.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Type_AOHIndex.cpp' object='libMADPPlanning_la-Type_AOHIndex.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-Type_AOHIndex.lo `test -f 'Type_AOHIndex.cpp' || echo '$(srcdir)/'`Type_AOHIndex.cpp

libMADPPlanning_la-LocalBGValueFunctionVector.lo: LocalBGValueFunctionVector.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-LocalBGValueFunctionVector.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-LocalBGValueFunctionVector.Tpo -c -o libMADPPlanning_la-LocalBGValueFunctionVector.lo `test -f 'LocalBGValueFunctionVector.cpp' || echo '$(srcdir)/'`LocalBGValueFunctionVector.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-LocalBGValueFunctionVector.Tpo $(DEPDIR)/libMADPPlanning_la-LocalBGValueFunctionVector.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='LocalBGValueFunctionVector.cpp' object='libMADPPlanning_la-LocalBGValueFunctionVector.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-LocalBGValueFunctionVector.lo `test -f 'LocalBGValueFunctionVector.cpp' || echo '$(srcdir)/'`LocalBGValueFunctionVector.cpp

libMADPPlanning_la-LocalBGValueFunctionInterface.lo: LocalBGValueFunctionInterface.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-LocalBGValueFunctionInterface.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-LocalBGValueFunctionInterface.Tpo -c -o libMADPPlanning_la-LocalBGValueFunctionInterface.lo `test -f 'LocalBGValueFunctionInterface.cpp' || echo '$(srcdir)/'`LocalBGValueFunctionInterface.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-LocalBGValueFunctionInterface.Tpo $(DEPDIR)/libMADPPlanning_la-LocalBGValueFunctionInterface.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='LocalBGValueFunctionInterface.cpp' object='libMADPPlanning_la-LocalBGValueFunctionInterface.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-LocalBGValueFunctionInterface.lo `test -f 'LocalBGValueFunctionInterface.cpp' || echo '$(srcdir)/'`LocalBGValueFunctionInterface.cpp

libMADPPlanning_la-LocalBGValueFunctionBGCGWrapper.lo: LocalBGValueFunctionBGCGWrapper.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-LocalBGValueFunctionBGCGWrapper.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-LocalBGValueFunctionBGCGWrapper.Tpo -c -o libMADPPlanning_la-LocalBGValueFunctionBGCGWrapper.lo `test -f 'LocalBGValueFunctionBGCGWrapper.cpp' || echo '$(srcdir)/'`LocalBGValueFunctionBGCGWrapper.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-LocalBGValueFunctionBGCGWrapper.Tpo $(DEPDIR)/libMADPPlanning_la-LocalBGValueFunctionBGCGWrapper.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='LocalBGValueFunctionBGCGWrapper.cpp' object='libMADPPlanning_la-LocalBGValueFunctionBGCGWrapper.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-LocalBGValueFunctionBGCGWrapper.lo `test -f 'LocalBGValueFunctionBGCGWrapper.cpp' || echo '$(srcdir)/'`LocalBGValueFunctionBGCGWrapper.cpp

libMADPPlanning_la-BGIPSolution.lo: BGIPSolution.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BGIPSolution.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BGIPSolution.Tpo -c -o libMADPPlanning_la-BGIPSolution.lo `test -f 'BGIPSolution.cpp' || echo '$(srcdir)/'`BGIPSolution.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-BGIPSolution.Tpo $(DEPDIR)/libMADPPlanning_la-BGIPSolution.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BGIPSolution.cpp' object='libMADPPlanning_la-BGIPSolution.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BGIPSolution.lo `test -f 'BGIPSolution.cpp' || echo '$(srcdir)/'`BGIPSolution.cpp

libMADPPlanning_la-ValueFunctionDecPOMDPDiscrete.lo: ValueFunctionDecPOMDPDiscrete.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-ValueFunctionDecPOMDPDiscrete.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-ValueFunctionDecPOMDPDiscrete.Tpo -c -o libMADPPlanning_la-ValueFunctionDecPOMDPDiscrete.lo `test -f 'ValueFunctionDecPOMDPDiscrete.cpp' || echo '$(srcdir)/'`ValueFunctionDecPOMDPDiscrete.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-ValueFunctionDecPOMDPDiscrete.Tpo $(DEPDIR)/libMADPPlanning_la-ValueFunctionDecPOMDPDiscrete.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ValueFunctionDecPOMDPDiscrete.cpp' object='libMADPPlanning_la-ValueFunctionDecPOMDPDiscrete.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-ValueFunctionDecPOMDPDiscrete.lo `test -f 'ValueFunctionDecPOMDPDiscrete.cpp' || echo '$(srcdir)/'`ValueFunctionDecPOMDPDiscrete.cpp

libMADPPlanning_la-FactoredQLastTimeStepOrElse.lo: FactoredQLastTimeStepOrElse.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-FactoredQLastTimeStepOrElse.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-FactoredQLastTimeStepOrElse.Tpo -c -o libMADPPlanning_la-FactoredQLastTimeStepOrElse.lo `test -f 'FactoredQLastTimeStepOrElse.cpp' || echo '$(srcdir)/'`FactoredQLastTimeStepOrElse.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-FactoredQLastTimeStepOrElse.Tpo $(DEPDIR)/libMADPPlanning_la-FactoredQLastTimeStepOrElse.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FactoredQLastTimeStepOrElse.cpp' object='libMADPPlanning_la-FactoredQLastTimeStepOrElse.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-FactoredQLastTimeStepOrElse.lo `test -f 'FactoredQLastTimeStepOrElse.cpp' || echo '$(srcdir)/'`FactoredQLastTimeStepOrElse.cpp

libMADPPlanning_la-FactoredQLastTimeStepOrQMDP.lo: FactoredQLastTimeStepOrQMDP.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-FactoredQLastTimeStepOrQMDP.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-FactoredQLastTimeStepOrQMDP.Tpo -c -o libMADPPlanning_la-FactoredQLastTimeStepOrQMDP.lo `test -f 'FactoredQLastTimeStepOrQMDP.cpp' || echo '$(srcdir)/'`FactoredQLastTimeStepOrQMDP.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-FactoredQLastTimeStepOrQMDP.Tpo $(DEPDIR)/libMADPPlanning_la-FactoredQLastTimeStepOrQMDP.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FactoredQLastTimeStepOrQMDP.cpp' object='libMADPPlanning_la-FactoredQLastTimeStepOrQMDP.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-FactoredQLastTimeStepOrQMDP.lo `test -f 'FactoredQLastTimeStepOrQMDP.cpp' || echo '$(srcdir)/'`FactoredQLastTimeStepOrQMDP.cpp

libMADPPlanning_la-FactoredQLastTimeStepOrQPOMDP.lo: FactoredQLastTimeStepOrQPOMDP.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-FactoredQLastTimeStepOrQPOMDP.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-FactoredQLastTimeStepOrQPOMDP.Tpo -c -o libMADPPlanning_la-FactoredQLastTimeStepOrQPOMDP.lo `test -f 'FactoredQLastTimeStepOrQPOMDP.cpp' || echo '$(srcdir)/'`FactoredQLastTimeStepOrQPOMDP.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-FactoredQLastTimeStepOrQPOMDP.Tpo $(DEPDIR)/libMADPPlanning_la-FactoredQLastTimeStepOrQPOMDP.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FactoredQLastTimeStepOrQPOMDP.cpp' object='libMADPPlanning_la-FactoredQLastTimeStepOrQPOMDP.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-FactoredQLastTimeStepOrQPOMDP.lo `test -f 'FactoredQLastTimeStepOrQPOMDP.cpp' || echo '$(srcdir)/'`FactoredQLastTimeStepOrQPOMDP.cpp

libMADPPlanning_la-FactoredQLastTimeStepOrQBG.lo: FactoredQLastTimeStepOrQBG.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-FactoredQLastTimeStepOrQBG.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-FactoredQLastTimeStepOrQBG.Tpo -c -o libMADPPlanning_la-FactoredQLastTimeStepOrQBG.lo `test -f 'FactoredQLastTimeStepOrQBG.cpp' || echo '$(srcdir)/'`FactoredQLastTimeStepOrQBG.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-FactoredQLastTimeStepOrQBG.Tpo $(DEPDIR)/libMADPPlanning_la-FactoredQLastTimeStepOrQBG.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FactoredQLastTimeStepOrQBG.cpp' object='libMADPPlanning_la-FactoredQLastTimeStepOrQBG.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-FactoredQLastTimeStepOrQBG.lo `test -f 'FactoredQLastTimeStepOrQBG.cpp' || echo '$(srcdir)/'`FactoredQLastTimeStepOrQBG.cpp

libMADPPlanning_la-OptimalValueDatabase.lo: OptimalValueDatabase.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-OptimalValueDatabase.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-OptimalValueDatabase.Tpo -c -o libMADPPlanning_la-OptimalValueDatabase.lo `test -f 'OptimalValueDatabase.cpp' || echo '$(srcdir)/'`OptimalValueDatabase.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-OptimalValueDatabase.Tpo $(DEPDIR)/libMADPPlanning_la-OptimalValueDatabase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='OptimalValueDatabase.cpp' object='libMADPPlanning_la-OptimalValueDatabase.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-OptimalValueDatabase.lo `test -f 'OptimalValueDatabase.cpp' || echo '$(srcdir)/'`OptimalValueDatabase.cpp

libMADPPlanning_la-argumentHandlers.lo: argumentHandlers.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-argumentHandlers.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-argumentHandlers.Tpo -c -o libMADPPlanning_la-argumentHandlers.lo `test -f 'argumentHandlers.cpp' || echo '$(srcdir)/'`argumentHandlers.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-argumentHandlers.Tpo $(DEPDIR)/libMADPPlanning_la-argumentHandlers.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='argumentHandlers.cpp' object='libMADPPlanning_la-argumentHandlers.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-argumentHandlers.lo `test -f 'argumentHandlers.cpp' || echo '$(srcdir)/'`argumentHandlers.cpp

libMADPPlanning_la-argumentUtils.lo: argumentUtils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-argumentUtils.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-argumentUtils.Tpo -c -o libMADPPlanning_la-argumentUtils.lo `test -f 'argumentUtils.cpp' || echo '$(srcdir)/'`argumentUtils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-argumentUtils.Tpo $(DEPDIR)/libMADPPlanning_la-argumentUtils.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='argumentUtils.cpp' object='libMADPPlanning_la-argumentUtils.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-argumentUtils.lo `test -f 'argumentUtils.cpp' || echo '$(srcdir)/'`argumentUtils.cpp

libMADPPlanning_la-directories.lo: directories.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-directories.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-directories.Tpo -c -o libMADPPlanning_la-directories.lo `test -f 'directories.cpp' || echo '$(srcdir)/'`directories.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-directories.Tpo $(DEPDIR)/libMADPPlanning_la-directories.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='directories.cpp' object='libMADPPlanning_la-directories.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-directories.lo `test -f 'directories.cpp' || echo '$(srcdir)/'`directories.cpp

libMADPPlanning_la-Problem_CGBG_FF.lo: Problem_CGBG_FF.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-Problem_CGBG_FF.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-Problem_CGBG_FF.Tpo -c -o libMADPPlanning_la-Problem_CGBG_FF.lo `test -f 'Problem_CGBG_FF.cpp' || echo '$(srcdir)/'`Problem_CGBG_FF.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-Problem_CGBG_FF.Tpo $(DEPDIR)/libMADPPlanning_la-Problem_CGBG_FF.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Problem_CGBG_FF.cpp' object='libMADPPlanning_la-Problem_CGBG_FF.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-Problem_CGBG_FF.lo `test -f 'Problem_CGBG_FF.cpp' || echo '$(srcdir)/'`Problem_CGBG_FF.cpp

libMADPPlanning_la-MDPPolicyIterationGPU.lo: MDPPolicyIterationGPU.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-MDPPolicyIterationGPU.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-MDPPolicyIterationGPU.Tpo -c -o libMADPPlanning_la-MDPPolicyIterationGPU.lo `test -f 'MDPPolicyIterationGPU.cpp' || echo '$(srcdir)/'`MDPPolicyIterationGPU.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-MDPPolicyIterationGPU.Tpo $(DEPDIR)/libMADPPlanning_la-MDPPolicyIterationGPU.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='MDPPolicyIterationGPU.cpp' object='libMADPPlanning_la-MDPPolicyIterationGPU.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-MDPPolicyIterationGPU.lo `test -f 'MDPPolicyIterationGPU.cpp' || echo '$(srcdir)/'`MDPPolicyIterationGPU.cpp

libMADPPlanning_la-SystemOfLinearEquationsSolver.lo: SystemOfLinearEquationsSolver.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-SystemOfLinearEquationsSolver.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-SystemOfLinearEquationsSolver.Tpo -c -o libMADPPlanning_la-SystemOfLinearEquationsSolver.lo `test -f 'SystemOfLinearEquationsSolver.cpp' || echo '$(srcdir)/'`SystemOfLinearEquationsSolver.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-SystemOfLinearEquationsSolver.Tpo $(DEPDIR)/libMADPPlanning_la-SystemOfLinearEquationsSolver.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SystemOfLinearEquationsSolver.cpp' object='libMADPPlanning_la-SystemOfLinearEquationsSolver.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-SystemOfLinearEquationsSolver.lo `test -f 'SystemOfLinearEquationsSolver.cpp' || echo '$(srcdir)/'`SystemOfLinearEquationsSolver.cpp

libMADPPlanning_la-SimulationResult.lo: SimulationResult.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-SimulationResult.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-SimulationResult.Tpo -c -o libMADPPlanning_la-SimulationResult.lo `test -f 'SimulationResult.cpp' || echo '$(srcdir)/'`SimulationResult.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-SimulationResult.Tpo $(DEPDIR)/libMADPPlanning_la-SimulationResult.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SimulationResult.cpp' object='libMADPPlanning_la-SimulationResult.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-SimulationResult.lo `test -f 'SimulationResult.cpp' || echo '$(srcdir)/'`SimulationResult.cpp

libMADPPlanning_la-SimulationDecPOMDPDiscrete.lo: SimulationDecPOMDPDiscrete.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-SimulationDecPOMDPDiscrete.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-SimulationDecPOMDPDiscrete.Tpo -c -o libMADPPlanning_la-SimulationDecPOMDPDiscrete.lo `test -f 'SimulationDecPOMDPDiscrete.cpp' || echo '$(srcdir)/'`SimulationDecPOMDPDiscrete.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-SimulationDecPOMDPDiscrete.Tpo $(DEPDIR)/libMADPPlanning_la-SimulationDecPOMDPDiscrete.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SimulationDecPOMDPDiscrete.cpp' object='libMADPPlanning_la-SimulationDecPOMDPDiscrete.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-SimulationDecPOMDPDiscrete.lo `test -f 'SimulationDecPOMDPDiscrete.cpp' || echo '$(srcdir)/'`SimulationDecPOMDPDiscrete.cpp

libMADPPlanning_la-SimulationTOIDecPOMDPDiscrete.lo: SimulationTOIDecPOMDPDiscrete.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-SimulationTOIDecPOMDPDiscrete.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-SimulationTOIDecPOMDPDiscrete.Tpo -c -o libMADPPlanning_la-SimulationTOIDecPOMDPDiscrete.lo `test -f 'SimulationTOIDecPOMDPDiscrete.cpp' || echo '$(srcdir)/'`SimulationTOIDecPOMDPDiscrete.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-SimulationTOIDecPOMDPDiscrete.Tpo $(DEPDIR)/libMADPPlanning_la-SimulationTOIDecPOMDPDiscrete.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SimulationTOIDecPOMDPDiscrete.cpp' object='libMADPPlanning_la-SimulationTOIDecPOMDPDiscrete.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-SimulationTOIDecPOMDPDiscrete.lo `test -f 'SimulationTOIDecPOMDPDiscrete.cpp' || echo '$(srcdir)/'`SimulationTOIDecPOMDPDiscrete.cpp

libMADPPlanning_la-SimulationFactoredDecPOMDPDiscrete.lo: SimulationFactoredDecPOMDPDiscrete.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-SimulationFactoredDecPOMDPDiscrete.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-SimulationFactoredDecPOMDPDiscrete.Tpo -c -o libMADPPlanning_la-SimulationFactoredDecPOMDPDiscrete.lo `test -f 'SimulationFactoredDecPOMDPDiscrete.cpp' || echo '$(srcdir)/'`SimulationFactoredDecPOMDPDiscrete.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-SimulationFactoredDecPOMDPDiscrete.Tpo $(DEPDIR)/libMADPPlanning_la-SimulationFactoredDecPOMDPDiscrete.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SimulationFactoredDecPOMDPDiscrete.cpp' object='libMADPPlanning_la-SimulationFactoredDecPOMDPDiscrete.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-SimulationFactoredDecPOMDPDiscrete.lo `test -f 'SimulationFactoredDecPOMDPDiscrete.cpp' || echo '$(srcdir)/'`SimulationFactoredDecPOMDPDiscrete.cpp

libMADPPlanning_la-AgentPOMDP.lo: AgentPOMDP.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-AgentPOMDP.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-AgentPOMDP.Tpo -c -o libMADPPlanning_la-AgentPOMDP.lo `test -f 'AgentPOMDP.cpp' || echo '$(srcdir)/'`AgentPOMDP.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-AgentPOMDP.Tpo $(DEPDIR)/libMADPPlanning_la-AgentPOMDP.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='AgentPOMDP.cpp' object='libMADPPlanning_la-AgentPOMDP.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-AgentPOMDP.lo `test -f 'AgentPOMDP.cpp' || echo '$(srcdir)/'`AgentPOMDP.cpp

libMADPPlanning_la-AgentBG.lo: AgentBG.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-AgentBG.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-AgentBG.Tpo -c -o libMADPPlanning_la-AgentBG.lo `test -f 'AgentBG.cpp' || echo '$(srcdir)/'`AgentBG.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-AgentBG.Tpo $(DEPDIR)/libMADPPlanning_la-AgentBG.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='AgentBG.cpp' object='libMADPPlanning_la-AgentBG.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-AgentBG.lo `test -f 'AgentBG.cpp' || echo '$(srcdir)/'`AgentBG.cpp

libMADPPlanning_la-AgentQMDP.lo: AgentQMDP.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-AgentQMDP.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-AgentQMDP.Tpo -c -o libMADPPlanning_la-AgentQMDP.lo `test -f 'AgentQMDP.cpp' || echo '$(srcdir)/'`AgentQMDP.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-AgentQMDP.Tpo $(DEPDIR)/libMADPPlanning_la-AgentQMDP.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='AgentQMDP.cpp' object='libMADPPlanning_la-AgentQMDP.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-AgentQMDP.lo `test -f 'AgentQMDP.cpp' || echo '$(srcdir)/'`AgentQMDP.cpp

libMADPPlanning_la-AgentRandom.lo: AgentRandom.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-AgentRandom.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-AgentRandom.Tpo -c -o libMADPPlanning_la-AgentRandom.lo `test -f 'AgentRandom.cpp' || echo '$(srcdir)/'`AgentRandom.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-AgentRandom.Tpo $(DEPDIR)/libMADPPlanning_la-AgentRandom.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='AgentRandom.cpp' object='libMADPPlanning_la-AgentRandom.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-AgentRandom.lo `test -f 'AgentRandom.cpp' || echo '$(srcdir)/'`AgentRandom.cpp

libMADPPlanning_la-AgentMDP.lo: AgentMDP.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-AgentMDP.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-AgentMDP.Tpo -c -o libMADPPlanning_la-AgentMDP.lo `test -f 'AgentMDP.cpp' || echo '$(srcdir)/'`AgentMDP.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-AgentMDP.Tpo $(DEPDIR)/libMADPPlanning_la-AgentMDP.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='AgentMDP.cpp' object='libMADPPlanning_la-AgentMDP.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-AgentMDP.lo `test -f 'AgentMDP.cpp' || echo '$(srcdir)/'`AgentMDP.cpp

libMADPPlanning_la-AgentOnlinePlanningMDP.lo: AgentOnlinePlanningMDP.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-AgentOnlinePlanningMDP.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-AgentOnlinePlanningMDP.Tpo -c -o libMADPPlanning_la-AgentOnlinePlanningMDP.lo `test -f 'AgentOnlinePlanningMDP.cpp' || echo '$(srcdir)/'`AgentOnlinePlanningMDP.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-AgentOnlinePlanningMDP.Tpo $(DEPDIR)/libMADPPlanning_la-AgentOnlinePlanningMDP.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='AgentOnlinePlanningMDP.cpp' object='libMADPPlanning_la-AgentOnlinePlanningMDP.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-AgentOnlinePlanningMDP.lo `test -f 'AgentOnlinePlanningMDP.cpp' || echo '$(srcdir)/'`AgentOnlinePlanningMDP.cpp

libMADPPlanning_la-AgentQLearner.lo: AgentQLearner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-AgentQLearner.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-AgentQLearner.Tpo -c -o libMADPPlanning_la-AgentQLearner.lo `test -f 'AgentQLearner.cpp' || echo '$(srcdir)/'`AgentQLearner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-AgentQLearner.Tpo $(DEPDIR)/libMADPPlanning_la-AgentQLearner.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='AgentQLearner.cpp' object='libMADPPlanning_la-AgentQLearner.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-AgentQLearner.lo `test -f 'AgentQLearner.cpp' || echo '$(srcdir)/'`AgentQLearner.cpp

libMADPPlanning_la-BeliefValue.lo: BeliefValue.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BeliefValue.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BeliefValue.Tpo -c -o libMADPPlanning_la-BeliefValue.lo `test -f 'BeliefValue.cpp' || echo '$(srcdir)/'`BeliefValue.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-BeliefValue.Tpo $(DEPDIR)/libMADPPlanning_la-BeliefValue.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BeliefValue.cpp' object='libMADPPlanning_la-BeliefValue.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BeliefValue.lo `test -f 'BeliefValue.cpp' || echo '$(srcdir)/'`BeliefValue.cpp

libMADPPlanning_la-BeliefSetNonStationary.lo: BeliefSetNonStationary.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BeliefSetNonStationary.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BeliefSetNonStationary.Tpo -c -o libMADPPlanning_la-BeliefSetNonStationary.lo `test -f 'BeliefSetNonStationary.cpp' || echo '$(srcdir)/'`BeliefSetNonStationary.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-BeliefSetNonStationary.Tpo $(DEPDIR)/libMADPPlanning_la-BeliefSetNonStationary.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BeliefSetNonStationary.cpp' object='libMADPPlanning_la-BeliefSetNonStationary.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BeliefSetNonStationary.lo `test -f 'BeliefSetNonStationary.cpp' || echo '$(srcdir)/'`BeliefSetNonStationary.cpp

libMADPPlanning_la-AlphaVector.lo: AlphaVector.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-AlphaVector.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-AlphaVector.Tpo -c -o libMADPPlanning_la-AlphaVector.lo `test -f 'AlphaVector.cpp' || echo '$(srcdir)/'`AlphaVector.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-AlphaVector.Tpo $(DEPDIR)/libMADPPlanning_la-AlphaVector.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='AlphaVector.cpp' object='libMADPPlanning_la-AlphaVector.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-AlphaVector.lo `test -f 'AlphaVector.cpp' || echo '$(srcdir)/'`AlphaVector.cpp

libMADPPlanning_la-AlphaVectorPlanning.lo: AlphaVectorPlanning.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-AlphaVectorPlanning.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-AlphaVectorPlanning.Tpo -c -o libMADPPlanning_la-AlphaVectorPlanning.lo `test -f 'AlphaVectorPlanning.cpp' || echo '$(srcdir)/'`AlphaVectorPlanning.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-AlphaVectorPlanning.Tpo $(DEPDIR)/libMADPPlanning_la-AlphaVectorPlanning.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='AlphaVectorPlanning.cpp' object='libMADPPlanning_la-AlphaVectorPlanning.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-AlphaVectorPlanning.lo `test -f 'AlphaVectorPlanning.cpp' || echo '$(srcdir)/'`AlphaVectorPlanning.cpp

libMADPPlanning_la-AlphaVectorPruning.lo: AlphaVectorPruning.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-AlphaVectorPruning.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-AlphaVectorPruning.Tpo -c -o libMADPPlanning_la-AlphaVectorPruning.lo `test -f 'AlphaVectorPruning.cpp' || echo '$(srcdir)/'`AlphaVectorPruning.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-AlphaVectorPruning.Tpo $(DEPDIR)/libMADPPlanning_la-AlphaVectorPruning.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='AlphaVectorPruning.cpp' object='libMADPPlanning_la-AlphaVectorPruning.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-AlphaVectorPruning.lo `test -f 'AlphaVectorPruning.cpp' || echo '$(srcdir)/'`AlphaVectorPruning.cpp

libMADPPlanning_la-Perseus.lo: Perseus.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-Perseus.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-Perseus.Tpo -c -o libMADPPlanning_la-Perseus.lo `test -f 'Perseus.cpp' || echo '$(srcdir)/'`Perseus.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-Perseus.Tpo $(DEPDIR)/libMADPPlanning_la-Perseus.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Perseus.cpp' object='libMADPPlanning_la-Perseus.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-Perseus.lo `test -f 'Perseus.cpp' || echo '$(srcdir)/'`Perseus.cpp

libMADPPlanning_la-AlphaVectorPOMDP.lo: AlphaVectorPOMDP.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-AlphaVectorPOMDP.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-AlphaVectorPOMDP.Tpo -c -o libMADPPlanning_la-AlphaVectorPOMDP.lo `test -f 'AlphaVectorPOMDP.cpp' || echo '$(srcdir)/'`AlphaVectorPOMDP.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-AlphaVectorPOMDP.Tpo $(DEPDIR)/libMADPPlanning_la-AlphaVectorPOMDP.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='AlphaVectorPOMDP.cpp' object='libMADPPlanning_la-AlphaVectorPOMDP.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-AlphaVectorPOMDP.lo `test -f 'AlphaVectorPOMDP.cpp' || echo '$(srcdir)/'`AlphaVectorPOMDP.cpp

libMADPPlanning_la-AlphaVectorConstrainedPOMDP.lo: AlphaVectorConstrainedPOMDP.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-AlphaVectorConstrainedPOMDP.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-AlphaVectorConstrainedPOMDP.Tpo -c -o libMADPPlanning_la-AlphaVectorConstrainedPOMDP.lo `test -f 'AlphaVectorConstrainedPOMDP.cpp' || echo '$(srcdir)/'`AlphaVectorConstrainedPOMDP.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-AlphaVectorConstrainedPOMDP.Tpo $(DEPDIR)/libMADPPlanning_la-AlphaVectorConstrainedPOMDP.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='AlphaVectorConstrainedPOMDP.cpp' object='libMADPPlanning_la-AlphaVectorConstrainedPOMDP.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-AlphaVectorConstrainedPOMDP.lo `test -f 'AlphaVectorConstrainedPOMDP.cpp' || echo '$(srcdir)/'`AlphaVectorConstrainedPOMDP.cpp

libMADPPlanning_la-PerseusPOMDPPlanner.lo: PerseusPOMDPPlanner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-PerseusPOMDPPlanner.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-PerseusPOMDPPlanner.Tpo -c -o libMADPPlanning_la-PerseusPOMDPPlanner.lo `test -f 'PerseusPOMDPPlanner.cpp' || echo '$(srcdir)/'`PerseusPOMDPPlanner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-PerseusPOMDPPlanner.Tpo $(DEPDIR)/libMADPPlanning_la-PerseusPOMDPPlanner.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='PerseusPOMDPPlanner.cpp' object='libMADPPlanning_la-PerseusPOMDPPlanner.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-PerseusPOMDPPlanner.lo `test -f 'PerseusPOMDPPlanner.cpp' || echo '$(srcdir)/'`PerseusPOMDPPlanner.cpp

libMADPPlanning_la-PerseusConstrainedPOMDPPlanner.lo: PerseusConstrainedPOMDPPlanner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-PerseusConstrainedPOMDPPlanner.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-PerseusConstrainedPOMDPPlanner.Tpo -c -o libMADPPlanning_la-PerseusConstrainedPOMDPPlanner.lo `test -f 'PerseusConstrainedPOMDPPlanner.cpp' || echo '$(srcdir)/'`PerseusConstrainedPOMDPPlanner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-PerseusConstrainedPOMDPPlanner.Tpo $(DEPDIR)/libMADPPlanning_la-PerseusConstrainedPOMDPPlanner.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='PerseusConstrainedPOMDPPlanner.cpp' object='libMADPPlanning_la-PerseusConstrainedPOMDPPlanner.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-PerseusConstrainedPOMDPPlanner.lo `test -f 'PerseusConstrainedPOMDPPlanner.cpp' || echo '$(srcdir)/'`PerseusConstrainedPOMDPPlanner.cpp

libMADPPlanning_la-MonahanPOMDPPlanner.lo: MonahanPOMDPPlanner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-MonahanPOMDPPlanner.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-MonahanPOMDPPlanner.Tpo -c -o libMADPPlanning_la-MonahanPOMDPPlanner.lo `test -f 'MonahanPOMDPPlanner.cpp' || echo '$(srcdir)/'`MonahanPOMDPPlanner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-MonahanPOMDPPlanner.Tpo $(DEPDIR)/libMADPPlanning_la-MonahanPOMDPPlanner.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='MonahanPOMDPPlanner.cpp' object='libMADPPlanning_la-MonahanPOMDPPlanner.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-MonahanPOMDPPlanner.lo `test -f 'MonahanPOMDPPlanner.cpp' || echo '$(srcdir)/'`MonahanPOMDPPlanner.cpp

libMADPPlanning_la-AlphaVectorBG.lo: AlphaVectorBG.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-AlphaVectorBG.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-AlphaVectorBG.Tpo -c -o libMADPPlanning_la-AlphaVectorBG.lo `test -f 'AlphaVectorBG.cpp' || echo '$(srcdir)/'`AlphaVectorBG.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-AlphaVectorBG.Tpo $(DEPDIR)/libMADPPlanning_la-AlphaVectorBG.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='AlphaVectorBG.cpp' object='libMADPPlanning_la-AlphaVectorBG.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-AlphaVectorBG.lo `test -f 'AlphaVectorBG.cpp' || echo '$(srcdir)/'`AlphaVectorBG.cpp

libMADPPlanning_la-MonahanBGPlanner.lo: MonahanBGPlanner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-MonahanBGPlanner.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-MonahanBGPlanner.Tpo -c -o libMADPPlanning_la-MonahanBGPlanner.lo `test -f 'MonahanBGPlanner.cpp' || echo '$(srcdir)/'`MonahanBGPlanner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-MonahanBGPlanner.Tpo $(DEPDIR)/libMADPPlanning_la-MonahanBGPlanner.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='MonahanBGPlanner.cpp' object='libMADPPlanning_la-MonahanBGPlanner.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-MonahanBGPlanner.lo `test -f 'MonahanBGPlanner.cpp' || echo '$(srcdir)/'`MonahanBGPlanner.cpp

libMADPPlanning_la-MonahanPlanner.lo: MonahanPlanner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-MonahanPlanner.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-MonahanPlanner.Tpo -c -o libMADPPlanning_la-MonahanPlanner.lo `test -f 'MonahanPlanner.cpp' || echo '$(srcdir)/'`MonahanPlanner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-MonahanPlanner.Tpo $(DEPDIR)/libMADPPlanning_la-MonahanPlanner.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='MonahanPlanner.cpp' object='libMADPPlanning_la-MonahanPlanner.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-MonahanPlanner.lo `test -f 'MonahanPlanner.cpp' || echo '$(srcdir)/'`MonahanPlanner.cpp

libMADPPlanning_la-QMonahanPOMDP.lo: QMonahanPOMDP.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-QMonahanPOMDP.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-QMonahanPOMDP.Tpo -c -o libMADPPlanning_la-QMonahanPOMDP.lo `test -f 'QMonahanPOMDP.cpp' || echo '$(srcdir)/'`QMonahanPOMDP.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-QMonahanPOMDP.Tpo $(DEPDIR)/libMADPPlanning_la-QMonahanPOMDP.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='QMonahanPOMDP.cpp' object='libMADPPlanning_la-QMonahanPOMDP.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-QMonahanPOMDP.lo `test -f 'QMonahanPOMDP.cpp' || echo '$(srcdir)/'`QMonahanPOMDP.cpp

libMADPPlanning_la-PerseusBGPlanner.lo: PerseusBGPlanner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-PerseusBGPlanner.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-PerseusBGPlanner.Tpo -c -o libMADPPlanning_la-PerseusBGPlanner.lo `test -f 'PerseusBGPlanner.cpp' || echo '$(srcdir)/'`PerseusBGPlanner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-PerseusBGPlanner.Tpo $(DEPDIR)/libMADPPlanning_la-PerseusBGPlanner.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='PerseusBGPlanner.cpp' object='libMADPPlanning_la-PerseusBGPlanner.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-PerseusBGPlanner.lo `test -f 'PerseusBGPlanner.cpp' || echo '$(srcdir)/'`PerseusBGPlanner.cpp

libMADPPlanning_la-QMonahanBG.lo: QMonahanBG.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-QMonahanBG.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-QMonahanBG.Tpo -c -o libMADPPlanning_la-QMonahanBG.lo `test -f 'QMonahanBG.cpp' || echo '$(srcdir)/'`QMonahanBG.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-QMonahanBG.Tpo $(DEPDIR)/libMADPPlanning_la-QMonahanBG.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='QMonahanBG.cpp' object='libMADPPlanning_la-QMonahanBG.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-QMonahanBG.lo `test -f 'QMonahanBG.cpp' || echo '$(srcdir)/'`QMonahanBG.cpp

libMADPPlanning_la-QAlphaVector.lo: QAlphaVector.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-QAlphaVector.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-QAlphaVector.Tpo -c -o libMADPPlanning_la-QAlphaVector.lo `test -f 'QAlphaVector.cpp' || echo '$(srcdir)/'`QAlphaVector.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-QAlphaVector.Tpo $(DEPDIR)/libMADPPlanning_la-QAlphaVector.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='QAlphaVector.cpp' object='libMADPPlanning_la-QAlphaVector.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-QAlphaVector.lo `test -f 'QAlphaVector.cpp' || echo '$(srcdir)/'`QAlphaVector.cpp

libMADPPlanning_la-TreeIncPruneBGPlanner.lo: TreeIncPruneBGPlanner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-TreeIncPruneBGPlanner.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-TreeIncPruneBGPlanner.Tpo -c -o libMADPPlanning_la-TreeIncPruneBGPlanner.lo `test -f 'TreeIncPruneBGPlanner.cpp' || echo '$(srcdir)/'`TreeIncPruneBGPlanner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-TreeIncPruneBGPlanner.Tpo $(DEPDIR)/libMADPPlanning_la-TreeIncPruneBGPlanner.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='TreeIncPruneBGPlanner.cpp' object='libMADPPlanning_la-TreeIncPruneBGPlanner.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-TreeIncPruneBGPlanner.lo `test -f 'TreeIncPruneBGPlanner.cpp' || echo '$(srcdir)/'`TreeIncPruneBGPlanner.cpp

libMADPPlanning_la-QBGPlanner_TreeIncPruneBnB.lo: QBGPlanner_TreeIncPruneBnB.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-QBGPlanner_TreeIncPruneBnB.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-QBGPlanner_TreeIncPruneBnB.Tpo -c -o libMADPPlanning_la-QBGPlanner_TreeIncPruneBnB.lo `test -f 'QBGPlanner_TreeIncPruneBnB.cpp' || echo '$(srcdir)/'`QBGPlanner_TreeIncPruneBnB.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-QBGPlanner_TreeIncPruneBnB.Tpo $(DEPDIR)/libMADPPlanning_la-QBGPlanner_TreeIncPruneBnB.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='QBGPlanner_TreeIncPruneBnB.cpp' object='libMADPPlanning_la-QBGPlanner_TreeIncPruneBnB.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-QBGPlanner_TreeIncPruneBnB.lo `test -f 'QBGPlanner_TreeIncPruneBnB.cpp' || echo '$(srcdir)/'`QBGPlanner_TreeIncPruneBnB.cpp

libMADPPlanning_la-QTreeIncPruneBG.lo: QTreeIncPruneBG.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-QTreeIncPruneBG.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-QTreeIncPruneBG.Tpo -c -o libMADPPlanning_la-QTreeIncPruneBG.lo `test -f 'QTreeIncPruneBG.cpp' || echo '$(srcdir)/'`QTreeIncPruneBG.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-QTreeIncPruneBG.Tpo $(DEPDIR)/libMADPPlanning_la-QTreeIncPruneBG.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='QTreeIncPruneBG.cpp' object='libMADPPlanning_la-QTreeIncPruneBG.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-QTreeIncPruneBG.lo `test -f 'QTreeIncPruneBG.cpp' || echo '$(srcdir)/'`QTreeIncPruneBG.cpp

libMADPPlanning_la-PerseusBGPOMDPPlanner.lo: PerseusBGPOMDPPlanner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-PerseusBGPOMDPPlanner.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-PerseusBGPOMDPPlanner.Tpo -c -o libMADPPlanning_la-PerseusBGPOMDPPlanner.lo `test -f 'PerseusBGPOMDPPlanner.cpp' || echo '$(srcdir)/'`PerseusBGPOMDPPlanner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-PerseusBGPOMDPPlanner.Tpo $(DEPDIR)/libMADPPlanning_la-PerseusBGPOMDPPlanner.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='PerseusBGPOMDPPlanner.cpp' object='libMADPPlanning_la-PerseusBGPOMDPPlanner.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-PerseusBGPOMDPPlanner.lo `test -f 'PerseusBGPOMDPPlanner.cpp' || echo '$(srcdir)/'`PerseusBGPOMDPPlanner.cpp

libMADPPlanning_la-AlphaVectorWeighted.lo: AlphaVectorWeighted.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-AlphaVectorWeighted.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-AlphaVectorWeighted.Tpo -c -o libMADPPlanning_la-AlphaVectorWeighted.lo `test -f 'AlphaVectorWeighted.cpp' || echo '$(srcdir)/'`AlphaVectorWeighted.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-AlphaVectorWeighted.Tpo $(DEPDIR)/libMADPPlanning_la-AlphaVectorWeighted.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='AlphaVectorWeighted.cpp' object='libMADPPlanning_la-AlphaVectorWeighted.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-AlphaVectorWeighted.lo `test -f 'AlphaVectorWeighted.cpp' || echo '$(srcdir)/'`AlphaVectorWeighted.cpp

libMADPPlanning_la-PerseusWeightedPlanner.lo: PerseusWeightedPlanner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-PerseusWeightedPlanner.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-PerseusWeightedPlanner.Tpo -c -o libMADPPlanning_la-PerseusWeightedPlanner.lo `test -f 'PerseusWeightedPlanner.cpp' || echo '$(srcdir)/'`PerseusWeightedPlanner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-PerseusWeightedPlanner.Tpo $(DEPDIR)/libMADPPlanning_la-PerseusWeightedPlanner.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='PerseusWeightedPlanner.cpp' object='libMADPPlanning_la-PerseusWeightedPlanner.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-PerseusWeightedPlanner.lo `test -f 'PerseusWeightedPlanner.cpp' || echo '$(srcdir)/'`PerseusWeightedPlanner.cpp

libMADPPlanning_la-PerseusQFunctionPlanner.lo: PerseusQFunctionPlanner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-PerseusQFunctionPlanner.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-PerseusQFunctionPlanner.Tpo -c -o libMADPPlanning_la-PerseusQFunctionPlanner.lo `test -f 'PerseusQFunctionPlanner.cpp' || echo '$(srcdir)/'`PerseusQFunctionPlanner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-PerseusQFunctionPlanner.Tpo $(DEPDIR)/libMADPPlanning_la-PerseusQFunctionPlanner.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='PerseusQFunctionPlanner.cpp' object='libMADPPlanning_la-PerseusQFunctionPlanner.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-PerseusQFunctionPlanner.lo `test -f 'PerseusQFunctionPlanner.cpp' || echo '$(srcdir)/'`PerseusQFunctionPlanner.cpp

libMADPPlanning_la-PerseusStationary.lo: PerseusStationary.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-PerseusStationary.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-PerseusStationary.Tpo -c -o libMADPPlanning_la-PerseusStationary.lo `test -f 'PerseusStationary.cpp' || echo '$(srcdir)/'`PerseusStationary.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-PerseusStationary.Tpo $(DEPDIR)/libMADPPlanning_la-PerseusStationary.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='PerseusStationary.cpp' object='libMADPPlanning_la-PerseusStationary.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-PerseusStationary.lo `test -f 'PerseusStationary.cpp' || echo '$(srcdir)/'`PerseusStationary.cpp

libMADPPlanning_la-PerseusNonStationary.lo: PerseusNonStationary.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-PerseusNonStationary.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-PerseusNonStationary.Tpo -c -o libMADPPlanning_la-PerseusNonStationary.lo `test -f 'PerseusNonStationary.cpp' || echo '$(srcdir)/'`PerseusNonStationary.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-PerseusNonStationary.Tpo $(DEPDIR)/libMADPPlanning_la-PerseusNonStationary.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='PerseusNonStationary.cpp' object='libMADPPlanning_la-PerseusNonStationary.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-PerseusNonStationary.lo `test -f 'PerseusNonStationary.cpp' || echo '$(srcdir)/'`PerseusNonStationary.cpp

libMADPPlanning_la-PerseusNonStationaryQPlanner.lo: PerseusNonStationaryQPlanner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-PerseusNonStationaryQPlanner.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-PerseusNonStationaryQPlanner.Tpo -c -o libMADPPlanning_la-PerseusNonStationaryQPlanner.lo `test -f 'PerseusNonStationaryQPlanner.cpp' || echo '$(srcdir)/'`PerseusNonStationaryQPlanner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-PerseusNonStationaryQPlanner.Tpo $(DEPDIR)/libMADPPlanning_la-PerseusNonStationaryQPlanner.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='PerseusNonStationaryQPlanner.cpp' object='libMADPPlanning_la-PerseusNonStationaryQPlanner.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-PerseusNonStationaryQPlanner.lo `test -f 'PerseusNonStationaryQPlanner.cpp' || echo '$(srcdir)/'`PerseusNonStationaryQPlanner.cpp

libMADPPlanning_la-PerseusBGNSPlanner.lo: PerseusBGNSPlanner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-PerseusBGNSPlanner.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-PerseusBGNSPlanner.Tpo -c -o libMADPPlanning_la-PerseusBGNSPlanner.lo `test -f 'PerseusBGNSPlanner.cpp' || echo '$(srcdir)/'`PerseusBGNSPlanner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-PerseusBGNSPlanner.Tpo $(DEPDIR)/libMADPPlanning_la-PerseusBGNSPlanner.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='PerseusBGNSPlanner.cpp' object='libMADPPlanning_la-PerseusBGNSPlanner.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-PerseusBGNSPlanner.lo `test -f 'PerseusBGNSPlanner.cpp' || echo '$(srcdir)/'`PerseusBGNSPlanner.cpp

libMADPPlanning_la-GeneralizedMAAStarPlanner.lo: GeneralizedMAAStarPlanner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-GeneralizedMAAStarPlanner.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-GeneralizedMAAStarPlanner.Tpo -c -o libMADPPlanning_la-GeneralizedMAAStarPlanner.lo `test -f 'GeneralizedMAAStarPlanner.cpp' || echo '$(srcdir)/'`GeneralizedMAAStarPlanner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-GeneralizedMAAStarPlanner.Tpo $(DEPDIR)/libMADPPlanning_la-GeneralizedMAAStarPlanner.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GeneralizedMAAStarPlanner.cpp' object='libMADPPlanning_la-GeneralizedMAAStarPlanner.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-GeneralizedMAAStarPlanner.lo `test -f 'GeneralizedMAAStarPlanner.cpp' || echo '$(srcdir)/'`GeneralizedMAAStarPlanner.cpp

libMADPPlanning_la-GeneralizedMAAStarPlannerForDecPOMDPDiscrete.lo: GeneralizedMAAStarPlannerForDecPOMDPDiscrete.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-GeneralizedMAAStarPlannerForDecPOMDPDiscrete.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-GeneralizedMAAStarPlannerForDecPOMDPDiscrete.Tpo -c -o libMADPPlanning_la-GeneralizedMAAStarPlannerForDecPOMDPDiscrete.lo `test -f 'GeneralizedMAAStarPlannerForDecPOMDPDiscrete.cpp' || echo '$(srcdir)/'`GeneralizedMAAStarPlannerForDecPOMDPDiscrete.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-GeneralizedMAAStarPlannerForDecPOMDPDiscrete.Tpo $(DEPDIR)/libMADPPlanning_la-GeneralizedMAAStarPlannerForDecPOMDPDiscrete.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GeneralizedMAAStarPlannerForDecPOMDPDiscrete.cpp' object='libMADPPlanning_la-GeneralizedMAAStarPlannerForDecPOMDPDiscrete.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-GeneralizedMAAStarPlannerForDecPOMDPDiscrete.lo `test -f 'GeneralizedMAAStarPlannerForDecPOMDPDiscrete.cpp' || echo '$(srcdir)/'`GeneralizedMAAStarPlannerForDecPOMDPDiscrete.cpp

libMADPPlanning_la-GeneralizedMAAStarPlannerForFactoredDecPOMDPDiscrete.lo: GeneralizedMAAStarPlannerForFactoredDecPOMDPDiscrete.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-GeneralizedMAAStarPlannerForFactoredDecPOMDPDiscrete.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-GeneralizedMAAStarPlannerForFactoredDecPOMDPDiscrete.Tpo -c -o libMADPPlanning_la-GeneralizedMAAStarPlannerForFactoredDecPOMDPDiscrete.lo `test -f 'GeneralizedMAAStarPlannerForFactoredDecPOMDPDiscrete.cpp' || echo '$(srcdir)/'`GeneralizedMAAStarPlannerForFactoredDecPOMDPDiscrete.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-GeneralizedMAAStarPlannerForFactoredDecPOMDPDiscrete.Tpo $(DEPDIR)/libMADPPlanning_la-GeneralizedMAAStarPlannerForFactoredDecPOMDPDiscrete.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GeneralizedMAAStarPlannerForFactoredDecPOMDPDiscrete.cpp' object='libMADPPlanning_la-GeneralizedMAAStarPlannerForFactoredDecPOMDPDiscrete.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-GeneralizedMAAStarPlannerForFactoredDecPOMDPDiscrete.lo `test -f 'GeneralizedMAAStarPlannerForFactoredDecPOMDPDiscrete.cpp' || echo '$(srcdir)/'`GeneralizedMAAStarPlannerForFactoredDecPOMDPDiscrete.cpp

libMADPPlanning_la-GMAA_MAAstar.lo: GMAA_MAAstar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-GMAA_MAAstar.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-GMAA_MAAstar.Tpo -c -o libMADPPlanning_la-GMAA_MAAstar.lo `test -f 'GMAA_MAAstar.cpp' || echo '$(srcdir)/'`GMAA_MAAstar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-GMAA_MAAstar.Tpo $(DEPDIR)/libMADPPlanning_la-GMAA_MAAstar.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GMAA_MAAstar.cpp' object='libMADPPlanning_la-GMAA_MAAstar.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-GMAA_MAAstar.lo `test -f 'GMAA_MAAstar.cpp' || echo '$(srcdir)/'`GMAA_MAAstar.cpp

libMADPPlanning_la-GMAA_MAAstarClassic.lo: GMAA_MAAstarClassic.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-GMAA_MAAstarClassic.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-GMAA_MAAstarClassic.Tpo -c -o libMADPPlanning_la-GMAA_MAAstarClassic.lo `test -f 'GMAA_MAAstarClassic.cpp' || echo '$(srcdir)/'`GMAA_MAAstarClassic.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-GMAA_MAAstarClassic.Tpo $(DEPDIR)/libMADPPlanning_la-GMAA_MAAstarClassic.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GMAA_MAAstarClassic.cpp' object='libMADPPlanning_la-GMAA_MAAstarClassic.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-GMAA_MAAstarClassic.lo `test -f 'GMAA_MAAstarClassic.cpp' || echo '$(srcdir)/'`GMAA_MAAstarClassic.cpp

libMADPPlanning_la-GMAA_MAAstarCluster.lo: GMAA_MAAstarCluster.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-GMAA_MAAstarCluster.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-GMAA_MAAstarCluster.Tpo -c -o libMADPPlanning_la-GMAA_MAAstarCluster.lo `test -f 'GMAA_MAAstarCluster.cpp' || echo '$(srcdir)/'`GMAA_MAAstarCluster.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-GMAA_MAAstarCluster.Tpo $(DEPDIR)/libMADPPlanning_la-GMAA_MAAstarCluster.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GMAA_MAAstarCluster.cpp' object='libMADPPlanning_la-GMAA_MAAstarCluster.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-GMAA_MAAstarCluster.lo `test -f 'GMAA_MAAstarCluster.cpp' || echo '$(srcdir)/'`GMAA_MAAstarCluster.cpp

libMADPPlanning_la-GMAA_kGMAACluster.lo: GMAA_kGMAACluster.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-GMAA_kGMAACluster.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-GMAA_kGMAACluster.Tpo -c -o libMADPPlanning_la-GMAA_kGMAACluster.lo `test -f 'GMAA_kGMAACluster.cpp' || echo '$(srcdir)/'`GMAA_kGMAACluster.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-GMAA_kGMAACluster.Tpo $(DEPDIR)/libMADPPlanning_la-GMAA_kGMAACluster.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GMAA_kGMAACluster.cpp' object='libMADPPlanning_la-GMAA_kGMAACluster.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-GMAA_kGMAACluster.lo `test -f 'GMAA_kGMAACluster.cpp' || echo '$(srcdir)/'`GMAA_kGMAACluster.cpp

libMADPPlanning_la-PolicyPoolJPolValPair.lo: PolicyPoolJPolValPair.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-PolicyPoolJPolValPair.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-PolicyPoolJPolValPair.Tpo -c -o libMADPPlanning_la-PolicyPoolJPolValPair.lo `test -f 'PolicyPoolJPolValPair.cpp' || echo '$(srcdir)/'`PolicyPoolJPolValPair.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-PolicyPoolJPolValPair.Tpo $(DEPDIR)/libMADPPlanning_la-PolicyPoolJPolValPair.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='PolicyPoolJPolValPair.cpp' object='libMADPPlanning_la-PolicyPoolJPolValPair.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-PolicyPoolJPolValPair.lo `test -f 'PolicyPoolJPolValPair.cpp' || echo '$(srcdir)/'`PolicyPoolJPolValPair.cpp

libMADPPlanning_la-PolicyPoolPartialJPolValPair.lo: PolicyPoolPartialJPolValPair.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-PolicyPoolPartialJPolValPair.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-PolicyPoolPartialJPolValPair.Tpo -c -o libMADPPlanning_la-PolicyPoolPartialJPolValPair.lo `test -f 'PolicyPoolPartialJPolValPair.cpp' || echo '$(srcdir)/'`PolicyPoolPartialJPolValPair.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-PolicyPoolPartialJPolValPair.Tpo $(DEPDIR)/libMADPPlanning_la-PolicyPoolPartialJPolValPair.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='PolicyPoolPartialJPolValPair.cpp' object='libMADPPlanning_la-PolicyPoolPartialJPolValPair.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-PolicyPoolPartialJPolValPair.lo `test -f 'PolicyPoolPartialJPolValPair.cpp' || echo '$(srcdir)/'`PolicyPoolPartialJPolValPair.cpp

libMADPPlanning_la-JPPVValuePair.lo: JPPVValuePair.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-JPPVValuePair.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-JPPVValuePair.Tpo -c -o libMADPPlanning_la-JPPVValuePair.lo `test -f 'JPPVValuePair.cpp' || echo '$(srcdir)/'`JPPVValuePair.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-JPPVValuePair.Tpo $(DEPDIR)/libMADPPlanning_la-JPPVValuePair.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='JPPVValuePair.cpp' object='libMADPPlanning_la-JPPVValuePair.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-JPPVValuePair.lo `test -f 'JPPVValuePair.cpp' || echo '$(srcdir)/'`JPPVValuePair.cpp

libMADPPlanning_la-JPPVIndexValuePair.lo: JPPVIndexValuePair.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-JPPVIndexValuePair.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-JPPVIndexValuePair.Tpo -c -o libMADPPlanning_la-JPPVIndexValuePair.lo `test -f 'JPPVIndexValuePair.cpp' || echo '$(srcdir)/'`JPPVIndexValuePair.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-JPPVIndexValuePair.Tpo $(DEPDIR)/libMADPPlanning_la-JPPVIndexValuePair.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='JPPVIndexValuePair.cpp' object='libMADPPlanning_la-JPPVIndexValuePair.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-JPPVIndexValuePair.lo `test -f 'JPPVIndexValuePair.cpp' || echo '$(srcdir)/'`JPPVIndexValuePair.cpp

libMADPPlanning_la-PartialJPDPValuePair.lo: PartialJPDPValuePair.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-PartialJPDPValuePair.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-PartialJPDPValuePair.Tpo -c -o libMADPPlanning_la-PartialJPDPValuePair.lo `test -f 'PartialJPDPValuePair.cpp' || echo '$(srcdir)/'`PartialJPDPValuePair.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-PartialJPDPValuePair.Tpo $(DEPDIR)/libMADPPlanning_la-PartialJPDPValuePair.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='PartialJPDPValuePair.cpp' object='libMADPPlanning_la-PartialJPDPValuePair.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-PartialJPDPValuePair.lo `test -f 'PartialJPDPValuePair.cpp' || echo '$(srcdir)/'`PartialJPDPValuePair.cpp

libMADPPlanning_la-PartialJPPVIndexValuePair.lo: PartialJPPVIndexValuePair.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-PartialJPPVIndexValuePair.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-PartialJPPVIndexValuePair.Tpo -c -o libMADPPlanning_la-PartialJPPVIndexValuePair.lo `test -f 'PartialJPPVIndexValuePair.cpp' || echo '$(srcdir)/'`PartialJPPVIndexValuePair.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-PartialJPPVIndexValuePair.Tpo $(DEPDIR)/libMADPPlanning_la-PartialJPPVIndexValuePair.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='PartialJPPVIndexValuePair.cpp' object='libMADPPlanning_la-PartialJPPVIndexValuePair.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-PartialJPPVIndexValuePair.lo `test -f 'PartialJPPVIndexValuePair.cpp' || echo '$(srcdir)/'`PartialJPPVIndexValuePair.cpp

libMADPPlanning_la-GMAA_kGMAA.lo: GMAA_kGMAA.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-GMAA_kGMAA.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-GMAA_kGMAA.Tpo -c -o libMADPPlanning_la-GMAA_kGMAA.lo `test -f 'GMAA_kGMAA.cpp' || echo '$(srcdir)/'`GMAA_kGMAA.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-GMAA_kGMAA.Tpo $(DEPDIR)/libMADPPlanning_la-GMAA_kGMAA.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GMAA_kGMAA.cpp' object='libMADPPlanning_la-GMAA_kGMAA.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-GMAA_kGMAA.lo `test -f 'GMAA_kGMAA.cpp' || echo '$(srcdir)/'`GMAA_kGMAA.cpp

libMADPPlanning_la-GMAA_MAA_ELSI.lo: GMAA_MAA_ELSI.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-GMAA_MAA_ELSI.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-GMAA_MAA_ELSI.Tpo -c -o libMADPPlanning_la-GMAA_MAA_ELSI.lo `test -f 'GMAA_MAA_ELSI.cpp' || echo '$(srcdir)/'`GMAA_MAA_ELSI.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libMADPPlanning_la-GMAA_MAA_ELSI.Tpo $(DEPDIR)/libMADPPlanning_la-GMAA_MAA_ELSI.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GMAA_MAA_ELSI.cpp' object='libMADPPlanning_la-GMAA_MAA_ELSI.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-GMAA_MAA_ELSI.lo `test -f 'GMAA_MAA_ELSI.cpp' || echo '$(srcdir)/'`GMAA_MAA_ELSI.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-libMADPPlanning_laHEADERS: $(libMADPPlanning_la_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(libMADPPlanning_la_HEADERS)'; test -n "$(libMADPPlanning_ladir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libMADPPlanning_ladir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libMADPPlanning_ladir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(libMADPPlanning_ladir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(libMADPPlanning_ladir)" || exit $$?; \
	done

uninstall-libMADPPlanning_laHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libMADPPlanning_la_HEADERS)'; test -n "$(libMADPPlanning_ladir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libMADPPlanning_ladir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(libMADPPlanning_ladir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-libMADPPlanning_laHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES \
	uninstall-libMADPPlanning_laHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-noinstLTLIBRARIES \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-libMADPPlanning_laHEADERS install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-libLTLIBRARIES \
	uninstall-libMADPPlanning_laHEADERS


cleantags: cleantags-recursive

cleantags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) cleantags) || exit 1; \
	done; \
	rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags; \
	rm -f cscope.out cscope.in.out cscope.po.out cscope.files

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
