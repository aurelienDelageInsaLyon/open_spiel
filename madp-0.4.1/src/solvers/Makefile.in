# Makefile.in generated by automake 1.14.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# $Id$

# Contains several project-wide Makefile options

VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
DIST_COMMON = $(top_srcdir)/src/Makefile.custom \
	$(top_srcdir)/config/Make-rules $(srcdir)/Makefile.in \
	$(srcdir)/Makefile.am $(top_srcdir)/depcomp
@HAVE_CPLEX_TRUE@am__append_1 = DPLPC  # Not in default compile as it needs CPLEX
@DARWIN_TRUE@am__append_2 = -DDARWIN
noinst_PROGRAMS =
bin_PROGRAMS = $(am__EXEEXT_2)
subdir = src/solvers
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ac_cplex.m4 \
	$(top_srcdir)/m4/cuda.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
@HAVE_CPLEX_TRUE@am__EXEEXT_1 = DPLPC$(EXEEXT)
am__EXEEXT_2 = Perseus$(EXEEXT) GMAA$(EXEEXT) GMAA_ELSI$(EXEEXT) \
	JESP$(EXEEXT) DICEPS$(EXEEXT) BFS$(EXEEXT) \
	MMDP_QLearner$(EXEEXT) MMDP_Solver$(EXEEXT) $(am__EXEEXT_1)
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am_BFS_OBJECTS = BFS-BFS.$(OBJEXT)
BFS_OBJECTS = $(am_BFS_OBJECTS)
am__DEPENDENCIES_1 =
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
BFS_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(BFS_CXXFLAGS) \
	$(CXXFLAGS) $(BFS_LDFLAGS) $(LDFLAGS) -o $@
am_DICEPS_OBJECTS = DICEPS-DICEPS.$(OBJEXT)
DICEPS_OBJECTS = $(am_DICEPS_OBJECTS)
DICEPS_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(DICEPS_CXXFLAGS) \
	$(CXXFLAGS) $(DICEPS_LDFLAGS) $(LDFLAGS) -o $@
am__DPLPC_SOURCES_DIST = DP-LPC.cpp
@HAVE_CPLEX_TRUE@am_DPLPC_OBJECTS = DPLPC-DP-LPC.$(OBJEXT)
DPLPC_OBJECTS = $(am_DPLPC_OBJECTS)
DPLPC_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(DPLPC_CXXFLAGS) \
	$(CXXFLAGS) $(DPLPC_LDFLAGS) $(LDFLAGS) -o $@
am_GMAA_OBJECTS = GMAA-GMAA.$(OBJEXT)
GMAA_OBJECTS = $(am_GMAA_OBJECTS)
GMAA_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(GMAA_CXXFLAGS) \
	$(CXXFLAGS) $(GMAA_LDFLAGS) $(LDFLAGS) -o $@
am_GMAA_ELSI_OBJECTS = GMAA_ELSI-GMAA_ELSI.$(OBJEXT)
GMAA_ELSI_OBJECTS = $(am_GMAA_ELSI_OBJECTS)
GMAA_ELSI_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(GMAA_ELSI_CXXFLAGS) \
	$(CXXFLAGS) $(GMAA_ELSI_LDFLAGS) $(LDFLAGS) -o $@
am_JESP_OBJECTS = JESP-JESP.$(OBJEXT)
JESP_OBJECTS = $(am_JESP_OBJECTS)
JESP_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(JESP_CXXFLAGS) \
	$(CXXFLAGS) $(JESP_LDFLAGS) $(LDFLAGS) -o $@
am_MMDP_QLearner_OBJECTS = MMDP_QLearner-MMDP_QLearner.$(OBJEXT)
MMDP_QLearner_OBJECTS = $(am_MMDP_QLearner_OBJECTS)
MMDP_QLearner_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(MMDP_QLearner_CXXFLAGS) $(CXXFLAGS) $(MMDP_QLearner_LDFLAGS) \
	$(LDFLAGS) -o $@
am_MMDP_Solver_OBJECTS = MMDP_Solver-MMDP_Solver.$(OBJEXT)
MMDP_Solver_OBJECTS = $(am_MMDP_Solver_OBJECTS)
MMDP_Solver_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(MMDP_Solver_CXXFLAGS) \
	$(CXXFLAGS) $(MMDP_Solver_LDFLAGS) $(LDFLAGS) -o $@
am_Perseus_OBJECTS = Perseus-Perseus.$(OBJEXT)
Perseus_OBJECTS = $(am_Perseus_OBJECTS)
Perseus_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(Perseus_CXXFLAGS) \
	$(CXXFLAGS) $(Perseus_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(BFS_SOURCES) $(DICEPS_SOURCES) $(DPLPC_SOURCES) \
	$(GMAA_SOURCES) $(GMAA_ELSI_SOURCES) $(JESP_SOURCES) \
	$(MMDP_QLearner_SOURCES) $(MMDP_Solver_SOURCES) \
	$(Perseus_SOURCES)
DIST_SOURCES = $(BFS_SOURCES) $(DICEPS_SOURCES) \
	$(am__DPLPC_SOURCES_DIST) $(GMAA_SOURCES) $(GMAA_ELSI_SOURCES) \
	$(JESP_SOURCES) $(MMDP_QLearner_SOURCES) \
	$(MMDP_Solver_SOURCES) $(Perseus_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPLEX_INCLUDES = @CPLEX_INCLUDES@
CPLEX_LDFLAGS = @CPLEX_LDFLAGS@
CPLEX_LIBS = @CPLEX_LIBS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CSTANDARD = @CSTANDARD@
CSTD = @CSTD@
CSTD11 = @CSTD11@
CSTDGNU = @CSTDGNU@
CSTDGNU11 = @CSTDGNU11@
CUDA_CPPFLAGS = @CUDA_CPPFLAGS@
CUDA_LDFLAGS = @CUDA_LDFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
POW_LIB = @POW_LIB@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

#####################################################################
# Optional software packages to be used, check configuration.h to
# enable them

# For using arbitrary length integers
# Should be set if USE_ARBITRARY_PRECISION_INDEX is set to 1
#GMP_LD=-lgmpxx -lgmp
LIBDAI_NORMAL = $(top_builddir)/src/libDAI/libDAI.la
LIBDAI_INCLUDES = -I$(top_srcdir)/src/libDAI

# The following is necessary for calling Matlab from the C++ code
# Just set the correct MATLAB_DIR and uncomment all three lines
#MATLAB_DIR = /scratch/matlabR2008a
#MATLAB_INCLUDES = -I$(MATLAB_DIR)/extern/include/
#MATLAB_LD = -L$(MATLAB_DIR)/bin/glnxa64/ \
# -lmat -leng -lmx -lut

# the open PNL library
#PNL_LD = #define PNL library path 
#PNL_INCLUDES = #define the PNL includes.
#typically something like
#PNL_LD = -L/home/faolieho/Documents/software/PNL/high/source -L/home/faolieho/Documents/software/PNL/cxcore/cxcore/src -L/home/faolieho/Documents/software/PNL/c_pgmtk/src -lhigh -lpnl -lcxcore -lpthread
#and
#PNL_INCLUDES = -I$(HOME)/include/pnl -I$(HOME)/include/pnl/high -I$(HOME)/include/pnl/opencx  -I$(HOME)/include/pnl/cart
#
#NOTE: in order to build DEBUG libraries (i.e., include the debug version of 
# the PNL lib), the PNL_LD path should point to where the PNL library is built,
# rather than installed. For some reason things are not working smoothly when 
# pointing to the installation libdir (something to do with libtool I think).

#####################################################################
# Compiler flags

# the debug flags used - according to 
# http://sourceware.org/gdb/current/onlinedocs/gdb_13.html#SEC111
# dwarf-2 is best for c++ and gdb
# -fno-inline should make things easier to debug
DEBUG_FLAGS = -O0 -gdwarf-2 -fno-inline

# Optimization flags used for building normal and profiling libraries.
# -DNDEBUG speeds up the boost::numeric::ublas operations
CPP_OPTIMIZATION_FLAGS = -O3 -DNDEBUG

#machine architectecture specific flags
#XXX: the following does not work on MacOS! (leave empty to resolve)
# Matthijs: is it not just a problem with using a GCC version that is
# too old to support this?
MARCH_FLAGS = -march=native  # automatically picks the correct settings for your system
@FOUND_LIBXML2_TRUE@XML2_CXXFLAGS = `xml2-config --cflags`

#default flags throughout all MADP:
MADP_CXXFLAGS = -pipe $(MARCH_FLAGS) $(CSTANDARD) $(XML2_CXXFLAGS)
MADP_CPPFLAGS = 
MADP_CFLAGS = 

#####################################################################
# The final include path
# fao 2014-02-01: added $(INCLUDE) such that we can all add include paths, for e.g., cplex.
MADP_INCLUDES = \
 $(INCLUDE) \
 $(LIBDAI_INCLUDES)\
 -I$(top_srcdir)/src/boost

MADP_LD = 

#####################################################################
# Lists of libs to be linked with binaries.
# Note that the linking order matters, in order to correctly resolve symbols
MADPLIBS_NORMAL_BASE = \
 $(top_builddir)/src/base/libMADPBase.la

MADPLIBS_NORMAL_BASE_SUPPORT = \
 $(top_builddir)/src/support/libMADPSupport.la \
 $(MADPLIBS_NORMAL_BASE) 

MADPLIBS_NORMAL_BASE_PARSER = \
 $(top_builddir)/src/parser/libMADPParser.la \
 $(MADPLIBS_NORMAL_BASE) \
 $(LIBPOMDPSOLVE_NORMAL) $(LIBLPSOLVEOLD_NORMAL) $(LIBMDP_NORMAL) $(LIBLASPACK_NORMAL)

MADPLIBS_NORMAL_BASE_PARSER_SUPPORT = \
 $(top_builddir)/src/support/libMADPSupport.la \
 $(MADPLIBS_NORMAL_BASE_PARSER) 

MADPLIBS_NORMAL = $(top_builddir)/src/madp/libMADP.la
# $(top_builddir)/src/planning/libMADPPlanning.la \
# $(MADPLIBS_NORMAL_BASE_PARSER_SUPPORT) \
# $(LIBDAI_NORMAL)
MADPLIBS_NORMAL_NOPARSER_NOPLANNING = $(MADPLIBS_NORMAL_BASE)
MADPLIBS_NORMAL_NOPLANNING = $(MADPLIBS_NORMAL_BASE_PARSER_SUPPORT)
MADPLIBS_NORMAL_NOPARSER = $(MADPLIBS_NORMAL)

# Which programs to build. Only PROGRAMS_NORMAL will be installed.
PROGRAMS_NORMAL = Perseus GMAA GMAA_ELSI JESP DICEPS BFS MMDP_QLearner \
	MMDP_Solver $(am__append_1)

##############
# Includedirs, libdirs, libs and cflags for all programs 
INCLUDEPATH = -I..\
 -I$(top_srcdir)/src/base -I$(top_srcdir)/src/include\
 -I$(top_srcdir)/src/support -I$(top_srcdir)/src/planning\
 -I$(top_srcdir)/src/parser \
 $(MADP_INCLUDES) 

AM_LDFLAGS = 
LDADD = 
AM_CPPFLAGS = -pipe $(MARCH_FLAGS) $(INCLUDEPATH) $(am__append_2)

# Build Perseus
Perseus_SOURCES = Perseus.cpp
Perseus_LDADD = $(MADPLIBS_NORMAL) $(MADP_LD)
Perseus_LDFLAGS = $(AM_LDFLAGS) 
Perseus_DEPENDENCIES = $(MADPLIBS_NORMAL)
Perseus_CPPFLAGS = $(AM_CPPFLAGS) $(CPP_OPTIMIZATION_FLAGS)
Perseus_CXXFLAGS = $(CSTANDARD)
Perseus_CFLAGS = 

# Build GMAA
GMAA_SOURCES = GMAA.cpp
GMAA_LDADD = $(MADPLIBS_NORMAL) $(MADP_LD) $(LIBDAI_NORMAL)
GMAA_LDFLAGS = $(AM_LDFLAGS) 
GMAA_DEPENDENCIES = $(MADPLIBS_NORMAL)
GMAA_CPPFLAGS = $(AM_CPPFLAGS) $(CPP_OPTIMIZATION_FLAGS)
GMAA_CXXFLAGS = $(CSTANDARD)
GMAA_CFLAGS = 

# Build GMAA_ELSI
GMAA_ELSI_SOURCES = GMAA_ELSI.cpp
GMAA_ELSI_LDADD = $(MADPLIBS_NORMAL) $(MADP_LD)
GMAA_ELSI_LDFLAGS = $(AM_LDFLAGS) 
GMAA_ELSI_DEPENDENCIES = $(MADPLIBS_NORMAL)
GMAA_ELSI_CPPFLAGS = $(AM_CPPFLAGS) $(CPP_OPTIMIZATION_FLAGS)
GMAA_ELSI_CXXFLAGS = $(CSTANDARD)
GMAA_ELSI_CFLAGS = 

# Build JESP
JESP_SOURCES = JESP.cpp
JESP_LDADD = $(MADPLIBS_NORMAL) $(MADP_LD)
JESP_LDFLAGS = $(AM_LDFLAGS) 
JESP_DEPENDENCIES = $(MADPLIBS_NORMAL)
JESP_CPPFLAGS = $(AM_CPPFLAGS) $(CPP_OPTIMIZATION_FLAGS)
JESP_CXXFLAGS = $(CSTANDARD)
JESP_CFLAGS = 

# Build DICEPS
DICEPS_SOURCES = DICEPS.cpp
DICEPS_LDADD = $(MADPLIBS_NORMAL) $(MADP_LD)
DICEPS_LDFLAGS = $(AM_LDFLAGS) 
DICEPS_DEPENDENCIES = $(MADPLIBS_NORMAL)
DICEPS_CPPFLAGS = $(AM_CPPFLAGS) $(CPP_OPTIMIZATION_FLAGS)
DICEPS_CXXFLAGS = $(CSTANDARD)
DICEPS_CFLAGS = 

# Build BFS
BFS_SOURCES = BFS.cpp
BFS_LDADD = $(MADPLIBS_NORMAL) $(MADP_LD)
BFS_LDFLAGS = $(AM_LDFLAGS) 
BFS_DEPENDENCIES = $(MADPLIBS_NORMAL)
BFS_CPPFLAGS = $(AM_CPPFLAGS) $(CPP_OPTIMIZATION_FLAGS)
BFS_CXXFLAGS = $(CSTANDARD)
BFS_CFLAGS = 

# Build DP-LPC
@HAVE_CPLEX_TRUE@DPLPC_SOURCES = DP-LPC.cpp
@HAVE_CPLEX_TRUE@DPLPC_LDADD = $(MADPLIBS_NORMAL) $(MADP_LD) $(CPLEX_LIBS)
@HAVE_CPLEX_TRUE@DPLPC_LDFLAGS = $(AM_LDFLAGS)  $(CPLEX_LDFLAGS)
@HAVE_CPLEX_TRUE@DPLPC_DEPENDENCIES = $(MADPLIBS_NORMAL)
@HAVE_CPLEX_TRUE@DPLPC_CPPFLAGS = $(AM_CPPFLAGS) $(CPP_OPTIMIZATION_FLAGS)
@HAVE_CPLEX_TRUE@DPLPC_CXXFLAGS = $(CSTANDARD) $(CPLEX_INCLUDES) -DILOUSESTL 
@HAVE_CPLEX_TRUE@DPLPC_CFLAGS = 

# Build MMDP_QLearner
MMDP_QLearner_SOURCES = MMDP_QLearner.cpp
MMDP_QLearner_LDADD = $(MADPLIBS_NORMAL) $(MADP_LD)
MMDP_QLearner_LDFLAGS = $(AM_LDFLAGS) 
MMDP_QLearner_DEPENDENCIES = $(MADPLIBS_NORMAL)
MMDP_QLearner_CPPFLAGS = $(AM_CPPFLAGS) $(CPP_OPTIMIZATION_FLAGS)
MMDP_QLearner_CXXFLAGS = 
MMDP_QLearner_CFLAGS = 

# Build MMDP_Solver
MMDP_Solver_SOURCES = MMDP_Solver.cpp
MMDP_Solver_LDADD = $(MADPLIBS_NORMAL) $(MADP_LD)
MMDP_Solver_LDFLAGS = $(AM_LDFLAGS) 
MMDP_Solver_DEPENDENCIES = $(MADPLIBS_NORMAL)
MMDP_Solver_CPPFLAGS = $(AM_CPPFLAGS) $(CPP_OPTIMIZATION_FLAGS)
MMDP_Solver_CXXFLAGS = 
MMDP_Solver_CFLAGS = 
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/src/Makefile.custom $(top_srcdir)/config/Make-rules $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/solvers/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/solvers/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/src/Makefile.custom $(top_srcdir)/config/Make-rules:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

BFS$(EXEEXT): $(BFS_OBJECTS) $(BFS_DEPENDENCIES) $(EXTRA_BFS_DEPENDENCIES) 
	@rm -f BFS$(EXEEXT)
	$(AM_V_CXXLD)$(BFS_LINK) $(BFS_OBJECTS) $(BFS_LDADD) $(LIBS)

DICEPS$(EXEEXT): $(DICEPS_OBJECTS) $(DICEPS_DEPENDENCIES) $(EXTRA_DICEPS_DEPENDENCIES) 
	@rm -f DICEPS$(EXEEXT)
	$(AM_V_CXXLD)$(DICEPS_LINK) $(DICEPS_OBJECTS) $(DICEPS_LDADD) $(LIBS)

DPLPC$(EXEEXT): $(DPLPC_OBJECTS) $(DPLPC_DEPENDENCIES) $(EXTRA_DPLPC_DEPENDENCIES) 
	@rm -f DPLPC$(EXEEXT)
	$(AM_V_CXXLD)$(DPLPC_LINK) $(DPLPC_OBJECTS) $(DPLPC_LDADD) $(LIBS)

GMAA$(EXEEXT): $(GMAA_OBJECTS) $(GMAA_DEPENDENCIES) $(EXTRA_GMAA_DEPENDENCIES) 
	@rm -f GMAA$(EXEEXT)
	$(AM_V_CXXLD)$(GMAA_LINK) $(GMAA_OBJECTS) $(GMAA_LDADD) $(LIBS)

GMAA_ELSI$(EXEEXT): $(GMAA_ELSI_OBJECTS) $(GMAA_ELSI_DEPENDENCIES) $(EXTRA_GMAA_ELSI_DEPENDENCIES) 
	@rm -f GMAA_ELSI$(EXEEXT)
	$(AM_V_CXXLD)$(GMAA_ELSI_LINK) $(GMAA_ELSI_OBJECTS) $(GMAA_ELSI_LDADD) $(LIBS)

JESP$(EXEEXT): $(JESP_OBJECTS) $(JESP_DEPENDENCIES) $(EXTRA_JESP_DEPENDENCIES) 
	@rm -f JESP$(EXEEXT)
	$(AM_V_CXXLD)$(JESP_LINK) $(JESP_OBJECTS) $(JESP_LDADD) $(LIBS)

MMDP_QLearner$(EXEEXT): $(MMDP_QLearner_OBJECTS) $(MMDP_QLearner_DEPENDENCIES) $(EXTRA_MMDP_QLearner_DEPENDENCIES) 
	@rm -f MMDP_QLearner$(EXEEXT)
	$(AM_V_CXXLD)$(MMDP_QLearner_LINK) $(MMDP_QLearner_OBJECTS) $(MMDP_QLearner_LDADD) $(LIBS)

MMDP_Solver$(EXEEXT): $(MMDP_Solver_OBJECTS) $(MMDP_Solver_DEPENDENCIES) $(EXTRA_MMDP_Solver_DEPENDENCIES) 
	@rm -f MMDP_Solver$(EXEEXT)
	$(AM_V_CXXLD)$(MMDP_Solver_LINK) $(MMDP_Solver_OBJECTS) $(MMDP_Solver_LDADD) $(LIBS)

Perseus$(EXEEXT): $(Perseus_OBJECTS) $(Perseus_DEPENDENCIES) $(EXTRA_Perseus_DEPENDENCIES) 
	@rm -f Perseus$(EXEEXT)
	$(AM_V_CXXLD)$(Perseus_LINK) $(Perseus_OBJECTS) $(Perseus_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BFS-BFS.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DICEPS-DICEPS.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DPLPC-DP-LPC.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GMAA-GMAA.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GMAA_ELSI-GMAA_ELSI.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/JESP-JESP.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MMDP_QLearner-MMDP_QLearner.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MMDP_Solver-MMDP_Solver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Perseus-Perseus.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

BFS-BFS.o: BFS.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(BFS_CPPFLAGS) $(CPPFLAGS) $(BFS_CXXFLAGS) $(CXXFLAGS) -MT BFS-BFS.o -MD -MP -MF $(DEPDIR)/BFS-BFS.Tpo -c -o BFS-BFS.o `test -f 'BFS.cpp' || echo '$(srcdir)/'`BFS.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/BFS-BFS.Tpo $(DEPDIR)/BFS-BFS.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BFS.cpp' object='BFS-BFS.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(BFS_CPPFLAGS) $(CPPFLAGS) $(BFS_CXXFLAGS) $(CXXFLAGS) -c -o BFS-BFS.o `test -f 'BFS.cpp' || echo '$(srcdir)/'`BFS.cpp

BFS-BFS.obj: BFS.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(BFS_CPPFLAGS) $(CPPFLAGS) $(BFS_CXXFLAGS) $(CXXFLAGS) -MT BFS-BFS.obj -MD -MP -MF $(DEPDIR)/BFS-BFS.Tpo -c -o BFS-BFS.obj `if test -f 'BFS.cpp'; then $(CYGPATH_W) 'BFS.cpp'; else $(CYGPATH_W) '$(srcdir)/BFS.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/BFS-BFS.Tpo $(DEPDIR)/BFS-BFS.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BFS.cpp' object='BFS-BFS.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(BFS_CPPFLAGS) $(CPPFLAGS) $(BFS_CXXFLAGS) $(CXXFLAGS) -c -o BFS-BFS.obj `if test -f 'BFS.cpp'; then $(CYGPATH_W) 'BFS.cpp'; else $(CYGPATH_W) '$(srcdir)/BFS.cpp'; fi`

DICEPS-DICEPS.o: DICEPS.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(DICEPS_CPPFLAGS) $(CPPFLAGS) $(DICEPS_CXXFLAGS) $(CXXFLAGS) -MT DICEPS-DICEPS.o -MD -MP -MF $(DEPDIR)/DICEPS-DICEPS.Tpo -c -o DICEPS-DICEPS.o `test -f 'DICEPS.cpp' || echo '$(srcdir)/'`DICEPS.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/DICEPS-DICEPS.Tpo $(DEPDIR)/DICEPS-DICEPS.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='DICEPS.cpp' object='DICEPS-DICEPS.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(DICEPS_CPPFLAGS) $(CPPFLAGS) $(DICEPS_CXXFLAGS) $(CXXFLAGS) -c -o DICEPS-DICEPS.o `test -f 'DICEPS.cpp' || echo '$(srcdir)/'`DICEPS.cpp

DICEPS-DICEPS.obj: DICEPS.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(DICEPS_CPPFLAGS) $(CPPFLAGS) $(DICEPS_CXXFLAGS) $(CXXFLAGS) -MT DICEPS-DICEPS.obj -MD -MP -MF $(DEPDIR)/DICEPS-DICEPS.Tpo -c -o DICEPS-DICEPS.obj `if test -f 'DICEPS.cpp'; then $(CYGPATH_W) 'DICEPS.cpp'; else $(CYGPATH_W) '$(srcdir)/DICEPS.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/DICEPS-DICEPS.Tpo $(DEPDIR)/DICEPS-DICEPS.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='DICEPS.cpp' object='DICEPS-DICEPS.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(DICEPS_CPPFLAGS) $(CPPFLAGS) $(DICEPS_CXXFLAGS) $(CXXFLAGS) -c -o DICEPS-DICEPS.obj `if test -f 'DICEPS.cpp'; then $(CYGPATH_W) 'DICEPS.cpp'; else $(CYGPATH_W) '$(srcdir)/DICEPS.cpp'; fi`

DPLPC-DP-LPC.o: DP-LPC.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(DPLPC_CPPFLAGS) $(CPPFLAGS) $(DPLPC_CXXFLAGS) $(CXXFLAGS) -MT DPLPC-DP-LPC.o -MD -MP -MF $(DEPDIR)/DPLPC-DP-LPC.Tpo -c -o DPLPC-DP-LPC.o `test -f 'DP-LPC.cpp' || echo '$(srcdir)/'`DP-LPC.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/DPLPC-DP-LPC.Tpo $(DEPDIR)/DPLPC-DP-LPC.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='DP-LPC.cpp' object='DPLPC-DP-LPC.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(DPLPC_CPPFLAGS) $(CPPFLAGS) $(DPLPC_CXXFLAGS) $(CXXFLAGS) -c -o DPLPC-DP-LPC.o `test -f 'DP-LPC.cpp' || echo '$(srcdir)/'`DP-LPC.cpp

DPLPC-DP-LPC.obj: DP-LPC.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(DPLPC_CPPFLAGS) $(CPPFLAGS) $(DPLPC_CXXFLAGS) $(CXXFLAGS) -MT DPLPC-DP-LPC.obj -MD -MP -MF $(DEPDIR)/DPLPC-DP-LPC.Tpo -c -o DPLPC-DP-LPC.obj `if test -f 'DP-LPC.cpp'; then $(CYGPATH_W) 'DP-LPC.cpp'; else $(CYGPATH_W) '$(srcdir)/DP-LPC.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/DPLPC-DP-LPC.Tpo $(DEPDIR)/DPLPC-DP-LPC.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='DP-LPC.cpp' object='DPLPC-DP-LPC.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(DPLPC_CPPFLAGS) $(CPPFLAGS) $(DPLPC_CXXFLAGS) $(CXXFLAGS) -c -o DPLPC-DP-LPC.obj `if test -f 'DP-LPC.cpp'; then $(CYGPATH_W) 'DP-LPC.cpp'; else $(CYGPATH_W) '$(srcdir)/DP-LPC.cpp'; fi`

GMAA-GMAA.o: GMAA.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(GMAA_CPPFLAGS) $(CPPFLAGS) $(GMAA_CXXFLAGS) $(CXXFLAGS) -MT GMAA-GMAA.o -MD -MP -MF $(DEPDIR)/GMAA-GMAA.Tpo -c -o GMAA-GMAA.o `test -f 'GMAA.cpp' || echo '$(srcdir)/'`GMAA.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/GMAA-GMAA.Tpo $(DEPDIR)/GMAA-GMAA.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GMAA.cpp' object='GMAA-GMAA.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(GMAA_CPPFLAGS) $(CPPFLAGS) $(GMAA_CXXFLAGS) $(CXXFLAGS) -c -o GMAA-GMAA.o `test -f 'GMAA.cpp' || echo '$(srcdir)/'`GMAA.cpp

GMAA-GMAA.obj: GMAA.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(GMAA_CPPFLAGS) $(CPPFLAGS) $(GMAA_CXXFLAGS) $(CXXFLAGS) -MT GMAA-GMAA.obj -MD -MP -MF $(DEPDIR)/GMAA-GMAA.Tpo -c -o GMAA-GMAA.obj `if test -f 'GMAA.cpp'; then $(CYGPATH_W) 'GMAA.cpp'; else $(CYGPATH_W) '$(srcdir)/GMAA.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/GMAA-GMAA.Tpo $(DEPDIR)/GMAA-GMAA.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GMAA.cpp' object='GMAA-GMAA.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(GMAA_CPPFLAGS) $(CPPFLAGS) $(GMAA_CXXFLAGS) $(CXXFLAGS) -c -o GMAA-GMAA.obj `if test -f 'GMAA.cpp'; then $(CYGPATH_W) 'GMAA.cpp'; else $(CYGPATH_W) '$(srcdir)/GMAA.cpp'; fi`

GMAA_ELSI-GMAA_ELSI.o: GMAA_ELSI.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(GMAA_ELSI_CPPFLAGS) $(CPPFLAGS) $(GMAA_ELSI_CXXFLAGS) $(CXXFLAGS) -MT GMAA_ELSI-GMAA_ELSI.o -MD -MP -MF $(DEPDIR)/GMAA_ELSI-GMAA_ELSI.Tpo -c -o GMAA_ELSI-GMAA_ELSI.o `test -f 'GMAA_ELSI.cpp' || echo '$(srcdir)/'`GMAA_ELSI.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/GMAA_ELSI-GMAA_ELSI.Tpo $(DEPDIR)/GMAA_ELSI-GMAA_ELSI.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GMAA_ELSI.cpp' object='GMAA_ELSI-GMAA_ELSI.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(GMAA_ELSI_CPPFLAGS) $(CPPFLAGS) $(GMAA_ELSI_CXXFLAGS) $(CXXFLAGS) -c -o GMAA_ELSI-GMAA_ELSI.o `test -f 'GMAA_ELSI.cpp' || echo '$(srcdir)/'`GMAA_ELSI.cpp

GMAA_ELSI-GMAA_ELSI.obj: GMAA_ELSI.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(GMAA_ELSI_CPPFLAGS) $(CPPFLAGS) $(GMAA_ELSI_CXXFLAGS) $(CXXFLAGS) -MT GMAA_ELSI-GMAA_ELSI.obj -MD -MP -MF $(DEPDIR)/GMAA_ELSI-GMAA_ELSI.Tpo -c -o GMAA_ELSI-GMAA_ELSI.obj `if test -f 'GMAA_ELSI.cpp'; then $(CYGPATH_W) 'GMAA_ELSI.cpp'; else $(CYGPATH_W) '$(srcdir)/GMAA_ELSI.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/GMAA_ELSI-GMAA_ELSI.Tpo $(DEPDIR)/GMAA_ELSI-GMAA_ELSI.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GMAA_ELSI.cpp' object='GMAA_ELSI-GMAA_ELSI.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(GMAA_ELSI_CPPFLAGS) $(CPPFLAGS) $(GMAA_ELSI_CXXFLAGS) $(CXXFLAGS) -c -o GMAA_ELSI-GMAA_ELSI.obj `if test -f 'GMAA_ELSI.cpp'; then $(CYGPATH_W) 'GMAA_ELSI.cpp'; else $(CYGPATH_W) '$(srcdir)/GMAA_ELSI.cpp'; fi`

JESP-JESP.o: JESP.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(JESP_CPPFLAGS) $(CPPFLAGS) $(JESP_CXXFLAGS) $(CXXFLAGS) -MT JESP-JESP.o -MD -MP -MF $(DEPDIR)/JESP-JESP.Tpo -c -o JESP-JESP.o `test -f 'JESP.cpp' || echo '$(srcdir)/'`JESP.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/JESP-JESP.Tpo $(DEPDIR)/JESP-JESP.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='JESP.cpp' object='JESP-JESP.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(JESP_CPPFLAGS) $(CPPFLAGS) $(JESP_CXXFLAGS) $(CXXFLAGS) -c -o JESP-JESP.o `test -f 'JESP.cpp' || echo '$(srcdir)/'`JESP.cpp

JESP-JESP.obj: JESP.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(JESP_CPPFLAGS) $(CPPFLAGS) $(JESP_CXXFLAGS) $(CXXFLAGS) -MT JESP-JESP.obj -MD -MP -MF $(DEPDIR)/JESP-JESP.Tpo -c -o JESP-JESP.obj `if test -f 'JESP.cpp'; then $(CYGPATH_W) 'JESP.cpp'; else $(CYGPATH_W) '$(srcdir)/JESP.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/JESP-JESP.Tpo $(DEPDIR)/JESP-JESP.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='JESP.cpp' object='JESP-JESP.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(JESP_CPPFLAGS) $(CPPFLAGS) $(JESP_CXXFLAGS) $(CXXFLAGS) -c -o JESP-JESP.obj `if test -f 'JESP.cpp'; then $(CYGPATH_W) 'JESP.cpp'; else $(CYGPATH_W) '$(srcdir)/JESP.cpp'; fi`

MMDP_QLearner-MMDP_QLearner.o: MMDP_QLearner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MMDP_QLearner_CPPFLAGS) $(CPPFLAGS) $(MMDP_QLearner_CXXFLAGS) $(CXXFLAGS) -MT MMDP_QLearner-MMDP_QLearner.o -MD -MP -MF $(DEPDIR)/MMDP_QLearner-MMDP_QLearner.Tpo -c -o MMDP_QLearner-MMDP_QLearner.o `test -f 'MMDP_QLearner.cpp' || echo '$(srcdir)/'`MMDP_QLearner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/MMDP_QLearner-MMDP_QLearner.Tpo $(DEPDIR)/MMDP_QLearner-MMDP_QLearner.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='MMDP_QLearner.cpp' object='MMDP_QLearner-MMDP_QLearner.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MMDP_QLearner_CPPFLAGS) $(CPPFLAGS) $(MMDP_QLearner_CXXFLAGS) $(CXXFLAGS) -c -o MMDP_QLearner-MMDP_QLearner.o `test -f 'MMDP_QLearner.cpp' || echo '$(srcdir)/'`MMDP_QLearner.cpp

MMDP_QLearner-MMDP_QLearner.obj: MMDP_QLearner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MMDP_QLearner_CPPFLAGS) $(CPPFLAGS) $(MMDP_QLearner_CXXFLAGS) $(CXXFLAGS) -MT MMDP_QLearner-MMDP_QLearner.obj -MD -MP -MF $(DEPDIR)/MMDP_QLearner-MMDP_QLearner.Tpo -c -o MMDP_QLearner-MMDP_QLearner.obj `if test -f 'MMDP_QLearner.cpp'; then $(CYGPATH_W) 'MMDP_QLearner.cpp'; else $(CYGPATH_W) '$(srcdir)/MMDP_QLearner.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/MMDP_QLearner-MMDP_QLearner.Tpo $(DEPDIR)/MMDP_QLearner-MMDP_QLearner.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='MMDP_QLearner.cpp' object='MMDP_QLearner-MMDP_QLearner.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MMDP_QLearner_CPPFLAGS) $(CPPFLAGS) $(MMDP_QLearner_CXXFLAGS) $(CXXFLAGS) -c -o MMDP_QLearner-MMDP_QLearner.obj `if test -f 'MMDP_QLearner.cpp'; then $(CYGPATH_W) 'MMDP_QLearner.cpp'; else $(CYGPATH_W) '$(srcdir)/MMDP_QLearner.cpp'; fi`

MMDP_Solver-MMDP_Solver.o: MMDP_Solver.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MMDP_Solver_CPPFLAGS) $(CPPFLAGS) $(MMDP_Solver_CXXFLAGS) $(CXXFLAGS) -MT MMDP_Solver-MMDP_Solver.o -MD -MP -MF $(DEPDIR)/MMDP_Solver-MMDP_Solver.Tpo -c -o MMDP_Solver-MMDP_Solver.o `test -f 'MMDP_Solver.cpp' || echo '$(srcdir)/'`MMDP_Solver.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/MMDP_Solver-MMDP_Solver.Tpo $(DEPDIR)/MMDP_Solver-MMDP_Solver.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='MMDP_Solver.cpp' object='MMDP_Solver-MMDP_Solver.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MMDP_Solver_CPPFLAGS) $(CPPFLAGS) $(MMDP_Solver_CXXFLAGS) $(CXXFLAGS) -c -o MMDP_Solver-MMDP_Solver.o `test -f 'MMDP_Solver.cpp' || echo '$(srcdir)/'`MMDP_Solver.cpp

MMDP_Solver-MMDP_Solver.obj: MMDP_Solver.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MMDP_Solver_CPPFLAGS) $(CPPFLAGS) $(MMDP_Solver_CXXFLAGS) $(CXXFLAGS) -MT MMDP_Solver-MMDP_Solver.obj -MD -MP -MF $(DEPDIR)/MMDP_Solver-MMDP_Solver.Tpo -c -o MMDP_Solver-MMDP_Solver.obj `if test -f 'MMDP_Solver.cpp'; then $(CYGPATH_W) 'MMDP_Solver.cpp'; else $(CYGPATH_W) '$(srcdir)/MMDP_Solver.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/MMDP_Solver-MMDP_Solver.Tpo $(DEPDIR)/MMDP_Solver-MMDP_Solver.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='MMDP_Solver.cpp' object='MMDP_Solver-MMDP_Solver.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MMDP_Solver_CPPFLAGS) $(CPPFLAGS) $(MMDP_Solver_CXXFLAGS) $(CXXFLAGS) -c -o MMDP_Solver-MMDP_Solver.obj `if test -f 'MMDP_Solver.cpp'; then $(CYGPATH_W) 'MMDP_Solver.cpp'; else $(CYGPATH_W) '$(srcdir)/MMDP_Solver.cpp'; fi`

Perseus-Perseus.o: Perseus.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(Perseus_CPPFLAGS) $(CPPFLAGS) $(Perseus_CXXFLAGS) $(CXXFLAGS) -MT Perseus-Perseus.o -MD -MP -MF $(DEPDIR)/Perseus-Perseus.Tpo -c -o Perseus-Perseus.o `test -f 'Perseus.cpp' || echo '$(srcdir)/'`Perseus.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/Perseus-Perseus.Tpo $(DEPDIR)/Perseus-Perseus.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Perseus.cpp' object='Perseus-Perseus.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(Perseus_CPPFLAGS) $(CPPFLAGS) $(Perseus_CXXFLAGS) $(CXXFLAGS) -c -o Perseus-Perseus.o `test -f 'Perseus.cpp' || echo '$(srcdir)/'`Perseus.cpp

Perseus-Perseus.obj: Perseus.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(Perseus_CPPFLAGS) $(CPPFLAGS) $(Perseus_CXXFLAGS) $(CXXFLAGS) -MT Perseus-Perseus.obj -MD -MP -MF $(DEPDIR)/Perseus-Perseus.Tpo -c -o Perseus-Perseus.obj `if test -f 'Perseus.cpp'; then $(CYGPATH_W) 'Perseus.cpp'; else $(CYGPATH_W) '$(srcdir)/Perseus.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/Perseus-Perseus.Tpo $(DEPDIR)/Perseus-Perseus.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Perseus.cpp' object='Perseus-Perseus.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(Perseus_CPPFLAGS) $(CPPFLAGS) $(Perseus_CXXFLAGS) $(CXXFLAGS) -c -o Perseus-Perseus.obj `if test -f 'Perseus.cpp'; then $(CYGPATH_W) 'Perseus.cpp'; else $(CYGPATH_W) '$(srcdir)/Perseus.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-exec-local

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstPROGRAMS cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-exec-local install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS


cleantags: cleantags-recursive

cleantags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) cleantags) || exit 1; \
	done; \
	rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags; \
	rm -f cscope.out cscope.in.out cscope.po.out cscope.files

# the GMAA-ICE script should be installed as well
install-exec-local:
	$(INSTALL_PROGRAM) ./GMAA-ICE $(DESTDIR)$(bindir)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
