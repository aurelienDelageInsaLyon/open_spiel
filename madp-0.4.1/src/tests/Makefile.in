# Makefile.in generated by automake 1.14.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# $Id$

# Contains several project-wide Makefile options



VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
DIST_COMMON = $(srcdir)/../Makefile.custom \
	$(top_srcdir)/config/Make-rules $(srcdir)/Makefile.in \
	$(srcdir)/Makefile.am $(dist_check_SCRIPTS) \
	$(top_srcdir)/depcomp $(top_srcdir)/test-driver
check_PROGRAMS = tst_jpol_index$(EXEEXT) tst_OptimalValue$(EXEEXT) \
	tst_jpol_index$(EXEEXT)
noinst_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_2)
bin_PROGRAMS =
subdir = src/tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ac_cplex.m4 \
	$(top_srcdir)/m4/cuda.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(libdir)" \
	"$(DESTDIR)$(bindir)"
LIBRARIES = $(lib_LIBRARIES)
LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)
am__EXEEXT_1 = tst_parse$(EXEEXT) tst_np$(EXEEXT) \
	tst_bgipsolving$(EXEEXT) tst_GMAA_MAAstar$(EXEEXT) \
	tst_GMAA_MAAstarCluster$(EXEEXT) tst_GMAA_MAA_ELSI$(EXEEXT) \
	tst_ProblemFireFightingGraph$(EXEEXT) \
	tst_BGIP_Solvers$(EXEEXT) tst_BGIP_IncrementalSolvers$(EXEEXT) \
	tst_jpol_index$(EXEEXT) tst_CGBG_FF$(EXEEXT) \
	tst_OptimalValue$(EXEEXT) tst_pomdp$(EXEEXT) tst_sim$(EXEEXT)
am__EXEEXT_2 =
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am__objects_1 =
am_tst_BGIP_IncrementalSolvers_OBJECTS = tst_BGIP_IncrementalSolvers-test_BGIP_IncrementalSolvers.$(OBJEXT) \
	$(am__objects_1)
tst_BGIP_IncrementalSolvers_OBJECTS =  \
	$(am_tst_BGIP_IncrementalSolvers_OBJECTS)
am__DEPENDENCIES_1 =
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
tst_BGIP_IncrementalSolvers_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(tst_BGIP_IncrementalSolvers_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_tst_BGIP_Solvers_OBJECTS =  \
	tst_BGIP_Solvers-test_BGIP_Solvers.$(OBJEXT) $(am__objects_1)
tst_BGIP_Solvers_OBJECTS = $(am_tst_BGIP_Solvers_OBJECTS)
tst_BGIP_Solvers_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(tst_BGIP_Solvers_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_tst_CGBG_FF_OBJECTS = tst_CGBG_FF-test_CGBG_FF.$(OBJEXT) \
	$(am__objects_1)
tst_CGBG_FF_OBJECTS = $(am_tst_CGBG_FF_OBJECTS)
tst_CGBG_FF_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(tst_CGBG_FF_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_tst_GMAA_MAA_ELSI_OBJECTS =  \
	tst_GMAA_MAA_ELSI-test_GMAA_MAA_ELSI.$(OBJEXT) \
	$(am__objects_1)
tst_GMAA_MAA_ELSI_OBJECTS = $(am_tst_GMAA_MAA_ELSI_OBJECTS)
tst_GMAA_MAA_ELSI_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(tst_GMAA_MAA_ELSI_CXXFLAGS) $(CXXFLAGS) \
	$(tst_GMAA_MAA_ELSI_LDFLAGS) $(LDFLAGS) -o $@
am_tst_GMAA_MAAstar_OBJECTS =  \
	tst_GMAA_MAAstar-test_GMAA_MAAstar.$(OBJEXT) $(am__objects_1)
tst_GMAA_MAAstar_OBJECTS = $(am_tst_GMAA_MAAstar_OBJECTS)
tst_GMAA_MAAstar_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(tst_GMAA_MAAstar_CXXFLAGS) $(CXXFLAGS) \
	$(tst_GMAA_MAAstar_LDFLAGS) $(LDFLAGS) -o $@
am_tst_GMAA_MAAstarCluster_OBJECTS =  \
	tst_GMAA_MAAstarCluster-test_GMAA_MAAstarCluster.$(OBJEXT) \
	$(am__objects_1)
tst_GMAA_MAAstarCluster_OBJECTS =  \
	$(am_tst_GMAA_MAAstarCluster_OBJECTS)
tst_GMAA_MAAstarCluster_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(tst_GMAA_MAAstarCluster_CXXFLAGS) $(CXXFLAGS) \
	$(tst_GMAA_MAAstarCluster_LDFLAGS) $(LDFLAGS) -o $@
am_tst_OptimalValue_OBJECTS =  \
	tst_OptimalValue-test_OptimalValue.$(OBJEXT) $(am__objects_1)
tst_OptimalValue_OBJECTS = $(am_tst_OptimalValue_OBJECTS)
tst_OptimalValue_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(tst_OptimalValue_CXXFLAGS) $(CXXFLAGS) \
	$(tst_OptimalValue_LDFLAGS) $(LDFLAGS) -o $@
am_tst_ProblemFireFightingGraph_OBJECTS = tst_ProblemFireFightingGraph-test_ProblemFireFightingGraph.$(OBJEXT)
tst_ProblemFireFightingGraph_OBJECTS =  \
	$(am_tst_ProblemFireFightingGraph_OBJECTS)
tst_ProblemFireFightingGraph_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(tst_ProblemFireFightingGraph_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_tst_bgipsolving_OBJECTS =  \
	tst_bgipsolving-test_bgipsolving.$(OBJEXT) $(am__objects_1)
tst_bgipsolving_OBJECTS = $(am_tst_bgipsolving_OBJECTS)
tst_bgipsolving_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(tst_bgipsolving_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_tst_jpol_index_OBJECTS = tst_jpol_index-test_jpol_index.$(OBJEXT) \
	$(am__objects_1)
tst_jpol_index_OBJECTS = $(am_tst_jpol_index_OBJECTS)
tst_jpol_index_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(tst_jpol_index_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_tst_np_OBJECTS = tst_np-test_no_parse.$(OBJEXT) $(am__objects_1)
tst_np_OBJECTS = $(am_tst_np_OBJECTS)
tst_np_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(tst_np_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_tst_parse_OBJECTS = tst_parse-test_parse.$(OBJEXT) $(am__objects_1)
tst_parse_OBJECTS = $(am_tst_parse_OBJECTS)
tst_parse_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(tst_parse_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_tst_pomdp_OBJECTS = tst_pomdp-test_pomdp.$(OBJEXT) $(am__objects_1)
tst_pomdp_OBJECTS = $(am_tst_pomdp_OBJECTS)
tst_pomdp_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(tst_pomdp_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_tst_sim_OBJECTS = tst_sim-test_simulation.$(OBJEXT) \
	$(am__objects_1)
tst_sim_OBJECTS = $(am_tst_sim_OBJECTS)
tst_sim_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(tst_sim_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(tst_BGIP_IncrementalSolvers_SOURCES) \
	$(tst_BGIP_Solvers_SOURCES) $(tst_CGBG_FF_SOURCES) \
	$(tst_GMAA_MAA_ELSI_SOURCES) $(tst_GMAA_MAAstar_SOURCES) \
	$(tst_GMAA_MAAstarCluster_SOURCES) $(tst_OptimalValue_SOURCES) \
	$(tst_ProblemFireFightingGraph_SOURCES) \
	$(tst_bgipsolving_SOURCES) $(tst_jpol_index_SOURCES) \
	$(tst_np_SOURCES) $(tst_parse_SOURCES) $(tst_pomdp_SOURCES) \
	$(tst_sim_SOURCES)
DIST_SOURCES = $(tst_BGIP_IncrementalSolvers_SOURCES) \
	$(tst_BGIP_Solvers_SOURCES) $(tst_CGBG_FF_SOURCES) \
	$(tst_GMAA_MAA_ELSI_SOURCES) $(tst_GMAA_MAAstar_SOURCES) \
	$(tst_GMAA_MAAstarCluster_SOURCES) $(tst_OptimalValue_SOURCES) \
	$(tst_ProblemFireFightingGraph_SOURCES) \
	$(tst_bgipsolving_SOURCES) $(tst_jpol_index_SOURCES) \
	$(tst_np_SOURCES) $(tst_parse_SOURCES) $(tst_pomdp_SOURCES) \
	$(tst_sim_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	check recheck distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPLEX_INCLUDES = @CPLEX_INCLUDES@
CPLEX_LDFLAGS = @CPLEX_LDFLAGS@
CPLEX_LIBS = @CPLEX_LIBS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CSTANDARD = @CSTANDARD@
CSTD = @CSTD@
CSTD11 = @CSTD11@
CSTDGNU = @CSTDGNU@
CSTDGNU11 = @CSTDGNU11@
CUDA_CPPFLAGS = @CUDA_CPPFLAGS@
CUDA_LDFLAGS = @CUDA_LDFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
POW_LIB = @POW_LIB@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

# Lists all the subdirs where 'make' has to look
# When changing the subdirs, also change AC_CONFIG_FILES in configure.in
SUBDIRS = 

#####################################################################
# Optional software packages to be used, check configuration.h to
# enable them

# For using arbitrary length integers
# Should be set if USE_ARBITRARY_PRECISION_INDEX is set to 1
#GMP_LD=-lgmpxx -lgmp
LIBDAI_NORMAL = $(top_builddir)/src/libDAI/libDAI.la
LIBDAI_INCLUDES = -I$(top_srcdir)/src/libDAI

# The following is necessary for calling Matlab from the C++ code
# Just set the correct MATLAB_DIR and uncomment all three lines
#MATLAB_DIR = /scratch/matlabR2008a
#MATLAB_INCLUDES = -I$(MATLAB_DIR)/extern/include/
#MATLAB_LD = -L$(MATLAB_DIR)/bin/glnxa64/ \
# -lmat -leng -lmx -lut

# the open PNL library
#PNL_LD = #define PNL library path 
#PNL_INCLUDES = #define the PNL includes.
#typically something like
#PNL_LD = -L/home/faolieho/Documents/software/PNL/high/source -L/home/faolieho/Documents/software/PNL/cxcore/cxcore/src -L/home/faolieho/Documents/software/PNL/c_pgmtk/src -lhigh -lpnl -lcxcore -lpthread
#and
#PNL_INCLUDES = -I$(HOME)/include/pnl -I$(HOME)/include/pnl/high -I$(HOME)/include/pnl/opencx  -I$(HOME)/include/pnl/cart
#
#NOTE: in order to build DEBUG libraries (i.e., include the debug version of 
# the PNL lib), the PNL_LD path should point to where the PNL library is built,
# rather than installed. For some reason things are not working smoothly when 
# pointing to the installation libdir (something to do with libtool I think).

#####################################################################
# Compiler flags

# the debug flags used - according to 
# http://sourceware.org/gdb/current/onlinedocs/gdb_13.html#SEC111
# dwarf-2 is best for c++ and gdb
# -fno-inline should make things easier to debug
DEBUG_FLAGS = -O0 -gdwarf-2 -fno-inline

# Optimization flags used for building normal and profiling libraries.
# -DNDEBUG speeds up the boost::numeric::ublas operations
CPP_OPTIMIZATION_FLAGS = -O3 -DNDEBUG

#machine architectecture specific flags
#XXX: the following does not work on MacOS! (leave empty to resolve)
# Matthijs: is it not just a problem with using a GCC version that is
# too old to support this?
MARCH_FLAGS = -march=native  # automatically picks the correct settings for your system
@FOUND_LIBXML2_TRUE@XML2_CXXFLAGS = `xml2-config --cflags`

#default flags throughout all MADP:
MADP_CXXFLAGS = -pipe $(MARCH_FLAGS) $(CSTANDARD) $(XML2_CXXFLAGS)
MADP_CPPFLAGS = 
MADP_CFLAGS = 

#####################################################################
# The final include path
# fao 2014-02-01: added $(INCLUDE) such that we can all add include paths, for e.g., cplex.
MADP_INCLUDES = \
 $(INCLUDE) \
 $(LIBDAI_INCLUDES)\
 -I$(top_srcdir)/src/boost

MADP_LD = 

#####################################################################
# Lists of libs to be linked with binaries.
# Note that the linking order matters, in order to correctly resolve symbols
MADPLIBS_NORMAL_BASE = \
 $(top_builddir)/src/base/libMADPBase.la

MADPLIBS_NORMAL_BASE_SUPPORT = \
 $(top_builddir)/src/support/libMADPSupport.la \
 $(MADPLIBS_NORMAL_BASE) 

MADPLIBS_NORMAL_BASE_PARSER = \
 $(top_builddir)/src/parser/libMADPParser.la \
 $(MADPLIBS_NORMAL_BASE) \
 $(LIBPOMDPSOLVE_NORMAL) $(LIBLPSOLVEOLD_NORMAL) $(LIBMDP_NORMAL) $(LIBLASPACK_NORMAL)

MADPLIBS_NORMAL_BASE_PARSER_SUPPORT = \
 $(top_builddir)/src/support/libMADPSupport.la \
 $(MADPLIBS_NORMAL_BASE_PARSER) 

MADPLIBS_NORMAL = $(top_builddir)/src/madp/libMADP.la
# $(top_builddir)/src/planning/libMADPPlanning.la \
# $(MADPLIBS_NORMAL_BASE_PARSER_SUPPORT) \
# $(LIBDAI_NORMAL)
MADPLIBS_NORMAL_NOPARSER_NOPLANNING = $(MADPLIBS_NORMAL_BASE)
MADPLIBS_NORMAL_NOPLANNING = $(MADPLIBS_NORMAL_BASE_PARSER_SUPPORT)
MADPLIBS_NORMAL_NOPARSER = $(MADPLIBS_NORMAL)

# Which programs to build.
PROGRAMS_NORMAL = \
 tst_parse\
 tst_np\
 tst_bgipsolving\
 tst_GMAA_MAAstar\
 tst_GMAA_MAAstarCluster\
 tst_GMAA_MAA_ELSI\
 tst_ProblemFireFightingGraph\
 tst_BGIP_Solvers\
 tst_BGIP_IncrementalSolvers\
 tst_jpol_index\
 tst_CGBG_FF\
 tst_OptimalValue\
 tst_pomdp\
 tst_sim

dist_check_SCRIPTS = \
 runGMAA-GMAAstarClassic-QQMDP_DecTiger.sh\
 runGMAA-GMAAstar-BBFS-QQPOMDP-Aloha.sh\
 runGMAA-IC-GMAAstarClassic-GBnB-QQBG-FFG.sh\
 runGMAA-IC-GMAAstar-BBnb-QQMDPc-FFF.sh\
 runGMAA_ICE-GMAAstar-BBFS-QQPOMDPhybrid-GridSmall.sh\
 runGMAA-ICE-GMAAstar-BBnB-QQBGav-2generals.sh\
 runGMAA-GMAAstarClassic-QQBG-dectiger_skewed.sh\
 runGMAA-GMAAstarClassic-QQBGhybrid-recycling.sh\
 runGMAA-GMAAstarClassic-QQBGTreeIncPrune-relay4.sh\
 runGMAA-IC-GMAAstar-QQBGTreeIncPrune-dectiger.sh\
 runGMAA-IC-GMAAstar-QQBGav-prisoners.sh\
 runGMAA-GMAAstar-BBFS-QQMDPc-broadcastChannel.sh\
 runGMAA-ELSI-QQBG-FFG.sh\
 runGMAA-ICE-GMAAstar-DTPGMX.sh\
 runGMAA-ICE-GMAAstar-FFG343.sh\
 runGMAA-GFSPC-BMP-ALoha.sh\
 runPerseus-b0-DT.sh\
 runPerseus-b1-DT.sh\
 runDICEPS-twoCorridors.sh\
 runMMDP_QLearner_DT.sh\
 runBFS-DT.sh\
 tst_parse.sh\
 tst_np.sh\
 tst_BGIP_Solvers.sh

TESTS = $(check_PROGRAMS) $(dist_check_SCRIPTS)
EXTRA_DIST = logs optimalValueDatabase $(dist_check_SCRIPTS) # add to distribution for test purposes
PROGRAMS_DEBUG = 
PROGRAMS_PROFILE = 

##############
# Includedirs, libdirs, libs and cflags for all programs 
INCLUDEPATH = -I..\
 -I$(top_srcdir)/src/base -I$(top_srcdir)/src/include\
 -I$(top_srcdir)/src/support -I$(top_srcdir)/src/planning\
 -I$(top_srcdir)/src/parser \
 $(MADP_INCLUDES)

AM_LDFLAGS = 
LDADD = 
AM_CPPFLAGS = -pipe $(MARCH_FLAGS) $(INCLUDEPATH)
additional_test_sources = 

# Build tst
tst_parse_SOURCES = test_parse.cpp $(additional_test_sources) test_common_functions.h
tst_parse_LDADD = $(MADPLIBS_NORMAL) $(MADP_LD)
tst_parse_DEPENDENCIES = $(MADPLIBS_NORMAL)
tst_parse_CPPFLAGS = $(AM_CPPFLAGS) $(CPP_OPTIMIZATION_FLAGS) 
tst_parse_CXXFLAGS = $(CSTANDARD)
tst_parse_CFLAGS = 
tst_BGIP_Solvers_SOURCES = test_BGIP_Solvers.cpp $(additional_test_sources)
tst_BGIP_Solvers_LDADD = $(MADPLIBS_NORMAL) $(MADP_LD)
tst_BGIP_Solvers_DEPENDENCIES = $(MADPLIBS_NORMAL)
tst_BGIP_Solvers_CPPFLAGS = $(AM_CPPFLAGS) $(CPP_OPTIMIZATION_FLAGS)
tst_BGIP_Solvers_CXXFLAGS = $(CSTANDARD)
tst_BGIP_Solvers_CFLAGS = 
tst_CGBG_FF_SOURCES = test_CGBG_FF.cpp $(additional_test_sources)
tst_CGBG_FF_LDADD = $(MADPLIBS_NORMAL) $(MADP_LD)
tst_CGBG_FF_DEPENDENCIES = $(MADPLIBS_NORMAL)
tst_CGBG_FF_CPPFLAGS = $(AM_CPPFLAGS) $(CPP_OPTIMIZATION_FLAGS)
tst_CGBG_FF_CXXFLAGS = $(CSTANDARD)
tst_CGBG_FF_CFLAGS = 

# Create tst without the parsing
tst_np_SOURCES = test_no_parse.cpp $(additional_test_sources) test_common_functions.h
tst_np_LDADD = $(MADPLIBS_NORMAL_NOPARSER) $(MADP_LD)
tst_np_DEPENDENCIES = $(MADPLIBS_NORMAL_NOPARSER)
tst_np_CPPFLAGS = $(AM_CPPFLAGS) $(CPP_OPTIMIZATION_FLAGS)
tst_np_CXXFLAGS = $(CSTANDARD)
tst_np_CFLAGS = 

# Build tst_sim
tst_sim_SOURCES = test_simulation.cpp $(additional_test_sources)
tst_sim_LDADD = $(MADPLIBS_NORMAL) $(MADP_LD)
tst_sim_DEPENDENCIES = $(MADPLIBS_NORMAL)
tst_sim_CPPFLAGS = $(AM_CPPFLAGS) $(CPP_OPTIMIZATION_FLAGS)
tst_sim_CXXFLAGS = $(CSTANDARD)
tst_sim_CFLAGS = 

# Build tst_pomdp
tst_pomdp_SOURCES = test_pomdp.cpp $(additional_test_sources)
tst_pomdp_LDADD = $(MADPLIBS_NORMAL) $(MADP_LD)
tst_pomdp_DEPENDENCIES = $(MADPLIBS_NORMAL)
tst_pomdp_CPPFLAGS = $(AM_CPPFLAGS) $(CPP_OPTIMIZATION_FLAGS)
tst_pomdp_CXXFLAGS = $(CSTANDARD)
tst_pomdp_CFLAGS = 

# tst_GMAA_MAAstarCluster
tst_GMAA_MAAstarCluster_SOURCES = test_GMAA_MAAstarCluster.cpp $(additional_test_sources)
tst_GMAA_MAAstarCluster_LDADD = $(MADPLIBS_NORMAL) $(MADP_LD)
tst_GMAA_MAAstarCluster_LDFLAGS = $(AM_LDFLAGS)
tst_GMAA_MAAstarCluster_DEPENDENCIES = $(MADPLIBS_NORMAL)
tst_GMAA_MAAstarCluster_CPPFLAGS = $(AM_CPPFLAGS) -O0 
tst_GMAA_MAAstarCluster_CXXFLAGS = $(CSTANDARD)
tst_GMAA_MAAstarCluster_CFLAGS = 

# tst_GMAA_MAAstar
tst_GMAA_MAAstar_SOURCES = test_GMAA_MAAstar.cpp $(additional_test_sources)
tst_GMAA_MAAstar_LDADD = $(MADPLIBS_NORMAL) $(MADP_LD)
tst_GMAA_MAAstar_LDFLAGS = $(AM_LDFLAGS)
tst_GMAA_MAAstar_DEPENDENCIES = $(MADPLIBS_NORMAL)
tst_GMAA_MAAstar_CPPFLAGS = $(AM_CPPFLAGS) -O0
tst_GMAA_MAAstar_CXXFLAGS = $(CSTANDARD)
tst_GMAA_MAAstar_CFLAGS = 

# tst_OptimalValue
tst_OptimalValue_SOURCES = test_OptimalValue.cpp $(additional_test_sources)
tst_OptimalValue_LDADD = $(MADPLIBS_NORMAL) $(MADP_LD)
tst_OptimalValue_LDFLAGS = $(AM_LDFLAGS)
tst_OptimalValue_DEPENDENCIES = $(MADPLIBS_NORMAL)
tst_OptimalValue_CPPFLAGS = $(AM_CPPFLAGS) -O0
tst_OptimalValue_CXXFLAGS = $(CSTANDARD)
tst_OptimalValue_CFLAGS = 

# tst_GMAA_MAA_ELSI
tst_GMAA_MAA_ELSI_SOURCES = test_GMAA_MAA_ELSI.cpp $(additional_test_sources)
tst_GMAA_MAA_ELSI_LDADD = $(MADPLIBS_NORMAL) $(MADP_LD)
tst_GMAA_MAA_ELSI_LDFLAGS = $(AM_LDFLAGS) 
tst_GMAA_MAA_ELSI_DEPENDENCIES = $(MADPLIBS_NORMAL)
tst_GMAA_MAA_ELSI_CPPFLAGS = $(AM_CPPFLAGS) $(CPP_OPTIMIZATION_FLAGS)
tst_GMAA_MAA_ELSI_CXXFLAGS = $(CSTANDARD)
tst_GMAA_MAA_ELSI_CFLAGS = 

# test program for bgip solving
tst_bgipsolving_SOURCES = test_bgipsolving.cpp $(additional_test_sources)
tst_bgipsolving_LDADD = $(MADPLIBS_NORMAL) $(MADP_LD)
tst_bgipsolving_DEPENDENCIES = $(MADPLIBS_NORMAL)
tst_bgipsolving_CPPFLAGS = $(AM_CPPFLAGS) $(CPP_OPTIMIZATION_FLAGS)
tst_bgipsolving_CXXFLAGS = $(CSTANDARD)
tst_bgipsolving_CFLAGS = 

# test program for ProblemFireFightingGraph
tst_ProblemFireFightingGraph_SOURCES = test_ProblemFireFightingGraph.cpp
tst_ProblemFireFightingGraph_LDADD = $(MADPLIBS_NORMAL) $(MADP_LD)
tst_ProblemFireFightingGraph_DEPENDENCIES = $(MADPLIBS_NORMAL)
tst_ProblemFireFightingGraph_CPPFLAGS = $(AM_CPPFLAGS) $(CPP_OPTIMIZATION_FLAGS)
tst_ProblemFireFightingGraph_CXXFLAGS = $(CSTANDARD)
tst_ProblemFireFightingGraph_CFLAGS = 
tst_BGIP_IncrementalSolvers_SOURCES = test_BGIP_IncrementalSolvers.cpp $(additional_test_sources)
tst_BGIP_IncrementalSolvers_LDADD = $(MADPLIBS_NORMAL) $(MADP_LD)
tst_BGIP_IncrementalSolvers_DEPENDENCIES = $(MADPLIBS_NORMAL)
tst_BGIP_IncrementalSolvers_CPPFLAGS = $(AM_CPPFLAGS) $(CPP_OPTIMIZATION_FLAGS)
tst_BGIP_IncrementalSolvers_CXXFLAGS = $(CSTANDARD)
tst_BGIP_IncrementalSolvers_CFLAGS = 
tst_jpol_index_SOURCES = test_jpol_index.cpp $(additional_test_sources)
tst_jpol_index_LDADD = $(MADPLIBS_NORMAL) $(MADP_LD)
tst_jpol_index_DEPENDENCIES = $(MADPLIBS_NORMAL)
tst_jpol_index_CPPFLAGS = $(AM_CPPFLAGS) $(CPP_OPTIMIZATION_FLAGS)
tst_jpol_index_CXXFLAGS = $(CSTANDARD)
tst_jpol_index_CFLAGS = 

###############
# All DYNAMIC libraries
# the LTLIBRARIES (LibTool-libraries)

# the library to be build...
lib_LTLIBRARIES = 
noinst_LTLIBRARIES = 

# sources for the library:
###############
# All STATIC libraries
lib_LIBRARIES = 
all: all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/../Makefile.custom $(top_srcdir)/config/Make-rules $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(srcdir)/../Makefile.custom $(top_srcdir)/config/Make-rules:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(INSTALL_DATA) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(INSTALL_DATA) $$list2 "$(DESTDIR)$(libdir)" || exit $$?; }
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  if test -f $$p; then \
	    $(am__strip_dir) \
	    echo " ( cd '$(DESTDIR)$(libdir)' && $(RANLIB) $$f )"; \
	    ( cd "$(DESTDIR)$(libdir)" && $(RANLIB) $$f ) || exit $$?; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libdir)'; $(am__uninstall_files_from_dir)

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

tst_BGIP_IncrementalSolvers$(EXEEXT): $(tst_BGIP_IncrementalSolvers_OBJECTS) $(tst_BGIP_IncrementalSolvers_DEPENDENCIES) $(EXTRA_tst_BGIP_IncrementalSolvers_DEPENDENCIES) 
	@rm -f tst_BGIP_IncrementalSolvers$(EXEEXT)
	$(AM_V_CXXLD)$(tst_BGIP_IncrementalSolvers_LINK) $(tst_BGIP_IncrementalSolvers_OBJECTS) $(tst_BGIP_IncrementalSolvers_LDADD) $(LIBS)

tst_BGIP_Solvers$(EXEEXT): $(tst_BGIP_Solvers_OBJECTS) $(tst_BGIP_Solvers_DEPENDENCIES) $(EXTRA_tst_BGIP_Solvers_DEPENDENCIES) 
	@rm -f tst_BGIP_Solvers$(EXEEXT)
	$(AM_V_CXXLD)$(tst_BGIP_Solvers_LINK) $(tst_BGIP_Solvers_OBJECTS) $(tst_BGIP_Solvers_LDADD) $(LIBS)

tst_CGBG_FF$(EXEEXT): $(tst_CGBG_FF_OBJECTS) $(tst_CGBG_FF_DEPENDENCIES) $(EXTRA_tst_CGBG_FF_DEPENDENCIES) 
	@rm -f tst_CGBG_FF$(EXEEXT)
	$(AM_V_CXXLD)$(tst_CGBG_FF_LINK) $(tst_CGBG_FF_OBJECTS) $(tst_CGBG_FF_LDADD) $(LIBS)

tst_GMAA_MAA_ELSI$(EXEEXT): $(tst_GMAA_MAA_ELSI_OBJECTS) $(tst_GMAA_MAA_ELSI_DEPENDENCIES) $(EXTRA_tst_GMAA_MAA_ELSI_DEPENDENCIES) 
	@rm -f tst_GMAA_MAA_ELSI$(EXEEXT)
	$(AM_V_CXXLD)$(tst_GMAA_MAA_ELSI_LINK) $(tst_GMAA_MAA_ELSI_OBJECTS) $(tst_GMAA_MAA_ELSI_LDADD) $(LIBS)

tst_GMAA_MAAstar$(EXEEXT): $(tst_GMAA_MAAstar_OBJECTS) $(tst_GMAA_MAAstar_DEPENDENCIES) $(EXTRA_tst_GMAA_MAAstar_DEPENDENCIES) 
	@rm -f tst_GMAA_MAAstar$(EXEEXT)
	$(AM_V_CXXLD)$(tst_GMAA_MAAstar_LINK) $(tst_GMAA_MAAstar_OBJECTS) $(tst_GMAA_MAAstar_LDADD) $(LIBS)

tst_GMAA_MAAstarCluster$(EXEEXT): $(tst_GMAA_MAAstarCluster_OBJECTS) $(tst_GMAA_MAAstarCluster_DEPENDENCIES) $(EXTRA_tst_GMAA_MAAstarCluster_DEPENDENCIES) 
	@rm -f tst_GMAA_MAAstarCluster$(EXEEXT)
	$(AM_V_CXXLD)$(tst_GMAA_MAAstarCluster_LINK) $(tst_GMAA_MAAstarCluster_OBJECTS) $(tst_GMAA_MAAstarCluster_LDADD) $(LIBS)

tst_OptimalValue$(EXEEXT): $(tst_OptimalValue_OBJECTS) $(tst_OptimalValue_DEPENDENCIES) $(EXTRA_tst_OptimalValue_DEPENDENCIES) 
	@rm -f tst_OptimalValue$(EXEEXT)
	$(AM_V_CXXLD)$(tst_OptimalValue_LINK) $(tst_OptimalValue_OBJECTS) $(tst_OptimalValue_LDADD) $(LIBS)

tst_ProblemFireFightingGraph$(EXEEXT): $(tst_ProblemFireFightingGraph_OBJECTS) $(tst_ProblemFireFightingGraph_DEPENDENCIES) $(EXTRA_tst_ProblemFireFightingGraph_DEPENDENCIES) 
	@rm -f tst_ProblemFireFightingGraph$(EXEEXT)
	$(AM_V_CXXLD)$(tst_ProblemFireFightingGraph_LINK) $(tst_ProblemFireFightingGraph_OBJECTS) $(tst_ProblemFireFightingGraph_LDADD) $(LIBS)

tst_bgipsolving$(EXEEXT): $(tst_bgipsolving_OBJECTS) $(tst_bgipsolving_DEPENDENCIES) $(EXTRA_tst_bgipsolving_DEPENDENCIES) 
	@rm -f tst_bgipsolving$(EXEEXT)
	$(AM_V_CXXLD)$(tst_bgipsolving_LINK) $(tst_bgipsolving_OBJECTS) $(tst_bgipsolving_LDADD) $(LIBS)

tst_jpol_index$(EXEEXT): $(tst_jpol_index_OBJECTS) $(tst_jpol_index_DEPENDENCIES) $(EXTRA_tst_jpol_index_DEPENDENCIES) 
	@rm -f tst_jpol_index$(EXEEXT)
	$(AM_V_CXXLD)$(tst_jpol_index_LINK) $(tst_jpol_index_OBJECTS) $(tst_jpol_index_LDADD) $(LIBS)

tst_np$(EXEEXT): $(tst_np_OBJECTS) $(tst_np_DEPENDENCIES) $(EXTRA_tst_np_DEPENDENCIES) 
	@rm -f tst_np$(EXEEXT)
	$(AM_V_CXXLD)$(tst_np_LINK) $(tst_np_OBJECTS) $(tst_np_LDADD) $(LIBS)

tst_parse$(EXEEXT): $(tst_parse_OBJECTS) $(tst_parse_DEPENDENCIES) $(EXTRA_tst_parse_DEPENDENCIES) 
	@rm -f tst_parse$(EXEEXT)
	$(AM_V_CXXLD)$(tst_parse_LINK) $(tst_parse_OBJECTS) $(tst_parse_LDADD) $(LIBS)

tst_pomdp$(EXEEXT): $(tst_pomdp_OBJECTS) $(tst_pomdp_DEPENDENCIES) $(EXTRA_tst_pomdp_DEPENDENCIES) 
	@rm -f tst_pomdp$(EXEEXT)
	$(AM_V_CXXLD)$(tst_pomdp_LINK) $(tst_pomdp_OBJECTS) $(tst_pomdp_LDADD) $(LIBS)

tst_sim$(EXEEXT): $(tst_sim_OBJECTS) $(tst_sim_DEPENDENCIES) $(EXTRA_tst_sim_DEPENDENCIES) 
	@rm -f tst_sim$(EXEEXT)
	$(AM_V_CXXLD)$(tst_sim_LINK) $(tst_sim_OBJECTS) $(tst_sim_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_BGIP_IncrementalSolvers-test_BGIP_IncrementalSolvers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_BGIP_Solvers-test_BGIP_Solvers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_CGBG_FF-test_CGBG_FF.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_GMAA_MAA_ELSI-test_GMAA_MAA_ELSI.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_GMAA_MAAstar-test_GMAA_MAAstar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_GMAA_MAAstarCluster-test_GMAA_MAAstarCluster.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_OptimalValue-test_OptimalValue.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_ProblemFireFightingGraph-test_ProblemFireFightingGraph.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_bgipsolving-test_bgipsolving.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_jpol_index-test_jpol_index.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_np-test_no_parse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_parse-test_parse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_pomdp-test_pomdp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_sim-test_simulation.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

tst_BGIP_IncrementalSolvers-test_BGIP_IncrementalSolvers.o: test_BGIP_IncrementalSolvers.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_BGIP_IncrementalSolvers_CPPFLAGS) $(CPPFLAGS) $(tst_BGIP_IncrementalSolvers_CXXFLAGS) $(CXXFLAGS) -MT tst_BGIP_IncrementalSolvers-test_BGIP_IncrementalSolvers.o -MD -MP -MF $(DEPDIR)/tst_BGIP_IncrementalSolvers-test_BGIP_IncrementalSolvers.Tpo -c -o tst_BGIP_IncrementalSolvers-test_BGIP_IncrementalSolvers.o `test -f 'test_BGIP_IncrementalSolvers.cpp' || echo '$(srcdir)/'`test_BGIP_IncrementalSolvers.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/tst_BGIP_IncrementalSolvers-test_BGIP_IncrementalSolvers.Tpo $(DEPDIR)/tst_BGIP_IncrementalSolvers-test_BGIP_IncrementalSolvers.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_BGIP_IncrementalSolvers.cpp' object='tst_BGIP_IncrementalSolvers-test_BGIP_IncrementalSolvers.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_BGIP_IncrementalSolvers_CPPFLAGS) $(CPPFLAGS) $(tst_BGIP_IncrementalSolvers_CXXFLAGS) $(CXXFLAGS) -c -o tst_BGIP_IncrementalSolvers-test_BGIP_IncrementalSolvers.o `test -f 'test_BGIP_IncrementalSolvers.cpp' || echo '$(srcdir)/'`test_BGIP_IncrementalSolvers.cpp

tst_BGIP_IncrementalSolvers-test_BGIP_IncrementalSolvers.obj: test_BGIP_IncrementalSolvers.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_BGIP_IncrementalSolvers_CPPFLAGS) $(CPPFLAGS) $(tst_BGIP_IncrementalSolvers_CXXFLAGS) $(CXXFLAGS) -MT tst_BGIP_IncrementalSolvers-test_BGIP_IncrementalSolvers.obj -MD -MP -MF $(DEPDIR)/tst_BGIP_IncrementalSolvers-test_BGIP_IncrementalSolvers.Tpo -c -o tst_BGIP_IncrementalSolvers-test_BGIP_IncrementalSolvers.obj `if test -f 'test_BGIP_IncrementalSolvers.cpp'; then $(CYGPATH_W) 'test_BGIP_IncrementalSolvers.cpp'; else $(CYGPATH_W) '$(srcdir)/test_BGIP_IncrementalSolvers.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/tst_BGIP_IncrementalSolvers-test_BGIP_IncrementalSolvers.Tpo $(DEPDIR)/tst_BGIP_IncrementalSolvers-test_BGIP_IncrementalSolvers.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_BGIP_IncrementalSolvers.cpp' object='tst_BGIP_IncrementalSolvers-test_BGIP_IncrementalSolvers.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_BGIP_IncrementalSolvers_CPPFLAGS) $(CPPFLAGS) $(tst_BGIP_IncrementalSolvers_CXXFLAGS) $(CXXFLAGS) -c -o tst_BGIP_IncrementalSolvers-test_BGIP_IncrementalSolvers.obj `if test -f 'test_BGIP_IncrementalSolvers.cpp'; then $(CYGPATH_W) 'test_BGIP_IncrementalSolvers.cpp'; else $(CYGPATH_W) '$(srcdir)/test_BGIP_IncrementalSolvers.cpp'; fi`

tst_BGIP_Solvers-test_BGIP_Solvers.o: test_BGIP_Solvers.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_BGIP_Solvers_CPPFLAGS) $(CPPFLAGS) $(tst_BGIP_Solvers_CXXFLAGS) $(CXXFLAGS) -MT tst_BGIP_Solvers-test_BGIP_Solvers.o -MD -MP -MF $(DEPDIR)/tst_BGIP_Solvers-test_BGIP_Solvers.Tpo -c -o tst_BGIP_Solvers-test_BGIP_Solvers.o `test -f 'test_BGIP_Solvers.cpp' || echo '$(srcdir)/'`test_BGIP_Solvers.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/tst_BGIP_Solvers-test_BGIP_Solvers.Tpo $(DEPDIR)/tst_BGIP_Solvers-test_BGIP_Solvers.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_BGIP_Solvers.cpp' object='tst_BGIP_Solvers-test_BGIP_Solvers.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_BGIP_Solvers_CPPFLAGS) $(CPPFLAGS) $(tst_BGIP_Solvers_CXXFLAGS) $(CXXFLAGS) -c -o tst_BGIP_Solvers-test_BGIP_Solvers.o `test -f 'test_BGIP_Solvers.cpp' || echo '$(srcdir)/'`test_BGIP_Solvers.cpp

tst_BGIP_Solvers-test_BGIP_Solvers.obj: test_BGIP_Solvers.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_BGIP_Solvers_CPPFLAGS) $(CPPFLAGS) $(tst_BGIP_Solvers_CXXFLAGS) $(CXXFLAGS) -MT tst_BGIP_Solvers-test_BGIP_Solvers.obj -MD -MP -MF $(DEPDIR)/tst_BGIP_Solvers-test_BGIP_Solvers.Tpo -c -o tst_BGIP_Solvers-test_BGIP_Solvers.obj `if test -f 'test_BGIP_Solvers.cpp'; then $(CYGPATH_W) 'test_BGIP_Solvers.cpp'; else $(CYGPATH_W) '$(srcdir)/test_BGIP_Solvers.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/tst_BGIP_Solvers-test_BGIP_Solvers.Tpo $(DEPDIR)/tst_BGIP_Solvers-test_BGIP_Solvers.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_BGIP_Solvers.cpp' object='tst_BGIP_Solvers-test_BGIP_Solvers.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_BGIP_Solvers_CPPFLAGS) $(CPPFLAGS) $(tst_BGIP_Solvers_CXXFLAGS) $(CXXFLAGS) -c -o tst_BGIP_Solvers-test_BGIP_Solvers.obj `if test -f 'test_BGIP_Solvers.cpp'; then $(CYGPATH_W) 'test_BGIP_Solvers.cpp'; else $(CYGPATH_W) '$(srcdir)/test_BGIP_Solvers.cpp'; fi`

tst_CGBG_FF-test_CGBG_FF.o: test_CGBG_FF.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_CGBG_FF_CPPFLAGS) $(CPPFLAGS) $(tst_CGBG_FF_CXXFLAGS) $(CXXFLAGS) -MT tst_CGBG_FF-test_CGBG_FF.o -MD -MP -MF $(DEPDIR)/tst_CGBG_FF-test_CGBG_FF.Tpo -c -o tst_CGBG_FF-test_CGBG_FF.o `test -f 'test_CGBG_FF.cpp' || echo '$(srcdir)/'`test_CGBG_FF.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/tst_CGBG_FF-test_CGBG_FF.Tpo $(DEPDIR)/tst_CGBG_FF-test_CGBG_FF.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_CGBG_FF.cpp' object='tst_CGBG_FF-test_CGBG_FF.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_CGBG_FF_CPPFLAGS) $(CPPFLAGS) $(tst_CGBG_FF_CXXFLAGS) $(CXXFLAGS) -c -o tst_CGBG_FF-test_CGBG_FF.o `test -f 'test_CGBG_FF.cpp' || echo '$(srcdir)/'`test_CGBG_FF.cpp

tst_CGBG_FF-test_CGBG_FF.obj: test_CGBG_FF.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_CGBG_FF_CPPFLAGS) $(CPPFLAGS) $(tst_CGBG_FF_CXXFLAGS) $(CXXFLAGS) -MT tst_CGBG_FF-test_CGBG_FF.obj -MD -MP -MF $(DEPDIR)/tst_CGBG_FF-test_CGBG_FF.Tpo -c -o tst_CGBG_FF-test_CGBG_FF.obj `if test -f 'test_CGBG_FF.cpp'; then $(CYGPATH_W) 'test_CGBG_FF.cpp'; else $(CYGPATH_W) '$(srcdir)/test_CGBG_FF.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/tst_CGBG_FF-test_CGBG_FF.Tpo $(DEPDIR)/tst_CGBG_FF-test_CGBG_FF.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_CGBG_FF.cpp' object='tst_CGBG_FF-test_CGBG_FF.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_CGBG_FF_CPPFLAGS) $(CPPFLAGS) $(tst_CGBG_FF_CXXFLAGS) $(CXXFLAGS) -c -o tst_CGBG_FF-test_CGBG_FF.obj `if test -f 'test_CGBG_FF.cpp'; then $(CYGPATH_W) 'test_CGBG_FF.cpp'; else $(CYGPATH_W) '$(srcdir)/test_CGBG_FF.cpp'; fi`

tst_GMAA_MAA_ELSI-test_GMAA_MAA_ELSI.o: test_GMAA_MAA_ELSI.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_GMAA_MAA_ELSI_CPPFLAGS) $(CPPFLAGS) $(tst_GMAA_MAA_ELSI_CXXFLAGS) $(CXXFLAGS) -MT tst_GMAA_MAA_ELSI-test_GMAA_MAA_ELSI.o -MD -MP -MF $(DEPDIR)/tst_GMAA_MAA_ELSI-test_GMAA_MAA_ELSI.Tpo -c -o tst_GMAA_MAA_ELSI-test_GMAA_MAA_ELSI.o `test -f 'test_GMAA_MAA_ELSI.cpp' || echo '$(srcdir)/'`test_GMAA_MAA_ELSI.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/tst_GMAA_MAA_ELSI-test_GMAA_MAA_ELSI.Tpo $(DEPDIR)/tst_GMAA_MAA_ELSI-test_GMAA_MAA_ELSI.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_GMAA_MAA_ELSI.cpp' object='tst_GMAA_MAA_ELSI-test_GMAA_MAA_ELSI.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_GMAA_MAA_ELSI_CPPFLAGS) $(CPPFLAGS) $(tst_GMAA_MAA_ELSI_CXXFLAGS) $(CXXFLAGS) -c -o tst_GMAA_MAA_ELSI-test_GMAA_MAA_ELSI.o `test -f 'test_GMAA_MAA_ELSI.cpp' || echo '$(srcdir)/'`test_GMAA_MAA_ELSI.cpp

tst_GMAA_MAA_ELSI-test_GMAA_MAA_ELSI.obj: test_GMAA_MAA_ELSI.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_GMAA_MAA_ELSI_CPPFLAGS) $(CPPFLAGS) $(tst_GMAA_MAA_ELSI_CXXFLAGS) $(CXXFLAGS) -MT tst_GMAA_MAA_ELSI-test_GMAA_MAA_ELSI.obj -MD -MP -MF $(DEPDIR)/tst_GMAA_MAA_ELSI-test_GMAA_MAA_ELSI.Tpo -c -o tst_GMAA_MAA_ELSI-test_GMAA_MAA_ELSI.obj `if test -f 'test_GMAA_MAA_ELSI.cpp'; then $(CYGPATH_W) 'test_GMAA_MAA_ELSI.cpp'; else $(CYGPATH_W) '$(srcdir)/test_GMAA_MAA_ELSI.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/tst_GMAA_MAA_ELSI-test_GMAA_MAA_ELSI.Tpo $(DEPDIR)/tst_GMAA_MAA_ELSI-test_GMAA_MAA_ELSI.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_GMAA_MAA_ELSI.cpp' object='tst_GMAA_MAA_ELSI-test_GMAA_MAA_ELSI.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_GMAA_MAA_ELSI_CPPFLAGS) $(CPPFLAGS) $(tst_GMAA_MAA_ELSI_CXXFLAGS) $(CXXFLAGS) -c -o tst_GMAA_MAA_ELSI-test_GMAA_MAA_ELSI.obj `if test -f 'test_GMAA_MAA_ELSI.cpp'; then $(CYGPATH_W) 'test_GMAA_MAA_ELSI.cpp'; else $(CYGPATH_W) '$(srcdir)/test_GMAA_MAA_ELSI.cpp'; fi`

tst_GMAA_MAAstar-test_GMAA_MAAstar.o: test_GMAA_MAAstar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_GMAA_MAAstar_CPPFLAGS) $(CPPFLAGS) $(tst_GMAA_MAAstar_CXXFLAGS) $(CXXFLAGS) -MT tst_GMAA_MAAstar-test_GMAA_MAAstar.o -MD -MP -MF $(DEPDIR)/tst_GMAA_MAAstar-test_GMAA_MAAstar.Tpo -c -o tst_GMAA_MAAstar-test_GMAA_MAAstar.o `test -f 'test_GMAA_MAAstar.cpp' || echo '$(srcdir)/'`test_GMAA_MAAstar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/tst_GMAA_MAAstar-test_GMAA_MAAstar.Tpo $(DEPDIR)/tst_GMAA_MAAstar-test_GMAA_MAAstar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_GMAA_MAAstar.cpp' object='tst_GMAA_MAAstar-test_GMAA_MAAstar.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_GMAA_MAAstar_CPPFLAGS) $(CPPFLAGS) $(tst_GMAA_MAAstar_CXXFLAGS) $(CXXFLAGS) -c -o tst_GMAA_MAAstar-test_GMAA_MAAstar.o `test -f 'test_GMAA_MAAstar.cpp' || echo '$(srcdir)/'`test_GMAA_MAAstar.cpp

tst_GMAA_MAAstar-test_GMAA_MAAstar.obj: test_GMAA_MAAstar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_GMAA_MAAstar_CPPFLAGS) $(CPPFLAGS) $(tst_GMAA_MAAstar_CXXFLAGS) $(CXXFLAGS) -MT tst_GMAA_MAAstar-test_GMAA_MAAstar.obj -MD -MP -MF $(DEPDIR)/tst_GMAA_MAAstar-test_GMAA_MAAstar.Tpo -c -o tst_GMAA_MAAstar-test_GMAA_MAAstar.obj `if test -f 'test_GMAA_MAAstar.cpp'; then $(CYGPATH_W) 'test_GMAA_MAAstar.cpp'; else $(CYGPATH_W) '$(srcdir)/test_GMAA_MAAstar.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/tst_GMAA_MAAstar-test_GMAA_MAAstar.Tpo $(DEPDIR)/tst_GMAA_MAAstar-test_GMAA_MAAstar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_GMAA_MAAstar.cpp' object='tst_GMAA_MAAstar-test_GMAA_MAAstar.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_GMAA_MAAstar_CPPFLAGS) $(CPPFLAGS) $(tst_GMAA_MAAstar_CXXFLAGS) $(CXXFLAGS) -c -o tst_GMAA_MAAstar-test_GMAA_MAAstar.obj `if test -f 'test_GMAA_MAAstar.cpp'; then $(CYGPATH_W) 'test_GMAA_MAAstar.cpp'; else $(CYGPATH_W) '$(srcdir)/test_GMAA_MAAstar.cpp'; fi`

tst_GMAA_MAAstarCluster-test_GMAA_MAAstarCluster.o: test_GMAA_MAAstarCluster.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_GMAA_MAAstarCluster_CPPFLAGS) $(CPPFLAGS) $(tst_GMAA_MAAstarCluster_CXXFLAGS) $(CXXFLAGS) -MT tst_GMAA_MAAstarCluster-test_GMAA_MAAstarCluster.o -MD -MP -MF $(DEPDIR)/tst_GMAA_MAAstarCluster-test_GMAA_MAAstarCluster.Tpo -c -o tst_GMAA_MAAstarCluster-test_GMAA_MAAstarCluster.o `test -f 'test_GMAA_MAAstarCluster.cpp' || echo '$(srcdir)/'`test_GMAA_MAAstarCluster.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/tst_GMAA_MAAstarCluster-test_GMAA_MAAstarCluster.Tpo $(DEPDIR)/tst_GMAA_MAAstarCluster-test_GMAA_MAAstarCluster.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_GMAA_MAAstarCluster.cpp' object='tst_GMAA_MAAstarCluster-test_GMAA_MAAstarCluster.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_GMAA_MAAstarCluster_CPPFLAGS) $(CPPFLAGS) $(tst_GMAA_MAAstarCluster_CXXFLAGS) $(CXXFLAGS) -c -o tst_GMAA_MAAstarCluster-test_GMAA_MAAstarCluster.o `test -f 'test_GMAA_MAAstarCluster.cpp' || echo '$(srcdir)/'`test_GMAA_MAAstarCluster.cpp

tst_GMAA_MAAstarCluster-test_GMAA_MAAstarCluster.obj: test_GMAA_MAAstarCluster.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_GMAA_MAAstarCluster_CPPFLAGS) $(CPPFLAGS) $(tst_GMAA_MAAstarCluster_CXXFLAGS) $(CXXFLAGS) -MT tst_GMAA_MAAstarCluster-test_GMAA_MAAstarCluster.obj -MD -MP -MF $(DEPDIR)/tst_GMAA_MAAstarCluster-test_GMAA_MAAstarCluster.Tpo -c -o tst_GMAA_MAAstarCluster-test_GMAA_MAAstarCluster.obj `if test -f 'test_GMAA_MAAstarCluster.cpp'; then $(CYGPATH_W) 'test_GMAA_MAAstarCluster.cpp'; else $(CYGPATH_W) '$(srcdir)/test_GMAA_MAAstarCluster.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/tst_GMAA_MAAstarCluster-test_GMAA_MAAstarCluster.Tpo $(DEPDIR)/tst_GMAA_MAAstarCluster-test_GMAA_MAAstarCluster.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_GMAA_MAAstarCluster.cpp' object='tst_GMAA_MAAstarCluster-test_GMAA_MAAstarCluster.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_GMAA_MAAstarCluster_CPPFLAGS) $(CPPFLAGS) $(tst_GMAA_MAAstarCluster_CXXFLAGS) $(CXXFLAGS) -c -o tst_GMAA_MAAstarCluster-test_GMAA_MAAstarCluster.obj `if test -f 'test_GMAA_MAAstarCluster.cpp'; then $(CYGPATH_W) 'test_GMAA_MAAstarCluster.cpp'; else $(CYGPATH_W) '$(srcdir)/test_GMAA_MAAstarCluster.cpp'; fi`

tst_OptimalValue-test_OptimalValue.o: test_OptimalValue.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_OptimalValue_CPPFLAGS) $(CPPFLAGS) $(tst_OptimalValue_CXXFLAGS) $(CXXFLAGS) -MT tst_OptimalValue-test_OptimalValue.o -MD -MP -MF $(DEPDIR)/tst_OptimalValue-test_OptimalValue.Tpo -c -o tst_OptimalValue-test_OptimalValue.o `test -f 'test_OptimalValue.cpp' || echo '$(srcdir)/'`test_OptimalValue.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/tst_OptimalValue-test_OptimalValue.Tpo $(DEPDIR)/tst_OptimalValue-test_OptimalValue.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_OptimalValue.cpp' object='tst_OptimalValue-test_OptimalValue.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_OptimalValue_CPPFLAGS) $(CPPFLAGS) $(tst_OptimalValue_CXXFLAGS) $(CXXFLAGS) -c -o tst_OptimalValue-test_OptimalValue.o `test -f 'test_OptimalValue.cpp' || echo '$(srcdir)/'`test_OptimalValue.cpp

tst_OptimalValue-test_OptimalValue.obj: test_OptimalValue.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_OptimalValue_CPPFLAGS) $(CPPFLAGS) $(tst_OptimalValue_CXXFLAGS) $(CXXFLAGS) -MT tst_OptimalValue-test_OptimalValue.obj -MD -MP -MF $(DEPDIR)/tst_OptimalValue-test_OptimalValue.Tpo -c -o tst_OptimalValue-test_OptimalValue.obj `if test -f 'test_OptimalValue.cpp'; then $(CYGPATH_W) 'test_OptimalValue.cpp'; else $(CYGPATH_W) '$(srcdir)/test_OptimalValue.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/tst_OptimalValue-test_OptimalValue.Tpo $(DEPDIR)/tst_OptimalValue-test_OptimalValue.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_OptimalValue.cpp' object='tst_OptimalValue-test_OptimalValue.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_OptimalValue_CPPFLAGS) $(CPPFLAGS) $(tst_OptimalValue_CXXFLAGS) $(CXXFLAGS) -c -o tst_OptimalValue-test_OptimalValue.obj `if test -f 'test_OptimalValue.cpp'; then $(CYGPATH_W) 'test_OptimalValue.cpp'; else $(CYGPATH_W) '$(srcdir)/test_OptimalValue.cpp'; fi`

tst_ProblemFireFightingGraph-test_ProblemFireFightingGraph.o: test_ProblemFireFightingGraph.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_ProblemFireFightingGraph_CPPFLAGS) $(CPPFLAGS) $(tst_ProblemFireFightingGraph_CXXFLAGS) $(CXXFLAGS) -MT tst_ProblemFireFightingGraph-test_ProblemFireFightingGraph.o -MD -MP -MF $(DEPDIR)/tst_ProblemFireFightingGraph-test_ProblemFireFightingGraph.Tpo -c -o tst_ProblemFireFightingGraph-test_ProblemFireFightingGraph.o `test -f 'test_ProblemFireFightingGraph.cpp' || echo '$(srcdir)/'`test_ProblemFireFightingGraph.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/tst_ProblemFireFightingGraph-test_ProblemFireFightingGraph.Tpo $(DEPDIR)/tst_ProblemFireFightingGraph-test_ProblemFireFightingGraph.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_ProblemFireFightingGraph.cpp' object='tst_ProblemFireFightingGraph-test_ProblemFireFightingGraph.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_ProblemFireFightingGraph_CPPFLAGS) $(CPPFLAGS) $(tst_ProblemFireFightingGraph_CXXFLAGS) $(CXXFLAGS) -c -o tst_ProblemFireFightingGraph-test_ProblemFireFightingGraph.o `test -f 'test_ProblemFireFightingGraph.cpp' || echo '$(srcdir)/'`test_ProblemFireFightingGraph.cpp

tst_ProblemFireFightingGraph-test_ProblemFireFightingGraph.obj: test_ProblemFireFightingGraph.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_ProblemFireFightingGraph_CPPFLAGS) $(CPPFLAGS) $(tst_ProblemFireFightingGraph_CXXFLAGS) $(CXXFLAGS) -MT tst_ProblemFireFightingGraph-test_ProblemFireFightingGraph.obj -MD -MP -MF $(DEPDIR)/tst_ProblemFireFightingGraph-test_ProblemFireFightingGraph.Tpo -c -o tst_ProblemFireFightingGraph-test_ProblemFireFightingGraph.obj `if test -f 'test_ProblemFireFightingGraph.cpp'; then $(CYGPATH_W) 'test_ProblemFireFightingGraph.cpp'; else $(CYGPATH_W) '$(srcdir)/test_ProblemFireFightingGraph.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/tst_ProblemFireFightingGraph-test_ProblemFireFightingGraph.Tpo $(DEPDIR)/tst_ProblemFireFightingGraph-test_ProblemFireFightingGraph.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_ProblemFireFightingGraph.cpp' object='tst_ProblemFireFightingGraph-test_ProblemFireFightingGraph.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_ProblemFireFightingGraph_CPPFLAGS) $(CPPFLAGS) $(tst_ProblemFireFightingGraph_CXXFLAGS) $(CXXFLAGS) -c -o tst_ProblemFireFightingGraph-test_ProblemFireFightingGraph.obj `if test -f 'test_ProblemFireFightingGraph.cpp'; then $(CYGPATH_W) 'test_ProblemFireFightingGraph.cpp'; else $(CYGPATH_W) '$(srcdir)/test_ProblemFireFightingGraph.cpp'; fi`

tst_bgipsolving-test_bgipsolving.o: test_bgipsolving.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_bgipsolving_CPPFLAGS) $(CPPFLAGS) $(tst_bgipsolving_CXXFLAGS) $(CXXFLAGS) -MT tst_bgipsolving-test_bgipsolving.o -MD -MP -MF $(DEPDIR)/tst_bgipsolving-test_bgipsolving.Tpo -c -o tst_bgipsolving-test_bgipsolving.o `test -f 'test_bgipsolving.cpp' || echo '$(srcdir)/'`test_bgipsolving.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/tst_bgipsolving-test_bgipsolving.Tpo $(DEPDIR)/tst_bgipsolving-test_bgipsolving.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_bgipsolving.cpp' object='tst_bgipsolving-test_bgipsolving.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_bgipsolving_CPPFLAGS) $(CPPFLAGS) $(tst_bgipsolving_CXXFLAGS) $(CXXFLAGS) -c -o tst_bgipsolving-test_bgipsolving.o `test -f 'test_bgipsolving.cpp' || echo '$(srcdir)/'`test_bgipsolving.cpp

tst_bgipsolving-test_bgipsolving.obj: test_bgipsolving.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_bgipsolving_CPPFLAGS) $(CPPFLAGS) $(tst_bgipsolving_CXXFLAGS) $(CXXFLAGS) -MT tst_bgipsolving-test_bgipsolving.obj -MD -MP -MF $(DEPDIR)/tst_bgipsolving-test_bgipsolving.Tpo -c -o tst_bgipsolving-test_bgipsolving.obj `if test -f 'test_bgipsolving.cpp'; then $(CYGPATH_W) 'test_bgipsolving.cpp'; else $(CYGPATH_W) '$(srcdir)/test_bgipsolving.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/tst_bgipsolving-test_bgipsolving.Tpo $(DEPDIR)/tst_bgipsolving-test_bgipsolving.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_bgipsolving.cpp' object='tst_bgipsolving-test_bgipsolving.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_bgipsolving_CPPFLAGS) $(CPPFLAGS) $(tst_bgipsolving_CXXFLAGS) $(CXXFLAGS) -c -o tst_bgipsolving-test_bgipsolving.obj `if test -f 'test_bgipsolving.cpp'; then $(CYGPATH_W) 'test_bgipsolving.cpp'; else $(CYGPATH_W) '$(srcdir)/test_bgipsolving.cpp'; fi`

tst_jpol_index-test_jpol_index.o: test_jpol_index.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_jpol_index_CPPFLAGS) $(CPPFLAGS) $(tst_jpol_index_CXXFLAGS) $(CXXFLAGS) -MT tst_jpol_index-test_jpol_index.o -MD -MP -MF $(DEPDIR)/tst_jpol_index-test_jpol_index.Tpo -c -o tst_jpol_index-test_jpol_index.o `test -f 'test_jpol_index.cpp' || echo '$(srcdir)/'`test_jpol_index.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/tst_jpol_index-test_jpol_index.Tpo $(DEPDIR)/tst_jpol_index-test_jpol_index.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_jpol_index.cpp' object='tst_jpol_index-test_jpol_index.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_jpol_index_CPPFLAGS) $(CPPFLAGS) $(tst_jpol_index_CXXFLAGS) $(CXXFLAGS) -c -o tst_jpol_index-test_jpol_index.o `test -f 'test_jpol_index.cpp' || echo '$(srcdir)/'`test_jpol_index.cpp

tst_jpol_index-test_jpol_index.obj: test_jpol_index.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_jpol_index_CPPFLAGS) $(CPPFLAGS) $(tst_jpol_index_CXXFLAGS) $(CXXFLAGS) -MT tst_jpol_index-test_jpol_index.obj -MD -MP -MF $(DEPDIR)/tst_jpol_index-test_jpol_index.Tpo -c -o tst_jpol_index-test_jpol_index.obj `if test -f 'test_jpol_index.cpp'; then $(CYGPATH_W) 'test_jpol_index.cpp'; else $(CYGPATH_W) '$(srcdir)/test_jpol_index.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/tst_jpol_index-test_jpol_index.Tpo $(DEPDIR)/tst_jpol_index-test_jpol_index.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_jpol_index.cpp' object='tst_jpol_index-test_jpol_index.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_jpol_index_CPPFLAGS) $(CPPFLAGS) $(tst_jpol_index_CXXFLAGS) $(CXXFLAGS) -c -o tst_jpol_index-test_jpol_index.obj `if test -f 'test_jpol_index.cpp'; then $(CYGPATH_W) 'test_jpol_index.cpp'; else $(CYGPATH_W) '$(srcdir)/test_jpol_index.cpp'; fi`

tst_np-test_no_parse.o: test_no_parse.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_np_CPPFLAGS) $(CPPFLAGS) $(tst_np_CXXFLAGS) $(CXXFLAGS) -MT tst_np-test_no_parse.o -MD -MP -MF $(DEPDIR)/tst_np-test_no_parse.Tpo -c -o tst_np-test_no_parse.o `test -f 'test_no_parse.cpp' || echo '$(srcdir)/'`test_no_parse.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/tst_np-test_no_parse.Tpo $(DEPDIR)/tst_np-test_no_parse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_no_parse.cpp' object='tst_np-test_no_parse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_np_CPPFLAGS) $(CPPFLAGS) $(tst_np_CXXFLAGS) $(CXXFLAGS) -c -o tst_np-test_no_parse.o `test -f 'test_no_parse.cpp' || echo '$(srcdir)/'`test_no_parse.cpp

tst_np-test_no_parse.obj: test_no_parse.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_np_CPPFLAGS) $(CPPFLAGS) $(tst_np_CXXFLAGS) $(CXXFLAGS) -MT tst_np-test_no_parse.obj -MD -MP -MF $(DEPDIR)/tst_np-test_no_parse.Tpo -c -o tst_np-test_no_parse.obj `if test -f 'test_no_parse.cpp'; then $(CYGPATH_W) 'test_no_parse.cpp'; else $(CYGPATH_W) '$(srcdir)/test_no_parse.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/tst_np-test_no_parse.Tpo $(DEPDIR)/tst_np-test_no_parse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_no_parse.cpp' object='tst_np-test_no_parse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_np_CPPFLAGS) $(CPPFLAGS) $(tst_np_CXXFLAGS) $(CXXFLAGS) -c -o tst_np-test_no_parse.obj `if test -f 'test_no_parse.cpp'; then $(CYGPATH_W) 'test_no_parse.cpp'; else $(CYGPATH_W) '$(srcdir)/test_no_parse.cpp'; fi`

tst_parse-test_parse.o: test_parse.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_parse_CPPFLAGS) $(CPPFLAGS) $(tst_parse_CXXFLAGS) $(CXXFLAGS) -MT tst_parse-test_parse.o -MD -MP -MF $(DEPDIR)/tst_parse-test_parse.Tpo -c -o tst_parse-test_parse.o `test -f 'test_parse.cpp' || echo '$(srcdir)/'`test_parse.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/tst_parse-test_parse.Tpo $(DEPDIR)/tst_parse-test_parse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_parse.cpp' object='tst_parse-test_parse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_parse_CPPFLAGS) $(CPPFLAGS) $(tst_parse_CXXFLAGS) $(CXXFLAGS) -c -o tst_parse-test_parse.o `test -f 'test_parse.cpp' || echo '$(srcdir)/'`test_parse.cpp

tst_parse-test_parse.obj: test_parse.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_parse_CPPFLAGS) $(CPPFLAGS) $(tst_parse_CXXFLAGS) $(CXXFLAGS) -MT tst_parse-test_parse.obj -MD -MP -MF $(DEPDIR)/tst_parse-test_parse.Tpo -c -o tst_parse-test_parse.obj `if test -f 'test_parse.cpp'; then $(CYGPATH_W) 'test_parse.cpp'; else $(CYGPATH_W) '$(srcdir)/test_parse.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/tst_parse-test_parse.Tpo $(DEPDIR)/tst_parse-test_parse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_parse.cpp' object='tst_parse-test_parse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_parse_CPPFLAGS) $(CPPFLAGS) $(tst_parse_CXXFLAGS) $(CXXFLAGS) -c -o tst_parse-test_parse.obj `if test -f 'test_parse.cpp'; then $(CYGPATH_W) 'test_parse.cpp'; else $(CYGPATH_W) '$(srcdir)/test_parse.cpp'; fi`

tst_pomdp-test_pomdp.o: test_pomdp.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_pomdp_CPPFLAGS) $(CPPFLAGS) $(tst_pomdp_CXXFLAGS) $(CXXFLAGS) -MT tst_pomdp-test_pomdp.o -MD -MP -MF $(DEPDIR)/tst_pomdp-test_pomdp.Tpo -c -o tst_pomdp-test_pomdp.o `test -f 'test_pomdp.cpp' || echo '$(srcdir)/'`test_pomdp.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/tst_pomdp-test_pomdp.Tpo $(DEPDIR)/tst_pomdp-test_pomdp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_pomdp.cpp' object='tst_pomdp-test_pomdp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_pomdp_CPPFLAGS) $(CPPFLAGS) $(tst_pomdp_CXXFLAGS) $(CXXFLAGS) -c -o tst_pomdp-test_pomdp.o `test -f 'test_pomdp.cpp' || echo '$(srcdir)/'`test_pomdp.cpp

tst_pomdp-test_pomdp.obj: test_pomdp.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_pomdp_CPPFLAGS) $(CPPFLAGS) $(tst_pomdp_CXXFLAGS) $(CXXFLAGS) -MT tst_pomdp-test_pomdp.obj -MD -MP -MF $(DEPDIR)/tst_pomdp-test_pomdp.Tpo -c -o tst_pomdp-test_pomdp.obj `if test -f 'test_pomdp.cpp'; then $(CYGPATH_W) 'test_pomdp.cpp'; else $(CYGPATH_W) '$(srcdir)/test_pomdp.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/tst_pomdp-test_pomdp.Tpo $(DEPDIR)/tst_pomdp-test_pomdp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_pomdp.cpp' object='tst_pomdp-test_pomdp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_pomdp_CPPFLAGS) $(CPPFLAGS) $(tst_pomdp_CXXFLAGS) $(CXXFLAGS) -c -o tst_pomdp-test_pomdp.obj `if test -f 'test_pomdp.cpp'; then $(CYGPATH_W) 'test_pomdp.cpp'; else $(CYGPATH_W) '$(srcdir)/test_pomdp.cpp'; fi`

tst_sim-test_simulation.o: test_simulation.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_sim_CPPFLAGS) $(CPPFLAGS) $(tst_sim_CXXFLAGS) $(CXXFLAGS) -MT tst_sim-test_simulation.o -MD -MP -MF $(DEPDIR)/tst_sim-test_simulation.Tpo -c -o tst_sim-test_simulation.o `test -f 'test_simulation.cpp' || echo '$(srcdir)/'`test_simulation.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/tst_sim-test_simulation.Tpo $(DEPDIR)/tst_sim-test_simulation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_simulation.cpp' object='tst_sim-test_simulation.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_sim_CPPFLAGS) $(CPPFLAGS) $(tst_sim_CXXFLAGS) $(CXXFLAGS) -c -o tst_sim-test_simulation.o `test -f 'test_simulation.cpp' || echo '$(srcdir)/'`test_simulation.cpp

tst_sim-test_simulation.obj: test_simulation.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_sim_CPPFLAGS) $(CPPFLAGS) $(tst_sim_CXXFLAGS) $(CXXFLAGS) -MT tst_sim-test_simulation.obj -MD -MP -MF $(DEPDIR)/tst_sim-test_simulation.Tpo -c -o tst_sim-test_simulation.obj `if test -f 'test_simulation.cpp'; then $(CYGPATH_W) 'test_simulation.cpp'; else $(CYGPATH_W) '$(srcdir)/test_simulation.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/tst_sim-test_simulation.Tpo $(DEPDIR)/tst_sim-test_simulation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_simulation.cpp' object='tst_sim-test_simulation.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tst_sim_CPPFLAGS) $(CPPFLAGS) $(tst_sim_CXXFLAGS) $(CXXFLAGS) -c -o tst_sim-test_simulation.obj `if test -f 'test_simulation.cpp'; then $(CYGPATH_W) 'test_simulation.cpp'; else $(CYGPATH_W) '$(srcdir)/test_simulation.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	else \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS) $(dist_check_SCRIPTS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
tst_jpol_index.log: tst_jpol_index$(EXEEXT)
	@p='tst_jpol_index$(EXEEXT)'; \
	b='tst_jpol_index'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tst_OptimalValue.log: tst_OptimalValue$(EXEEXT)
	@p='tst_OptimalValue$(EXEEXT)'; \
	b='tst_OptimalValue'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
runGMAA-GMAAstarClassic-QQMDP_DecTiger.sh.log: runGMAA-GMAAstarClassic-QQMDP_DecTiger.sh
	@p='runGMAA-GMAAstarClassic-QQMDP_DecTiger.sh'; \
	b='runGMAA-GMAAstarClassic-QQMDP_DecTiger.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
runGMAA-GMAAstar-BBFS-QQPOMDP-Aloha.sh.log: runGMAA-GMAAstar-BBFS-QQPOMDP-Aloha.sh
	@p='runGMAA-GMAAstar-BBFS-QQPOMDP-Aloha.sh'; \
	b='runGMAA-GMAAstar-BBFS-QQPOMDP-Aloha.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
runGMAA-IC-GMAAstarClassic-GBnB-QQBG-FFG.sh.log: runGMAA-IC-GMAAstarClassic-GBnB-QQBG-FFG.sh
	@p='runGMAA-IC-GMAAstarClassic-GBnB-QQBG-FFG.sh'; \
	b='runGMAA-IC-GMAAstarClassic-GBnB-QQBG-FFG.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
runGMAA-IC-GMAAstar-BBnb-QQMDPc-FFF.sh.log: runGMAA-IC-GMAAstar-BBnb-QQMDPc-FFF.sh
	@p='runGMAA-IC-GMAAstar-BBnb-QQMDPc-FFF.sh'; \
	b='runGMAA-IC-GMAAstar-BBnb-QQMDPc-FFF.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
runGMAA_ICE-GMAAstar-BBFS-QQPOMDPhybrid-GridSmall.sh.log: runGMAA_ICE-GMAAstar-BBFS-QQPOMDPhybrid-GridSmall.sh
	@p='runGMAA_ICE-GMAAstar-BBFS-QQPOMDPhybrid-GridSmall.sh'; \
	b='runGMAA_ICE-GMAAstar-BBFS-QQPOMDPhybrid-GridSmall.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
runGMAA-ICE-GMAAstar-BBnB-QQBGav-2generals.sh.log: runGMAA-ICE-GMAAstar-BBnB-QQBGav-2generals.sh
	@p='runGMAA-ICE-GMAAstar-BBnB-QQBGav-2generals.sh'; \
	b='runGMAA-ICE-GMAAstar-BBnB-QQBGav-2generals.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
runGMAA-GMAAstarClassic-QQBG-dectiger_skewed.sh.log: runGMAA-GMAAstarClassic-QQBG-dectiger_skewed.sh
	@p='runGMAA-GMAAstarClassic-QQBG-dectiger_skewed.sh'; \
	b='runGMAA-GMAAstarClassic-QQBG-dectiger_skewed.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
runGMAA-GMAAstarClassic-QQBGhybrid-recycling.sh.log: runGMAA-GMAAstarClassic-QQBGhybrid-recycling.sh
	@p='runGMAA-GMAAstarClassic-QQBGhybrid-recycling.sh'; \
	b='runGMAA-GMAAstarClassic-QQBGhybrid-recycling.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
runGMAA-GMAAstarClassic-QQBGTreeIncPrune-relay4.sh.log: runGMAA-GMAAstarClassic-QQBGTreeIncPrune-relay4.sh
	@p='runGMAA-GMAAstarClassic-QQBGTreeIncPrune-relay4.sh'; \
	b='runGMAA-GMAAstarClassic-QQBGTreeIncPrune-relay4.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
runGMAA-IC-GMAAstar-QQBGTreeIncPrune-dectiger.sh.log: runGMAA-IC-GMAAstar-QQBGTreeIncPrune-dectiger.sh
	@p='runGMAA-IC-GMAAstar-QQBGTreeIncPrune-dectiger.sh'; \
	b='runGMAA-IC-GMAAstar-QQBGTreeIncPrune-dectiger.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
runGMAA-IC-GMAAstar-QQBGav-prisoners.sh.log: runGMAA-IC-GMAAstar-QQBGav-prisoners.sh
	@p='runGMAA-IC-GMAAstar-QQBGav-prisoners.sh'; \
	b='runGMAA-IC-GMAAstar-QQBGav-prisoners.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
runGMAA-GMAAstar-BBFS-QQMDPc-broadcastChannel.sh.log: runGMAA-GMAAstar-BBFS-QQMDPc-broadcastChannel.sh
	@p='runGMAA-GMAAstar-BBFS-QQMDPc-broadcastChannel.sh'; \
	b='runGMAA-GMAAstar-BBFS-QQMDPc-broadcastChannel.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
runGMAA-ELSI-QQBG-FFG.sh.log: runGMAA-ELSI-QQBG-FFG.sh
	@p='runGMAA-ELSI-QQBG-FFG.sh'; \
	b='runGMAA-ELSI-QQBG-FFG.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
runGMAA-ICE-GMAAstar-DTPGMX.sh.log: runGMAA-ICE-GMAAstar-DTPGMX.sh
	@p='runGMAA-ICE-GMAAstar-DTPGMX.sh'; \
	b='runGMAA-ICE-GMAAstar-DTPGMX.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
runGMAA-ICE-GMAAstar-FFG343.sh.log: runGMAA-ICE-GMAAstar-FFG343.sh
	@p='runGMAA-ICE-GMAAstar-FFG343.sh'; \
	b='runGMAA-ICE-GMAAstar-FFG343.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
runGMAA-GFSPC-BMP-ALoha.sh.log: runGMAA-GFSPC-BMP-ALoha.sh
	@p='runGMAA-GFSPC-BMP-ALoha.sh'; \
	b='runGMAA-GFSPC-BMP-ALoha.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
runPerseus-b0-DT.sh.log: runPerseus-b0-DT.sh
	@p='runPerseus-b0-DT.sh'; \
	b='runPerseus-b0-DT.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
runPerseus-b1-DT.sh.log: runPerseus-b1-DT.sh
	@p='runPerseus-b1-DT.sh'; \
	b='runPerseus-b1-DT.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
runDICEPS-twoCorridors.sh.log: runDICEPS-twoCorridors.sh
	@p='runDICEPS-twoCorridors.sh'; \
	b='runDICEPS-twoCorridors.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
runMMDP_QLearner_DT.sh.log: runMMDP_QLearner_DT.sh
	@p='runMMDP_QLearner_DT.sh'; \
	b='runMMDP_QLearner_DT.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
runBFS-DT.sh.log: runBFS-DT.sh
	@p='runBFS-DT.sh'; \
	b='runBFS-DT.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tst_parse.sh.log: tst_parse.sh
	@p='tst_parse.sh'; \
	b='tst_parse.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tst_np.sh.log: tst_np.sh
	@p='tst_np.sh'; \
	b='tst_np.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tst_BGIP_Solvers.sh.log: tst_BGIP_Solvers.sh
	@p='tst_BGIP_Solvers.sh'; \
	b='tst_BGIP_Solvers.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS) \
	  $(dist_check_SCRIPTS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-recursive
all-am: Makefile $(LIBRARIES) $(LTLIBRARIES) $(PROGRAMS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libLIBRARIES clean-libLTLIBRARIES clean-libtool \
	clean-noinstLTLIBRARIES clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLIBRARIES \
	install-libLTLIBRARIES

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-libLIBRARIES \
	uninstall-libLTLIBRARIES

.MAKE: $(am__recursive_targets) check-am install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-TESTS check-am clean clean-binPROGRAMS \
	clean-checkPROGRAMS clean-generic clean-libLIBRARIES \
	clean-libLTLIBRARIES clean-libtool clean-noinstLTLIBRARIES \
	clean-noinstPROGRAMS cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLIBRARIES install-libLTLIBRARIES \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-libLIBRARIES \
	uninstall-libLTLIBRARIES


cleantags: cleantags-recursive

cleantags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) cleantags) || exit 1; \
	done; \
	rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags; \
	rm -f cscope.out cscope.in.out cscope.po.out cscope.files

debug:	$(PROGRAMS_DEBUG)

normal:	$(PROGRAMS_NORMAL)	

profile:$(PROGRAMS_PROFILE)	

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
